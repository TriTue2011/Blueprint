{"createdAt":"2025-08-22T16:54:45.559Z","updatedAt":"2025-08-28T17:07:29.348Z","id":"7BRZJfTUcRLdd0gg","name":"My workflow 7","active":false,"isArchived":true,"nodes":[{"parameters":{"options":{}},"id":"da5cbecb-cfec-41a6-8d78-cca9e376a7a8","name":"Loop Over Items","type":"n8n-nodes-base.splitInBatches","position":[144,992],"typeVersion":3},{"parameters":{},"id":"cf9b7bd7-06a8-467f-90b3-3f4173d1d626","name":"Replace Me","type":"n8n-nodes-base.noOp","position":[1008,1376],"typeVersion":1},{"parameters":{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"conditions":[{"id":"2f466934-e257-4315-8a7f-5e3dde987430","operator":{"name":"filter.operator.equals","type":"string","operation":"equals"},"leftValue":"={{ $json.labelIds[2] }}","rightValue":"={{ $json.labelIds[2] }}"}],"combinator":"and"},"options":{}},"id":"f730618a-51d8-4ae9-b281-0d9b39449166","name":"If","type":"n8n-nodes-base.if","position":[496,1216],"typeVersion":2.2},{"parameters":{},"id":"1cfd1b42-371d-4188-ab22-c6734df098e5","name":"Merge","type":"n8n-nodes-base.merge","position":[656,1024],"typeVersion":3.1},{"parameters":{"operation":"getAll","limit":20,"simple":false,"filters":{"readStatus":"both"},"options":{}},"id":"730458e5-44a3-4ac2-a11b-d35fe912347f","name":"Gmail - Get All Messages","type":"n8n-nodes-base.gmail","position":[832,768],"webhookId":"a501a86b-b2df-45ec-b0d9-178765859a0f","typeVersion":2.1,"credentials":{"gmailOAuth2":{"id":"RgYFdPUJ820D4HyQ","name":"nguyenvanviet"}}},{"parameters":{"operation":"get","messageId":"={{ $json.id }}","simple":false,"options":{}},"id":"c2a86983-364c-4534-a655-b5db1da00c31","name":"Gmail - Single Message","type":"n8n-nodes-base.gmail","position":[384,1008],"webhookId":"ebc7d7c4-aece-4cd4-a46f-dff18891931e","typeVersion":2.1,"credentials":{"gmailOAuth2":{"id":"RgYFdPUJ820D4HyQ","name":"nguyenvanviet"}}},{"parameters":{"content":"## Auto Gmail Labeling (Powered by OpenAI)","height":996,"width":1692},"id":"22634ee8-14b0-4ac4-926c-d1d9b6ed555f","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[0,656],"typeVersion":1},{"parameters":{"assignments":{"assignments":[{"id":"2e246278-eccb-4cd5-8c93-7daa824066e3","name":"id","type":"string","value":"={{ $json.id }}"},{"id":"06e5dde5-dfce-4d4d-859d-b364301cb5aa","name":"from","type":"string","value":"={{ $json.headers.from }}"},{"id":"e10231b9-fbb1-447a-a3fc-3ba8e5a9d314","name":"headers.subject","type":"string","value":"={{ $json.headers.subject }}"},{"id":"6a472d41-0f6e-4803-8d94-4b4f8272e66c","name":"text","type":"string","value":"={{ $json.text }}"}]},"options":{}},"id":"8f7302a3-110f-4fd2-b104-d0ba7a4e7a97","name":"Extract Email Data","type":"n8n-nodes-base.set","position":[848,1024],"typeVersion":3.4},{"parameters":{"promptType":"define","text":"=Here is the email details:\nFrom: { $('Merge').item.json.headers.from }}\nSubject line: {{ $json.headers.subject }}\nEmail Body: \n{{ $json.text }}","hasOutputParser":true,"options":{"systemMessage":"You are my Personal Email Labeler.  \nWhen I feed you the subject and body of a new email, you must assign exactly one label—no extra text.\n\nAvailable labels:\n- Newsletter  \n- Inquiry  \n- Invoice  \n- Proposal  \n- Action Required  \n- Follow-up Reminder  \n- Task  \n- Personal  \n- Urgent  \n- Bank  \n- Job Update  \n- Spam / Junk  \n- Social / Networking  \n- Receipt  \n- Event Invite  \n- Subscription Renewal  \n- System Notification  \n\nLabel definitions:\n1. Newsletter  \n   • Subscription updates, promotions, digests.  \n   • No reply needed—just file away.  \n2. Inquiry  \n   • Sender asks a question or requests information.  \n   • Prioritize and suggest replying.  \n3. Invoice  \n   • Billing, receipts, payment requests.  \n   • Flag if payment is due.  \n4. Proposal  \n   • Business offers, contracts, collaboration pitches.  \n   • Flag for review; consider acknowledging receipt.  \n5. Action Required  \n   • Requests that demand you do something (book, confirm, complete).  \n   • Mark and suggest a reminder.  \n6. Follow-up Reminder  \n   • Emails reminding you of something pending or that you already acted on.  \n   • Suggest checking status or pinging again.  \n7. Task  \n   • Contains to-do items or project steps.  \n   • Extract tasks, prioritize by deadline.  \n8. Personal  \n   • From friends or family; non-work.  \n   • Keep accessible but low urgency unless marked urgent.  \n9. Urgent  \n   • Critical deadlines, emergencies, time-sensitive.  \n   • Bump to top of your inbox; reply ASAP.  \n10. Bank  \n    • Statements, alerts, transaction notices, fraud warnings from your bank.  \n    • Flag if action is needed (e.g., verify, transfer, dispute).  \n11. Job Update  \n    • Direct messages from recruiters/HR or alerts from job portals (LinkedIn, Naukri, etc.).  \n    • Flag as relevant opportunity; suggest acknowledging or bookmarking.  \n12. Spam / Junk  \n    • Unwanted bulk mail, phishing attempts, obvious ads.  \n    • Auto-archive or delete.  \n13. Social / Networking  \n    • Notifications from social sites (GitHub, Twitter, forums) not job-related.  \n    • File separately from Job Update.  \n14. Receipt  \n    • E-commerce order confirmations, tickets, one-off purchase receipts.  \n    • Archive after processing.  \n15. Event Invite  \n    • Calendar invitations or RSVPs (Google Meet, Zoom, Outlook).  \n    • Accept/decline or add to calendar.  \n16. Subscription Renewal  \n    • Reminders for software licenses, memberships, domain renewals.  \n    • Flag for manual renewal.  \n17. System Notification  \n    • Alerts from monitoring tools, CI/CD, cloud services, security scanners.  \n    • Triage or forward to team channel.\n\nRules:\n- Read subject + body.  \n- Choose the single best label.  \n- Output **only** that label."}},"id":"a11f1519-5a65-4c2f-ae95-ec7d950031d4","name":"Categorize Email with AI","type":"@n8n/n8n-nodes-langchain.agent","position":[1056,1024],"typeVersion":1.7},{"parameters":{"assignments":{"assignments":[{"id":"2494d69d-3e5e-42ba-88d2-b76ca1962881","name":"output","type":"string","value":"={{ $json.output }}"}]},"options":{}},"id":"f52c34d5-4781-43e7-80c7-cf441901265e","name":"Store AI Category","type":"n8n-nodes-base.set","position":[1440,1024],"typeVersion":3.4},{"parameters":{"resource":"label","returnAll":true},"id":"998c05d2-1aba-40a6-9ff0-4f3eadff3819","name":"List All Gmail Labels","type":"n8n-nodes-base.gmail","position":[160,1392],"webhookId":"5c3cbc0b-9239-4a17-a8ec-bc8819341e47","typeVersion":2.1,"credentials":{"gmailOAuth2":{"id":"RgYFdPUJ820D4HyQ","name":"nguyenvanviet"}}},{"parameters":{"mergeByFields":{"values":[{"field1":"output","field2":"name"}]},"fuzzyCompare":true,"options":{"multipleMatches":"first"}},"id":"fe1980ad-c00c-4808-a04b-6ccf9074f63c","name":"Check if Label Exists","type":"n8n-nodes-base.compareDatasets","position":[384,1328],"typeVersion":2.3},{"parameters":{"operation":"addLabels","messageId":"={{ $('Extract Email Data').item.json.id }}","labelIds":"={{ $json.different.id.inputB }}"},"id":"fd110e04-eca6-48fe-818f-d3fd4393615a","name":"Apply Label to Email","type":"n8n-nodes-base.gmail","position":[784,1376],"webhookId":"4a35699e-da45-48e9-8e12-d22b2dcca62e","typeVersion":2.1,"credentials":{"gmailOAuth2":{"id":"RgYFdPUJ820D4HyQ","name":"nguyenvanviet"}}},{"parameters":{"resource":"label","operation":"create","name":"={{ $('Store AI Category').item.json.output }}","options":{}},"id":"0931e4d6-8208-4134-b295-a60db22c4584","name":"Apply New Label","type":"n8n-nodes-base.gmail","position":[1440,1312],"webhookId":"a6722fdc-15cb-4796-b82d-53cc23060640","typeVersion":2.1,"credentials":{"gmailOAuth2":{"id":"RgYFdPUJ820D4HyQ","name":"nguyenvanviet"}}},{"parameters":{"operation":"addLabels","messageId":"={{ $('Extract Email Data').item.json.id }}","labelIds":"={{ $json.id }}"},"id":"b153315d-81fb-4617-8297-ebb9bd7cb199","name":"Create New Label","type":"n8n-nodes-base.gmail","position":[1216,1376],"webhookId":"9e401ad8-b89c-4015-a3cf-b1000ac51ae1","typeVersion":2.1,"credentials":{"gmailOAuth2":{"id":"RgYFdPUJ820D4HyQ","name":"nguyenvanviet"}}},{"parameters":{"jsCode":"const excludedLabelIds = [\n  \"Label_5\",   // Newsletter\n  \"Label_21\",  // Inquiry\n  \"Label_11\",  // Invoice\n  \"Label_9\",   // Proposal\n  \"Label_52\",  // Action Required\n  \"Label_55\",  // Follow-up Reminder\n  \"Label_53\",  // Task\n  \"Label_44\",  // Personal\n  \"Label_54\",  // Urgent\n  \"Label_12\",  // Bank\n  \"Label_3\",   // Job Update\n  \"Label_42\",  // Spam / Junk\n  \"Label_7\",   // Social / Networking\n  \"Label_8\",   // Receipt\n  \"Label_2\",   // Event Invite\n  \"Label_10\",  // Subscription Renewal\n  \"Label_4\"    // System Notification\n];\n\n\nreturn items.filter(item => {\n  const labels = item.json.labelIds || [];\n  // Exclude if ANY excluded label is present\n  return !labels.some(label => excludedLabelIds.includes(label));\n});\n"},"id":"e813b933-60a4-4a9c-8e31-faf7d2413bef","name":"Filter Emails Without Excluded Labels","type":"n8n-nodes-base.code","position":[1424,768],"typeVersion":2},{"parameters":{"jsCode":"// Kiểm tra dữ liệu đầu vào\nconst inputData = items[0];\nlet htmlContent = \"\";\n\n// Kiểm tra cấu trúc của dữ liệu đầu vào\nif (inputData && typeof inputData === 'object') {\n  // Nếu dữ liệu là một đối tượng, thử lấy thuộc tính 'data'\n  if (inputData.data) {\n    htmlContent = inputData.data;\n  } else if (inputData.json && inputData.json.data) {\n    // Thử lấy từ json.data nếu có\n    htmlContent = inputData.json.data;\n  } else {\n    // Thử tìm bất kỳ thuộc tính nào chứa chuỗi HTML\n    for (const key in inputData) {\n      if (typeof inputData[key] === 'string' && \n          (inputData[key].includes('<div') || inputData[key].includes('<table'))) {\n        htmlContent = inputData[key];\n        break;\n      }\n    }\n  }\n} else if (typeof inputData === 'string') {\n  // Nếu dữ liệu là một chuỗi, sử dụng trực tiếp\n  htmlContent = inputData;\n}\n\n// Xử lý HTML nếu có\nconst result = [];\nlet updateTime = \"\";\nlet dataSource = \"\";\n\nif (htmlContent && htmlContent.length > 0) {\n  try {\n    // Tìm tất cả các bảng trong HTML\n    const tableRegex = /<table[^>]*>[\\s\\S]*?<tbody>[\\s\\S]*?<\\/tbody>[\\s\\S]*?<\\/table>/g;\n    let tableMatch;\n    \n    while ((tableMatch = tableRegex.exec(htmlContent)) !== null) {\n      const tableContent = tableMatch[0];\n      const violation = {};\n      \n      // Tìm tất cả các hàng trong bảng\n      const rowRegex = /<tr>[\\s\\S]*?<td>(.*?)<\\/td>[\\s\\S]*?<td>([\\s\\S]*?)<\\/td>[\\s\\S]*?<\\/tr>/g;\n      let rowMatch;\n      \n      while ((rowMatch = rowRegex.exec(tableContent)) !== null) {\n        if (rowMatch.length >= 3) {\n          const key = rowMatch[1].replace(':', '').trim();\n          let value = rowMatch[2].trim();\n          \n          // Loại bỏ HTML tags từ giá trị\n          value = value.replace(/<button.*?<\\/button>/g, '');\n          value = value.replace(/<[^>]*>/g, ' ').replace(/\\s+/g, ' ').trim();\n          \n          // Chuyển đổi key thành camelCase\n          const camelKey = key\n            .normalize('NFD')\n            .replace(/[\\u0300-\\u036f]/g, '')\n            .replace(/đ/g, 'd')\n            .replace(/Đ/g, 'D')\n            .replace(/\\s+(.)/g, (match, group) => group.toUpperCase())\n            .replace(/\\s/g, '')\n            .replace(/^(.)/, (match, group) => group.toLowerCase());\n          \n          violation[camelKey] = value;\n        }\n      }\n      \n      // Chỉ thêm vi phạm nếu có ít nhất một trường dữ liệu\n      if (Object.keys(violation).length > 0) {\n        result.push(violation);\n      }\n    }\n    \n    // Trích xuất thời gian cập nhật\n    const updateTimeMatch = htmlContent.match(/Dữ liệu được cập nhật vào lúc: ([\\d:, -]+)/);\n    if (updateTimeMatch && updateTimeMatch[1]) {\n      updateTime = updateTimeMatch[1].trim();\n    }\n    \n    // Trích xuất nguồn dữ liệu\n    const sourceMatch = htmlContent.match(/Nguồn: <span[^>]*>(.*?)<\\/span>/);\n    if (sourceMatch && sourceMatch[1]) {\n      dataSource = sourceMatch[1].trim();\n    }\n    \n  } catch (error) {\n    return {\n      json: {\n        error: true,\n        message: `Lỗi khi xử lý dữ liệu: ${error.message}`\n      }\n    };\n  }\n}\n\n// Trả về kết quả\nreturn {\n  json: {\n    violations: result,\n    totalViolations: result.length,\n    licensePlate: result.length > 0 ? result[0].bienKiemSoat : '',\n    vehicleType: result.length > 0 ? result[0].loaiPhuongTien : '',\n    metadata: {\n      updateTime: updateTime,\n      dataSource: dataSource\n    }\n  }\n};"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[432,208],"id":"44686df7-6a62-4532-95b2-7f94fbf797f5","name":"Code"},{"parameters":{"rule":{"interval":[{"field":"minutes","minutesInterval":2}]}},"id":"fd805662-b70b-46a5-8ebc-51efd06ed043","name":"Schedule Gmail","type":"n8n-nodes-base.scheduleTrigger","position":[112,768],"typeVersion":1.2},{"parameters":{"rule":{"interval":[{"field":"hours"}]}},"id":"ca824c82-856c-4a31-9474-c29272aee5ea","name":"Schedule Phat nguoi","type":"n8n-nodes-base.scheduleTrigger","position":[96,224],"typeVersion":1.2},{"parameters":{"url":"=https://api.phatnguoi.vn/web/tra-cuu/34C32787/1","sendHeaders":true,"headerParameters":{"parameters":[{"name":"User-Agent","value":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:140.0) Gecko/20100101 Firefox/140.0"},{"name":"Accept","value":"*/*"},{"name":"Accept-Language","value":"en-US,en;q=0.5"},{"name":"Accept-Encoding","value":"gzip, deflate, br, zstd"},{"name":"Origin","value":"https://phatnguoi.vn"},{"name":"Connection","value":"keep-alive"},{"name":"Referer","value":"https://phatnguoi.vn/"},{"name":"Sec-Fetch-Dest","value":"empty"},{"name":"Sec-Fetch-Mode","value":"cors"},{"name":"Sec-Fetch-Site","value":"same-site"}]},"options":{"response":{}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[256,0],"id":"934b01de-eba0-40ca-a77b-709e70b311e0","name":"phat-nguoi-oto","retryOnFail":true,"onError":"continueRegularOutput"},{"parameters":{"url":"=https://api.phatnguoi.vn/web/tra-cuu/34B50323/2","sendHeaders":true,"headerParameters":{"parameters":[{"name":"User-Agent","value":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:140.0) Gecko/20100101 Firefox/140.0"},{"name":"Accept","value":"*/*"},{"name":"Accept-Language","value":"en-US,en;q=0.5"},{"name":"Accept-Encoding","value":"gzip, deflate, br, zstd"},{"name":"Origin","value":"https://phatnguoi.vn"},{"name":"Connection","value":"keep-alive"},{"name":"Referer","value":"https://phatnguoi.vn/"},{"name":"Sec-Fetch-Dest","value":"empty"},{"name":"Sec-Fetch-Mode","value":"cors"},{"name":"Sec-Fetch-Site","value":"same-site"}]},"options":{"response":{}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[256,384],"id":"db962ee2-1283-4c2c-8248-02707fe0fbd9","name":"phat-nguoi-xemay","retryOnFail":true,"onError":"continueRegularOutput"},{"parameters":{"resource":"service","operation":"call","domain":"zalo_bot","service":"send_message","serviceAttributes":{"attributes":[{"name":"message","value":"=Có {{ $json.totalViolations }} lỗi phạt nguội\nLoại Phương Tiện: {{ $json.violations[0].loaiPhuongTien }}\nThời Gian Vi Phạm: {{ $json.violations[0].thoiGianViPham }}\nĐịa Điểm Vi Phạm: {{ $json.violations[0].diaDiemViPham }}\nTrạng Thái: {{ $json.violations[0].trangThai }}\nĐơn Vị Phát Hiện: {{ $json.violations[0].donViPhatHienViPham }}\nNơi Giải Quyết: {{ $json.violations[0].noiGiaiQuyetVuViec }}"},{"name":"thread_id","value":"6643404425553198601"},{"name":"account_selection","value":"+84947762285"},{"name":"type","value":"0"}]}},"type":"n8n-nodes-base.homeAssistant","typeVersion":1,"position":[816,192],"id":"f7b56334-73bf-42a1-b587-8f52735fdf21","name":"sent-zalo-my-home","credentials":{"homeAssistantApi":{"id":"1lV5PEu2rtjuQlDB","name":"Home Assistant account"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"44c8d62f-87b4-40f9-b856-96a7349621f0","leftValue":"={{ $json.totalViolations }}","rightValue":0,"operator":{"type":"number","operation":"notEquals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[592,208],"id":"bcc4b71c-bc92-4e17-86a9-5516cda6f138","name":"If co vi pham"},{"parameters":{"content":"Automatically get lookup and sent zalo","height":640,"width":992},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[0,0],"id":"d67381e4-f810-44df-9760-4dd05b7474b6","name":"Sticky Note1"},{"parameters":{"pollTimes":{"item":[{"mode":"custom","cronExpression":"0 */10 * * * *"}]},"feedUrl":"https://thanhnien.vn/rss/home.rss"},"type":"n8n-nodes-base.rssFeedReadTrigger","typeVersion":1,"position":[1056,384],"id":"e14ff714-2ea9-4a1c-a662-e3b255479057","name":"dantri"},{"parameters":{"pollTimes":{"item":[{"mode":"custom","cronExpression":"0 */10 * * * *"}]},"feedUrl":"https://thanhnien.vn/rss/home.rss"},"type":"n8n-nodes-base.rssFeedReadTrigger","typeVersion":1,"position":[1056,224],"id":"543b3ad0-d982-4737-bbff-a9139f6a2de3","name":"thannien"},{"parameters":{"jsCode":"return items.map(item => {\n  return {\n    json: {\n      title: item.json.title,\n      link: item.json.link,\n      contentSnippet: item.json.contentSnippet,\n      isoDate: item.json.isoDate\n    }\n  };\n});"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1296,224],"id":"f909d9b5-e905-43d5-a187-d32bd38b8d50","name":"lọc"},{"parameters":{"schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"vnnew","mode":"list","cachedResultName":"vnnew"},"columns":{"mappingMode":"defineBelow","value":{"title":"={{ $json.title }}","link":"={{ $json.link }}","contentsnippet":"={{ $json.contentSnippet }}","isodate":"={{ $json.isoDate }}"},"matchingColumns":[],"schema":[{"id":"title","displayName":"title","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"link","displayName":"link","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"contentsnippet","displayName":"contentsnippet","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"isodate","displayName":"isodate","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[1504,224],"id":"6e93dbd1-5d6a-4761-b0c6-38aab04412bb","name":"lưu tin tức","credentials":{"postgres":{"id":"vDBK6XLC0TBpoMww","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":"WITH ranked AS (\n  SELECT \n    title,\n    link,\n    contentSnippet,\n    isodate AT TIME ZONE 'Asia/Ho_Chi_Minh' AS vn_time,\n    ROW_NUMBER() OVER (\n      PARTITION BY\n        CASE\n          WHEN link LIKE 'https://vnexpress.net%' THEN 'vnexpress.net'\n          WHEN link LIKE 'https://dantri.com.vn%' THEN 'dantri.com.vn'\n          WHEN link LIKE 'https://thanhnien.vn%' THEN 'thanhnien.vn'\n        END\n      ORDER BY isodate DESC\n    ) AS rn\n  FROM vnnew\n  WHERE link LIKE 'https://vnexpress.net%'\n     OR link LIKE 'https://dantri.com.vn%'\n     OR link LIKE 'https://thanhnien.vn%'\n)\nSELECT title, link, contentSnippet, vn_time\nFROM ranked\nWHERE rn <= 5\nORDER BY vn_time DESC;\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[1296,32],"id":"84d210f2-5553-4eaf-8f4b-765a780a2e84","name":"Execute a SQL query","credentials":{"postgres":{"id":"vDBK6XLC0TBpoMww","name":"Postgres account"}}},{"parameters":{"pollTimes":{"item":[{"mode":"custom","cronExpression":"0 */10 * * * *"}]},"feedUrl":"https://vnexpress.net/rss/tin-moi-nhat.rss"},"type":"n8n-nodes-base.rssFeedReadTrigger","typeVersion":1,"position":[1056,80],"id":"5ce3a368-aa9e-4f5e-9214-40d3bd3e5d58","name":"vnexpress"},{"parameters":{"content":"Automatically get news and save data","height":632,"width":684},"type":"n8n-nodes-base.stickyNote","position":[1008,0],"typeVersion":1,"id":"f3ac42d9-3dd8-46b2-aa99-8182c3530ee5","name":"Sticky Note2"},{"parameters":{"url":"=https://api.phatnguoi.vn/web/tra-cuu/34C40736/1","sendHeaders":true,"headerParameters":{"parameters":[{"name":"User-Agent","value":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:140.0) Gecko/20100101 Firefox/140.0"},{"name":"Accept","value":"*/*"},{"name":"Accept-Language","value":"en-US,en;q=0.5"},{"name":"Accept-Encoding","value":"gzip, deflate, br, zstd"},{"name":"Origin","value":"https://phatnguoi.vn"},{"name":"Connection","value":"keep-alive"},{"name":"Referer","value":"https://phatnguoi.vn/"},{"name":"Sec-Fetch-Dest","value":"empty"},{"name":"Sec-Fetch-Mode","value":"cors"},{"name":"Sec-Fetch-Site","value":"same-site"}]},"options":{"response":{}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[256,208],"id":"c944b0fe-0f85-47bc-a547-d5c65834598b","name":"phat-nguoi-oto1","retryOnFail":true,"onError":"continueRegularOutput"},{"parameters":{"operation":"executeQuery","query":"\nCREATE TABLE vnnew (\n    title TEXT NOT NULL,\n    link TEXT NOT NULL UNIQUE,\n    contentSnippet TEXT,\n    isodate TIMESTAMP WITH TIME ZONE NOT NULL\n);","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[1504,64],"id":"7f5509aa-2bc2-41f5-96a1-8ea3619d7f97","name":"Creat table vnnew","credentials":{"postgres":{"id":"vDBK6XLC0TBpoMww","name":"Postgres account"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[912,1232],"id":"bc9d248b-07b0-4d2f-b245-917ba33ec4be","name":"Google Gemini Chat Model","credentials":{"googlePalmApi":{"id":"BmSJpQbzqh1rnp4z","name":"NguyenViet"}}},{"parameters":{"operation":"deleteTable","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"vnnew","mode":"list","cachedResultName":"vnnew"},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[1648,80],"id":"1b62519a-baed-4247-b08b-f238a1f6db37","name":"Delete table or rows","credentials":{"postgres":{"id":"vDBK6XLC0TBpoMww","name":"Postgres account"}}}],"connections":{"If":{"main":[[],[{"node":"Merge","type":"main","index":1}]]},"Merge":{"main":[[{"node":"Extract Email Data","type":"main","index":0}]]},"Replace Me":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Apply New Label":{"main":[[{"node":"Create New Label","type":"main","index":0}]]},"Loop Over Items":{"main":[[],[{"node":"Gmail - Single Message","type":"main","index":0}]]},"Create New Label":{"main":[[{"node":"Replace Me","type":"main","index":0}]]},"Store AI Category":{"main":[[{"node":"Check if Label Exists","type":"main","index":0},{"node":"List All Gmail Labels","type":"main","index":0}]]},"Extract Email Data":{"main":[[{"node":"Categorize Email with AI","type":"main","index":0}]]},"Apply Label to Email":{"main":[[{"node":"Replace Me","type":"main","index":0}]]},"Check if Label Exists":{"main":[[{"node":"Apply New Label","type":"main","index":0}],[],[{"node":"Apply Label to Email","type":"main","index":0}]]},"List All Gmail Labels":{"main":[[{"node":"Check if Label Exists","type":"main","index":1}]]},"Gmail - Single Message":{"main":[[{"node":"If","type":"main","index":0},{"node":"Merge","type":"main","index":0}]]},"Categorize Email with AI":{"main":[[{"node":"Store AI Category","type":"main","index":0}]]},"Gmail - Get All Messages":{"main":[[{"node":"Filter Emails Without Excluded Labels","type":"main","index":0}]]},"Filter Emails Without Excluded Labels":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Schedule Gmail":{"main":[[{"node":"Gmail - Get All Messages","type":"main","index":0}]]},"Schedule Phat nguoi":{"main":[[{"node":"phat-nguoi-oto","type":"main","index":0},{"node":"phat-nguoi-xemay","type":"main","index":0},{"node":"phat-nguoi-oto1","type":"main","index":0}]]},"phat-nguoi-oto":{"main":[[{"node":"Code","type":"main","index":0}]]},"Code":{"main":[[{"node":"If co vi pham","type":"main","index":0}]]},"phat-nguoi-xemay":{"main":[[{"node":"Code","type":"main","index":0}]]},"If co vi pham":{"main":[[{"node":"sent-zalo-my-home","type":"main","index":0}]]},"dantri":{"main":[[{"node":"lọc","type":"main","index":0}]]},"thannien":{"main":[[{"node":"lọc","type":"main","index":0}]]},"lọc":{"main":[[{"node":"lưu tin tức","type":"main","index":0}]]},"vnexpress":{"main":[[{"node":"lọc","type":"main","index":0}]]},"phat-nguoi-oto1":{"main":[[{"node":"Code","type":"main","index":0}]]},"Google Gemini Chat Model":{"ai_languageModel":[[{"node":"Categorize Email with AI","type":"ai_languageModel","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"a63c510a-0c23-4b08-8537-eb170fdb8294","triggerCount":0,"shared":[{"createdAt":"2025-08-22T16:54:45.559Z","updatedAt":"2025-08-22T16:54:45.559Z","role":"workflow:owner","workflowId":"7BRZJfTUcRLdd0gg","projectId":"Bsx4kBdHQHZGGC5J"}],"tags":[]}