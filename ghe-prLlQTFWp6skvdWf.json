{"createdAt":"2025-08-10T03:44:58.987Z","updatedAt":"2025-08-16T16:16:49.809Z","id":"prLlQTFWp6skvdWf","name":"ghe","active":false,"isArchived":false,"nodes":[{"parameters":{"operation":"extractHtmlContent","extractionValues":{"values":[{"key":"tinh","cssSelector":".p-nav-list > li > .p-navEl > a.p-navEl-link > span","returnArray":true},{"key":"href","cssSelector":".p-nav-list > li > .p-navEl > a.p-navEl-link","returnValue":"attribute","attribute":"href","returnArray":true}]},"options":{}},"type":"n8n-nodes-base.html","typeVersion":1,"position":[96,-32],"id":"81631e07-4a8c-4335-8903-92b29ef7235a","name":"HTML"},{"parameters":{"jsCode":"const names = $json.tinh || [];\nconst hrefs = $json.href || [];\nconst out = [];\n\nfor (let i = 0; i < Math.min(names.length, hrefs.length); i++) {\n  // Bỏ qua các mục không phải khu vực nếu cần\n  const n = (names[i] || '').trim();\n  const h = hrefs[i] || '';\n\n  // Ví dụ lọc bớt \"Home\", \"Forums\"\n  if (n.toLowerCase() === 'home' || n.toLowerCase() === 'forums') continue;\n\n  out.push({ json: { name: n, href: h } });\n}\n\nreturn out;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[320,-32],"id":"e7088373-25be-4ea2-9199-ed3d75ebaee9","name":"Code"},{"parameters":{"conditions":{"string":[{"value1":"={{ $json.name.toLowerCase() }}","value2":"={{ $('Start').first().json.tinh.toLowerCase() }}"}]}},"type":"n8n-nodes-base.if","typeVersion":1,"position":[592,-32],"id":"42b0d185-ff0d-49e2-91ed-843ddaacfaf5","name":"IF"},{"parameters":{"operation":"extractHtmlContent","extractionValues":{"values":[{"key":"quan","cssSelector":"a.menu-linkRow[href^=\"/forums/\"]","returnArray":true},{"key":"href","cssSelector":"a.menu-linkRow[href^=\"/forums/\"]","returnValue":"attribute","attribute":"href","returnArray":true}]},"options":{}},"type":"n8n-nodes-base.html","typeVersion":1,"position":[1104,-48],"id":"cb5f4882-9639-486f-88fd-2e16c7f24f1d","name":"HTML1"},{"parameters":{"jsCode":"const names = $json.quan || [];\nconst hrefs = $json.href || [];\nconst initialOut = [];\n\n// Vòng lặp này giữ nguyên để tạo ra danh sách ban đầu\nfor (let i = 0; i < Math.min(names.length, hrefs.length); i++) {\n  const n = (names[i] || '').trim();\n  const h = hrefs[i] || '';\n\n  // Bỏ qua các giá trị không mong muốn\n  if (!n || n.toLowerCase() === 'home' || n.toLowerCase() === 'forums') {\n    continue;\n  }\n\n  initialOut.push({ json: { name: n, href: h } });\n}\n\n// --- PHẦN LỌC TRÙNG LẶP ---\n\n// Sử dụng một Set để lưu trữ \"chìa khóa\" của các mục đã thấy\nconst seen = new Set();\n\nconst uniqueOutput = initialOut.filter(item => {\n  // Tạo ra một \"chìa khóa\" định danh duy nhất cho mỗi cặp name và href\n  // Ví dụ: \"Ba Đình|/ba-dinh\"\n  const key = `${item.json.name}|${item.json.href}`;\n  \n  // Kiểm tra xem chìa khóa này đã tồn tại trong Set chưa\n  const isDuplicate = seen.has(key);\n  \n  // Nếu chưa có, thêm chìa khóa vào Set để đánh dấu là đã thấy\n  if (!isDuplicate) {\n    seen.add(key);\n  }\n  \n  // .filter() sẽ giữ lại những item trả về `true`.\n  // Vì vậy, chúng ta giữ lại item nếu nó KHÔNG phải là trùng lặp.\n  return !isDuplicate;\n});\n\n// Trả về mảng kết quả đã được lọc duy nhất\nreturn uniqueOutput;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1360,-32],"id":"95a496e8-4ac1-4806-a57b-d9c70b283509","name":"Code1"},{"parameters":{"operation":"extractHtmlContent","extractionValues":{"values":[{"key":"gia","cssSelector":"a.labelLink","returnArray":true},{"key":"href","cssSelector":"a.labelLink","returnValue":"attribute","attribute":"href","returnArray":true}]},"options":{}},"type":"n8n-nodes-base.html","typeVersion":1,"position":[2560,-224],"id":"f5224f3d-9936-49c3-80e7-da77ffa76892","name":"HTML2","alwaysOutputData":true},{"parameters":{"operation":"extractHtmlContent","extractionValues":{"values":[{"key":"href","cssSelector":"=.structItem.is-prefix{{ $('IF2').item.json.href.split('prefix_id[0]=')[1] }} .structItem-title a[data-tp-primary=\"on\"]","returnValue":"attribute","attribute":"href","returnArray":true},{"key":"gai","cssSelector":"=.structItem.is-prefix{{ $('IF2').item.json.href.split('prefix_id[0]=')[1] }} .structItem-title a[data-tp-primary=\"on\"]","returnArray":true}]},"options":{}},"type":"n8n-nodes-base.html","typeVersion":1,"position":[3872,-352],"id":"4113d326-ac8e-4806-90c7-564eee571efd","name":"HTML3","alwaysOutputData":true},{"parameters":{"jsCode":"const names = $json.gai || [];\nconst hrefs = $json.href || [];\nconst out = [];\n// 1. Tạo một Set để theo dõi các mục đã xuất hiện\nconst seen = new Set();\n\nfor (let i = 0; i < Math.min(names.length, hrefs.length); i++) {\n  const n = (names[i] || '').trim();\n  const h = hrefs[i] || '';\n\n  // Bỏ qua các mục không cần thiết\n  if (n.toLowerCase() === 'home' || n.toLowerCase() === 'forums') {\n    continue;\n  }\n\n  // 2. Tạo một khóa duy nhất từ tên và href\n  const uniqueKey = `${n}|${h}`;\n\n  // 3. Chỉ thêm vào kết quả nếu khóa này chưa tồn tại trong Set\n  if (!seen.has(uniqueKey)) {\n    // 4. Đánh dấu là đã thấy và thêm vào mảng kết quả\n    seen.add(uniqueKey);\n    out.push({ json: { name: n, href: h } });\n  }\n}\n\nreturn out;"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[4352,-336],"id":"bd0a26e1-28ca-485c-a643-0af956b696bf","name":"Code5"},{"parameters":{"conditions":{"string":[{"value1":"={{ $json.name.toLowerCase() }}","operation":"contains","value2":"={{ $('Start').first().json.nhanvien.toLowerCase() }}"}]}},"type":"n8n-nodes-base.if","typeVersion":1,"position":[4992,-368],"id":"3f5bd121-d209-46de-9398-17a1b9aec37c","name":"IF3"},{"parameters":{"url":"https://choidangcap35.cc","options":{"response":{"response":{"responseFormat":"text"}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[-96,-32],"id":"40cbef47-42fc-4a2d-88d7-36598a239567","name":"choidangcap35","notesInFlow":true,"notes":" "},{"parameters":{"url":"=https://choidangcap35.cc{{ $json.href }}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[912,-32],"id":"fc1ee682-4999-4d8f-ad4a-7ca9028b5f7b","name":"tinh"},{"parameters":{"url":"=https://choidangcap35.cc{{ $json.href }}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[2336,-224],"id":"a3a16333-0c07-44db-81a1-e7ee912bafc0","name":"huyen"},{"parameters":{"url":"=https://choidangcap35.cc{{ $json.href }}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[5264,-464],"id":"aef9045b-5fc3-41fe-9f56-b2c907b9f228","name":"em"},{"parameters":{"workflowInputs":{"values":[{"name":"tinh","type":"any"},{"name":"huyen","type":"any"},{"name":"gia","type":"any"},{"name":"nhanvien","type":"any"}]}},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[-368,-32],"id":"4db9e67d-c795-49fa-bfa9-5a9f428133ad","name":"Start"},{"parameters":{"jsCode":"const names = $('HTML1').first().json.quan || [];\nconst out = [];\n\nfor (let i = 0; i < Math.min(names.length); i++) {\n  // Bỏ qua các mục không phải khu vực nếu cần\n  const n = (names[i] || '').trim();\n\n  // Ví dụ lọc bớt \"Home\", \"Forums\"\n  if (n.toLowerCase() === 'home' || n.toLowerCase() === 'forums') continue;\n\n  out.push({ json: { name: n } });\n}\n\nreturn out;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2000,-32],"id":"bcdcc979-a65c-44fc-bdd4-1cb6e4d29341","name":"Code2"},{"parameters":{"jsCode":"const names = $('HTML3').first().json.gai || [];\nconst out = [];\nconst seen = new Set();\n\nfor (let i = 0; i < names.length; i++) {\n  let n = (names[i] || '').trim();\n\n  // Lấy phần trước dấu \"-\" hoặc dấu \",\"\n  n = n.split('-')[0].split(',')[0].trim();\n\n  // Xóa ký tự đặc biệt, khoảng trắng thừa\n  n = n.replace(/♥️|[^a-zA-ZÀ-ỹ0-9\\s]/g, '').trim();\n\n  if (!n) continue;\n\n  if (!seen.has(n)) {\n    seen.add(n);\n    out.push({ json: { name: n } });\n  }\n}\n\nreturn out;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[4960,-208],"id":"a33807e9-9366-4121-835d-a28e2262a972","name":"Code7"},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $('Start').item.json.huyen }}","rightValue":"=0","operator":{"type":"string","operation":"notEquals"},"id":"64bbd9bf-ac0c-44ff-9761-72936dd98c63"}],"combinator":"and"},"renameOutput":true,"outputKey":"huyen"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"988b8cab-48fa-4455-9c0c-2277d72d5b35","leftValue":"={{ $('Start').item.json.huyen }}","rightValue":"=0","operator":{"type":"string","operation":"equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"trong"}]},"options":{}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[1808,-64],"id":"61afe5f9-9005-4bce-81ba-ea951749e71a","name":"Switch"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"1b3b9370-7c24-456d-a5f1-d78403ebea00","leftValue":"={{ $('Code1').item.json.name.toLowerCase() }}","rightValue":"={{ $('Start').first().json.huyen.toLowerCase() }}","operator":{"type":"string","operation":"contains"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[2032,-208],"id":"332f978a-1206-476c-90bb-a609940adbbc","name":"If1"},{"parameters":{"jsCode":"const names = $('HTML2').first().json.gia || [];\nconst out = [];\nconst seen = new Set();\n\n// Regex: bắt số (có thể có dấu . hoặc ,) + chữ k/K ở cuối\nconst priceRegex = /^\\d+(\\.\\d+)?k$/i;\n\nfor (let i = 0; i < names.length; i++) {\n  const n = (names[i] || '').trim();\n\n  // Chỉ lấy những giá dạng số + 'k'\n  if (!priceRegex.test(n)) {\n    continue;\n  }\n\n  const uniqueKey = `${n}|`;\n  if (!seen.has(uniqueKey)) {\n    seen.add(uniqueKey);\n    out.push({ json: { name: n } });\n  }\n}\n\nreturn out;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[3232,-128],"id":"d513e304-ca19-419b-88d1-58dc78edaf24","name":"Code8"},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $('Start').first().json.nhanvien }}","rightValue":"0","operator":{"type":"string","operation":"notEquals"},"id":"cef48e63-e90a-41cf-84b8-ab98a7507471"}],"combinator":"and"},"renameOutput":true,"outputKey":"nhanvien"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"0ab1bc14-fc03-4ce3-a560-1d0eac02ab47","leftValue":"={{ $('Start').first().json.nhanvien }}","rightValue":"0","operator":{"type":"string","operation":"equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"trong"}]},"options":{}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[4752,-320],"id":"435a40dc-5de9-4643-a632-014f0f855fe1","name":"Switch2"},{"parameters":{"jsCode":"// ===== Input =====\n// Lấy nội dung HTML thô từ item đầu vào.\nconst rawHtml = (items[0]?.json?.data || \"\");\n\n// ===== Helpers =====\n// Chuẩn hóa chuỗi: xóa khoảng trắng thừa.\nconst normalize = (s) => (s || \"\").replace(/\\s+/g, \" \").trim();\n// Xóa thẻ HTML và chuẩn hóa chuỗi.\nconst stripTags = (s) => normalize((s || \"\").replace(/<[^>]*>/g, \" \"));\n// Trích xuất nội dung từ chuỗi bằng Regular Expression.\nconst getMatch = (s, re, idx = 1) => {\n    if (!s) return \"\";\n    const m = s.match(re);\n    return m ? normalize(m[idx] || \"\") : \"\";\n};\n\n// ===== 1) Trích xuất thông tin chi tiết =====\n\n// Regex chung để tìm nội dung trong thẻ <dd> ngay sau một thẻ <dt> cụ thể.\nconst getContentAfterDt = (label) => {\n    // Ký tự đặc biệt trong regex cần được thoát.\n    const escapedLabel = label.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`<dt>${escapedLabel}<\\\\/dt>[\\\\s\\\\S]*?<dd[^>]*>([\\\\s\\\\S]*?)<\\\\/dd>`, 'i');\n    let content = getMatch(rawHtml, regex);\n    // Loại bỏ dấu hai chấm và khoảng trắng ở đầu nếu có.\n    if (content.startsWith(':')) {\n        content = content.substring(1).trim();\n    }\n    // Xử lý các thẻ con như <b>, <i>, <a> bên trong <dd> và loại bỏ chúng\n    return stripTags(content);\n};\n\n// Trích xuất Nghệ Danh: Chỉnh sửa để bắt nội dung trong thẻ <b>\nconst ngheDanh = getMatch(rawHtml, /<dt>Nghệ Danh<\\/dt>[\\s\\S]*?<b class=\"message-name\">([\\s\\S]*?)<\\/b>/i);\n\n// Trích xuất Phone: Chỉnh sửa để chỉ lấy số điện thoại, loại bỏ các thẻ con\nconst phone = stripTags(getMatch(rawHtml, /<dt>Phone<\\/dt>[\\s\\S]*?<div class=\"callme\">[\\s\\S]*?<a href=\"tel:([\\d]+)\"/i));\n\n// Trích xuất các thông tin khác sử dụng hàm getContentAfterDt chung\nconst namSinh = getContentAfterDt(\"Năm Sinh\");\nconst tinhTrang = getContentAfterDt(\"Tình Trạng\");\nconst khuVuc = getContentAfterDt(\"Khu vực\");\nconst tgLamViec = getContentAfterDt(\"TG làm việc\");\nconst v1Vu = getContentAfterDt(\"V1 - Vú\");\nconst v2Eo = getContentAfterDt(\"V2 - Eo\");\nconst v3Mong = getContentAfterDt(\"V3 - Mông\");\nconst buom = getContentAfterDt(\"Bướm\");\nconst service = getContentAfterDt(\"Service\");\nconst quaDem = getContentAfterDt(\"Qua đêm\");\nconst tgPhucVu = getContentAfterDt(\"TG phục vụ\");\n\n// Trả về một đối tượng JSON có cấu trúc theo yêu cầu.\nreturn [{\n    json: {\n        \"Nghệ Danh\": ngheDanh,\n        \"Phone\": phone,\n        \"Năm Sinh\": namSinh,\n        \"Tình Trạng\": tinhTrang,\n        \"Khu vực\": khuVuc,\n        \"TG làm việc\": tgLamViec,\n        \"V1 - Vú\": v1Vu,\n        \"V2 - Eo\": v2Eo,\n        \"V3 - Mông\": v3Mong,\n        \"Bướm\": buom,\n        \"Service\": service,\n        \"Qua đêm\": quaDem,\n        \"TG phục vụ\": tgPhucVu\n    }\n}];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[5440,-464],"id":"26dd5b68-359a-4699-a72d-c67805f8a3e2","name":"Code6"},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $('Start').first().json.gia }}","rightValue":"0","operator":{"type":"string","operation":"notEquals"},"id":"15ab1997-1774-4c34-ac5c-422237a73567"}],"combinator":"and"},"renameOutput":true,"outputKey":"gia"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"677a140d-66a5-482b-aaaa-89ebaf1e18e6","leftValue":"={{ $('Start').first().json.gia }}","rightValue":"0","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"trong"}]},"options":{}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[2992,-224],"id":"89eff845-b2b1-4996-9096-9575cc050b55","name":"gia1"},{"parameters":{"jsCode":"// Lấy dữ liệu đầu vào, nếu không có thì dùng mảng rỗng\nconst names = $json.gia || [];\nconst hrefs = $json.href || [];\n\n// Mảng tạm thời để chứa kết quả đã lọc theo điều kiện 'k'\nconst filteredItems = [];\n\n// Vòng lặp để ghép cặp name và href, và lọc theo 'k'\nfor (let i = 0; i < Math.min(names.length, hrefs.length); i++) {\n  const n = (names[i] || '').trim();\n  const h = hrefs[i] || '';\n\n  // Bỏ qua các mục không có tên hoặc các mục rác\n  if (!n || n.toLowerCase() === 'home' || n.toLowerCase() === 'forums') {\n    continue;\n  }\n  \n  // --- YÊU CẦU 2: Chỉ giữ lại các mục có name kết thúc bằng 'k' ---\n  // Chuyển tên về chữ thường và kiểm tra xem nó có kết thúc bằng 'k' không\n  if (!n.toLowerCase().endsWith('k')) {\n    continue; // Nếu không, bỏ qua và đi đến mục tiếp theo\n  }\n\n  // Nếu thỏa mãn điều kiện, thêm vào mảng tạm thời\n  filteredItems.push({ json: { name: n, href: h } });\n}\n\n// --- YÊU CẦU 1: Lọc các giá trị trùng lặp ---\n// Sử dụng một Set để theo dõi các mục đã thấy để đảm bảo tính duy nhất\nconst seen = new Set();\nconst uniqueOutput = filteredItems.filter(item => {\n  // Tạo một \"chìa khóa\" duy nhất cho mỗi cặp name và href\n  const key = `${item.json.name}|${item.json.href}`;\n  \n  // Kiểm tra xem chìa khóa này đã tồn tại trong Set chưa\n  const isDuplicate = seen.has(key);\n  \n  // Nếu chưa tồn tại, thêm nó vào Set và giữ lại item này\n  if (!isDuplicate) {\n    seen.add(key);\n  }\n  \n  // Trả về true (giữ lại) nếu không phải là trùng lặp\n  return !isDuplicate;\n});\n\n// Trả về kết quả cuối cùng đã được lọc\nreturn uniqueOutput;"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2768,-224],"id":"6125cafd-5555-4fee-81ce-dede3e565d8f","name":"gia2"},{"parameters":{"url":"=https://choidangcap35.cc{{ $json.href }}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[3600,-352],"id":"59c99db7-97c0-4fbb-ba45-b95e3c11136f","name":"gia"},{"parameters":{"url":"=https://choidangcap35.cc/forums/gai-goi-hoang-mai.135/?prefix_id[0]=49","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[3600,-192],"id":"96d02b2c-53bd-4127-af0f-e536c2d9edca","name":"gia3"},{"parameters":{"conditions":{"string":[{"value1":"={{ $json.name.toLowerCase() }}","value2":"={{ $('Start').first().json.gia.toLowerCase() }}"}]}},"type":"n8n-nodes-base.if","typeVersion":1,"position":[3248,-336],"id":"19add249-1989-49b5-8e48-a6fcc51126c0","name":"IF2"}],"connections":{"HTML":{"main":[[{"node":"Code","type":"main","index":0}]]},"Code":{"main":[[{"node":"IF","type":"main","index":0}]]},"IF":{"main":[[{"node":"tinh","type":"main","index":0}],[]]},"HTML1":{"main":[[{"node":"Code1","type":"main","index":0}]]},"Code1":{"main":[[{"node":"Switch","type":"main","index":0}]]},"HTML2":{"main":[[{"node":"gia2","type":"main","index":0}]]},"HTML3":{"main":[[{"node":"Code5","type":"main","index":0}]]},"IF3":{"main":[[{"node":"em","type":"main","index":0}],[]]},"Code5":{"main":[[{"node":"Switch2","type":"main","index":0}]]},"choidangcap35":{"main":[[{"node":"HTML","type":"main","index":0}]]},"tinh":{"main":[[{"node":"HTML1","type":"main","index":0}]]},"huyen":{"main":[[{"node":"HTML2","type":"main","index":0}]]},"em":{"main":[[{"node":"Code6","type":"main","index":0}]]},"Start":{"main":[[{"node":"choidangcap35","type":"main","index":0}]]},"Switch":{"main":[[{"node":"If1","type":"main","index":0}],[{"node":"Code2","type":"main","index":0}]]},"If1":{"main":[[{"node":"huyen","type":"main","index":0}]]},"Switch2":{"main":[[{"node":"IF3","type":"main","index":0}],[{"node":"Code7","type":"main","index":0}]]},"gia1":{"main":[[{"node":"IF2","type":"main","index":0}],[{"node":"Code8","type":"main","index":0}]]},"gia2":{"main":[[{"node":"gia1","type":"main","index":0}]]},"gia":{"main":[[{"node":"HTML3","type":"main","index":0}]]},"gia3":{"main":[[]]},"IF2":{"main":[[{"node":"gia","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"Start":[{"json":{"tinh":"Hà nôi","huyen":"Hoàng Mai","gia":"0","nhanvien":"0"}}]},"versionId":"8bb77617-99b2-4c84-aa9e-1007c48f1bed","triggerCount":0,"shared":[{"createdAt":"2025-08-10T03:44:58.987Z","updatedAt":"2025-08-10T03:44:58.987Z","role":"workflow:owner","workflowId":"prLlQTFWp6skvdWf","projectId":"Bsx4kBdHQHZGGC5J"}],"tags":[]}