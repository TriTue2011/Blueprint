{"createdAt":"2025-08-14T13:16:04.293Z","updatedAt":"2025-09-14T15:08:54.109Z","id":"jnt0m9DQJYO1QxOZ","name":"gmail","active":true,"isArchived":false,"nodes":[{"parameters":{"promptType":"define","text":"=Nội dung email:\n{{ $json.text_clean }}\n{{ $json.textPlain }}\n{{ $json.from }}\n{{ $json.subject }}\n{{ $json.date }}","needsFallback":true,"options":{"systemMessage":"=Summarize the email content in 5-10 sentences, clearly and coherently, including:\n\nMain topic and purpose\nImportant points, requirements, deadlines, actions needed\nImportant information such as dates, times, locations, sender\nMaintain original urgency level and intent\nRemove greetings, signatures, repetitive information, details that don't affect main content.\nWrite in plain text, entirely in Vietnamese, ordered from most important to least important.\nDo not add inferences beyond the email content."}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.2,"position":[-2848,2368],"id":"403f946e-7d91-4835-9a96-e01a8bbaf418","name":"TEXT"},{"parameters":{"downloadAttachments":true,"options":{}},"type":"n8n-nodes-base.emailReadImap","typeVersion":2.1,"position":[-3408,3664],"id":"17bbb0cf-48b0-4d2d-9c88-38137570faeb","name":"nguyenviet","credentials":{"imap":{"id":"hEa9ue55LN63htGc","name":"nguyenvanviet210290@gmail.com"}}},{"parameters":{"promptType":"define","text":"=Nội dung email:\n{{ $json.text_clean }}\n{{ $json.textPlain }}\n{{ $json.from }}\n{{ $json.subject }}\n{{ $json.date }}","needsFallback":true,"options":{"systemMessage":"=Summarize the email content in 5-10 sentences, clearly and coherently, including:\n\nMain topic and purpose\nImportant points, requirements, deadlines, actions needed\nImportant information such as dates, times, locations, sender\nMaintain original urgency level and intent\nRemove greetings, signatures, repetitive information, details that don't affect main content.\nWrite in plain text, entirely in Vietnamese, ordered from most important to least important.\nDo not add inferences beyond the email content."}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.2,"position":[-2784,3648],"id":"36887edc-6ed3-4fa8-b291-a50f3a089474","name":"TEXT1"},{"parameters":{"jsCode":"// ==== helpers ====\nfunction decodeHtmlEntities(str) {\n  return String(str || '')\n    .replace(/&#(\\d+);/g, (_, n) => String.fromCharCode(n))\n    .replace(/&#x([0-9a-fA-F]+);/g, (_, h) => String.fromCharCode(parseInt(h, 16)))\n    .replace(/&nbsp;/g, ' ')\n    .replace(/&amp;/g, '&')\n    .replace(/&lt;/g, '<')\n    .replace(/&gt;/g, '>')\n    .replace(/&quot;/g, '\"')\n    .replace(/&apos;/g, \"'\");\n}\nfunction stripHtmlKeepNewlines(str) {\n  return String(str || '')\n    .replace(/<style[\\s\\S]*?<\\/style>/gi, '')\n    .replace(/<script[\\s\\S]*?<\\/script>/gi, '')\n    .replace(/<br\\s*\\/?>/gi, '\\n')\n    .replace(/<\\/p>/gi, '\\n\\n')\n    .replace(/<li[^>]*>/gi, '\\n- ')\n    .replace(/<\\/li>/gi, '')\n    .replace(/<div[^>]*>/gi, '\\n')\n    .replace(/<\\/div>/gi, '\\n')\n    .replace(/<[^>]+>/g, '')\n    .replace(/\\u00A0/g, ' ');\n}\nfunction latin1ToUtf8(s) {\n  try { return Buffer.from(String(s), 'latin1').toString('utf8'); }\n  catch { return s; }\n}\nfunction scoreVN(s) {\n  s = String(s || '');\n  const bad = (s.match(/[\\uFFFD�]/g) || []).length;\n  const moj = (s.match(/[ÂÃÄÅÆÐØÞ×¸¢¿¡]/g) || []).length;\n  const dia = (s.match(/[À-ỹđ]/g) || []).length;\n  return dia * 3 - (bad * 5 + moj * 2);\n}\nfunction tidy(s) {\n  return String(s || '')\n    .replace(/\\r\\n?/g, '\\n')\n    .replace(/[ \\t]+\\n/g, '\\n')\n    .replace(/\\n{3,}/g, '\\n\\n')\n    .replace(/[ \\t]{2,}/g, ' ')\n    .trim();\n}\n\n// ==== main ====\nlet html = '';\nif (Array.isArray($json)) html = $json[0]?.textHtml || $json[0]?.text || '';\nelse html = $json.textHtml || $json.text || '';\n\n// ứng viên A\nconst A = tidy(latin1ToUtf8(stripHtmlKeepNewlines(decodeHtmlEntities(html))));\n// ứng viên B\nconst B = tidy(stripHtmlKeepNewlines(decodeHtmlEntities(latin1ToUtf8(html))));\n\nlet best = A, bestScore = scoreVN(A);\nif (scoreVN(B) > bestScore) best = B;\n\n// bỏ header/footer nếu muốn\nbest = best\n  .replace(/^.*?\\bNhi Anh\\b.*?\\n+/i, '')\n  .replace(/\\n+Ghé thăm LuatVietnam[\\s\\S]*$/i, '');\n\n// ==== return kèm metadata ====\nreturn [{\n  json: {\n    text_clean: tidy(best),\n    textPlain: $json.textPlain || '',\n    from: $json.from || '',\n    subject: $json.subject || '',\n    date: $json.date || ''\n  }\n}];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-3200,3664],"id":"8a5f9ae7-c5d2-4f94-855e-2f02c8b78b1e","name":"Code5"},{"parameters":{"jsCode":"// ==== helpers ====\nfunction decodeHtmlEntities(str) {\n  return String(str || '')\n    .replace(/&#(\\d+);/g, (_, n) => String.fromCharCode(n))\n    .replace(/&#x([0-9a-fA-F]+);/g, (_, h) => String.fromCharCode(parseInt(h, 16)))\n    .replace(/&nbsp;/g, ' ')\n    .replace(/&amp;/g, '&')\n    .replace(/&lt;/g, '<')\n    .replace(/&gt;/g, '>')\n    .replace(/&quot;/g, '\"')\n    .replace(/&apos;/g, \"'\");\n}\nfunction stripHtmlKeepNewlines(str) {\n  return String(str || '')\n    .replace(/<style[\\s\\S]*?<\\/style>/gi, '')\n    .replace(/<script[\\s\\S]*?<\\/script>/gi, '')\n    .replace(/<br\\s*\\/?>/gi, '\\n')\n    .replace(/<\\/p>/gi, '\\n\\n')\n    .replace(/<li[^>]*>/gi, '\\n- ')\n    .replace(/<\\/li>/gi, '')\n    .replace(/<div[^>]*>/gi, '\\n')\n    .replace(/<\\/div>/gi, '\\n')\n    .replace(/<[^>]+>/g, '')\n    .replace(/\\u00A0/g, ' ');\n}\nfunction latin1ToUtf8(s) {\n  try { return Buffer.from(String(s), 'latin1').toString('utf8'); }\n  catch { return s; }\n}\nfunction scoreVN(s) {\n  s = String(s || '');\n  const bad = (s.match(/[\\uFFFD�]/g) || []).length;\n  const moj = (s.match(/[ÂÃÄÅÆÐØÞ×¸¢¿¡]/g) || []).length;\n  const dia = (s.match(/[À-ỹđ]/g) || []).length;\n  return dia * 3 - (bad * 5 + moj * 2);\n}\nfunction tidy(s) {\n  return String(s || '')\n    .replace(/\\r\\n?/g, '\\n')\n    .replace(/[ \\t]+\\n/g, '\\n')\n    .replace(/\\n{3,}/g, '\\n\\n')\n    .replace(/[ \\t]{2,}/g, ' ')\n    .trim();\n}\n\n// ==== main ====\nlet html = '';\nif (Array.isArray($json)) html = $json[0]?.textHtml || $json[0]?.text || '';\nelse html = $json.textHtml || $json.text || '';\n\n// ứng viên A\nconst A = tidy(latin1ToUtf8(stripHtmlKeepNewlines(decodeHtmlEntities(html))));\n// ứng viên B\nconst B = tidy(stripHtmlKeepNewlines(decodeHtmlEntities(latin1ToUtf8(html))));\n\nlet best = A, bestScore = scoreVN(A);\nif (scoreVN(B) > bestScore) best = B;\n\n// bỏ header/footer nếu muốn\nbest = best\n  .replace(/^.*?\\bNhi Anh\\b.*?\\n+/i, '')\n  .replace(/\\n+Ghé thăm LuatVietnam[\\s\\S]*$/i, '');\n\n// ==== return kèm metadata ====\nreturn [{\n  json: {\n    text_clean: tidy(best),\n    textPlain: $json.textPlain || '',\n    from: $json.from || '',\n    subject: $json.subject || '',\n    date: $json.date || ''\n  }\n}];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-3088,2368],"id":"77ec774a-a900-4fb0-96be-4845a57f8797","name":"Code4"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatDeepSeek","typeVersion":1,"position":[-1040,4944],"id":"2f39b1c5-d66b-462b-a9e9-10152ca2b6fa","name":"DeepSeek Chat Model6","credentials":{"deepSeekApi":{"id":"nnHcWmUyC0Gmswgh","name":"DeepSeek account"}}},{"parameters":{"promptType":"define","text":"=Nội dung email:\n{{ $json.text_clean }}\n{{ $json.textPlain }}\n{{ $json.from }}\n{{ $json.subject }}\n{{ $json.date }}","needsFallback":true,"options":{"systemMessage":"=Summarize the email content in 5-10 sentences, clearly and coherently, including:\n\nMain topic and purpose\nImportant points, requirements, deadlines, actions needed\nImportant information such as dates, times, locations, sender\nMaintain original urgency level and intent\nRemove greetings, signatures, repetitive information, details that don't affect main content.\nWrite in plain text, entirely in Vietnamese, ordered from most important to least important.\nDo not add inferences beyond the email content."}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.2,"position":[-1200,4640],"id":"c1e20eac-761f-474b-b616-6b67003af39f","name":"TEXT2"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[-1232,4896],"id":"b629860a-c6f3-4ef7-83ea-c208e0429fda","name":"Google Gemini Chat Model7","credentials":{"googlePalmApi":{"id":"Iu2pwTGpG2LSxJWb","name":"Mitbap"}}},{"parameters":{"jsCode":"// ==== helpers ====\nfunction decodeHtmlEntities(str) {\n  return String(str || '')\n    .replace(/&#(\\d+);/g, (_, n) => String.fromCharCode(n))\n    .replace(/&#x([0-9a-fA-F]+);/g, (_, h) => String.fromCharCode(parseInt(h, 16)))\n    .replace(/&nbsp;/g, ' ')\n    .replace(/&amp;/g, '&')\n    .replace(/&lt;/g, '<')\n    .replace(/&gt;/g, '>')\n    .replace(/&quot;/g, '\"')\n    .replace(/&apos;/g, \"'\");\n}\nfunction stripHtmlKeepNewlines(str) {\n  return String(str || '')\n    .replace(/<style[\\s\\S]*?<\\/style>/gi, '')\n    .replace(/<script[\\s\\S]*?<\\/script>/gi, '')\n    .replace(/<br\\s*\\/?>/gi, '\\n')\n    .replace(/<\\/p>/gi, '\\n\\n')\n    .replace(/<li[^>]*>/gi, '\\n- ')\n    .replace(/<\\/li>/gi, '')\n    .replace(/<div[^>]*>/gi, '\\n')\n    .replace(/<\\/div>/gi, '\\n')\n    .replace(/<[^>]+>/g, '')\n    .replace(/\\u00A0/g, ' ');\n}\nfunction latin1ToUtf8(s) {\n  try { return Buffer.from(String(s), 'latin1').toString('utf8'); }\n  catch { return s; }\n}\nfunction scoreVN(s) {\n  s = String(s || '');\n  const bad = (s.match(/[\\uFFFD�]/g) || []).length;\n  const moj = (s.match(/[ÂÃÄÅÆÐØÞ×¸¢¿¡]/g) || []).length;\n  const dia = (s.match(/[À-ỹđ]/g) || []).length;\n  return dia * 3 - (bad * 5 + moj * 2);\n}\nfunction tidy(s) {\n  return String(s || '')\n    .replace(/\\r\\n?/g, '\\n')\n    .replace(/[ \\t]+\\n/g, '\\n')\n    .replace(/\\n{3,}/g, '\\n\\n')\n    .replace(/[ \\t]{2,}/g, ' ')\n    .trim();\n}\n\n// ==== main ====\nlet html = '';\nif (Array.isArray($json)) html = $json[0]?.textHtml || $json[0]?.text || '';\nelse html = $json.textHtml || $json.text || '';\n\n// ứng viên A\nconst A = tidy(latin1ToUtf8(stripHtmlKeepNewlines(decodeHtmlEntities(html))));\n// ứng viên B\nconst B = tidy(stripHtmlKeepNewlines(decodeHtmlEntities(latin1ToUtf8(html))));\n\nlet best = A, bestScore = scoreVN(A);\nif (scoreVN(B) > bestScore) best = B;\n\n// bỏ header/footer nếu muốn\nbest = best\n  .replace(/^.*?\\bNhi Anh\\b.*?\\n+/i, '')\n  .replace(/\\n+Ghé thăm LuatVietnam[\\s\\S]*$/i, '');\n\n// ==== return kèm metadata ====\nreturn [{\n  json: {\n    text_clean: tidy(best),\n    textPlain: $json.textPlain || '',\n    from: $json.from || '',\n    subject: $json.subject || '',\n    date: $json.date || ''\n  }\n}];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-1616,4656],"id":"e1c36b13-de9c-4831-83c0-62ef9367d21b","name":"Code"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[-2864,3872],"id":"1334e80d-7da8-4728-89cb-e68eb5cecb18","name":"Google Gemini Chat Model1","credentials":{"googlePalmApi":{"id":"BmSJpQbzqh1rnp4z","name":"NguyenViet"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[-3008,2688],"id":"0e46dbcd-bb44-46e7-955b-6e7c40bedf57","name":"Google Gemini Chat Model2","credentials":{"googlePalmApi":{"id":"BmSJpQbzqh1rnp4z","name":"NguyenViet"}}},{"parameters":{"downloadAttachments":true,"options":{}},"type":"n8n-nodes-base.emailReadImap","typeVersion":2.1,"position":[-1904,4592],"id":"60f38706-0442-4ec6-aaf8-cccb2789219a","name":"trianhtuenhi","credentials":{"imap":{"id":"kR0q1sphOLPGqlDg","name":"trianhtuenhi@gmail.com"}}},{"parameters":{"resource":"service","operation":"call","domain":"zalo_bot","service":"send_message","serviceAttributes":{"attributes":[{"name":"type","value":"1"},{"name":"ttl","value":"180000"},{"name":"message","value":"={{ $json.output }}"},{"name":"thread_id","value":"=8431470802520516409"},{"name":"account_selection","value":"+84947762285"}]}},"type":"n8n-nodes-base.homeAssistant","typeVersion":1,"position":[-2400,3648],"id":"a32149f2-8258-4304-9dce-f1ac0e818a0b","name":"Call a service","alwaysOutputData":true,"credentials":{"homeAssistantApi":{"id":"1lV5PEu2rtjuQlDB","name":"Home Assistant account"}}},{"parameters":{"resource":"service","operation":"call","domain":"zalo_bot","service":"send_message","serviceAttributes":{"attributes":[{"name":"type","value":"0"},{"name":"ttl","value":60000},{"name":"message","value":"={{ $json.output }}"},{"name":"thread_id","value":"=6643404425553198601"},{"name":"account_selection","value":"+84947762285"}]}},"type":"n8n-nodes-base.homeAssistant","typeVersion":1,"position":[-832,4640],"id":"d88d321b-0acd-4943-8000-614e36f20c1a","name":"Call a service2","alwaysOutputData":true,"credentials":{"homeAssistantApi":{"id":"1lV5PEu2rtjuQlDB","name":"Home Assistant account"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatDeepSeek","typeVersion":1,"position":[-2816,2688],"id":"41d43a8b-e83a-45f7-b3dc-6e34bdedbfe3","name":"DeepSeek Chat Model","credentials":{"deepSeekApi":{"id":"nnHcWmUyC0Gmswgh","name":"DeepSeek account"}}},{"parameters":{"resource":"service","operation":"call","domain":"zalo_bot","service":"send_message","serviceAttributes":{"attributes":[{"name":"type","value":"1"},{"name":"ttl","value":"180000"},{"name":"message","value":"={{ $json.output }}"},{"name":"thread_id","value":"=8431470802520516409"},{"name":"account_selection","value":"+84947762285"}]}},"type":"n8n-nodes-base.homeAssistant","typeVersion":1,"position":[-2432,2368],"id":"2267f629-aa48-49ab-a596-01f85f07ddb7","name":"Call a service3","alwaysOutputData":true,"credentials":{"homeAssistantApi":{"id":"1lV5PEu2rtjuQlDB","name":"Home Assistant account"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatDeepSeek","typeVersion":1,"position":[-2736,3872],"id":"bf5c0c1b-972e-4658-bd18-1ab73526e9ee","name":"DeepSeek Chat Model2","credentials":{"deepSeekApi":{"id":"nnHcWmUyC0Gmswgh","name":"DeepSeek account"}}},{"parameters":{"downloadAttachments":true,"options":{}},"type":"n8n-nodes-base.emailReadImap","typeVersion":2.1,"position":[-3344,2368],"id":"db71b83b-e63e-4b0e-981f-83f80fd86a96","name":"tritue","credentials":{"imap":{"id":"SadEBUHgwO6Iv3qj","name":"tritue0610@gmail.com"}}}],"connections":{"TEXT":{"main":[[{"node":"Call a service3","type":"main","index":0}]]},"nguyenviet":{"main":[[{"node":"Code5","type":"main","index":0}]]},"TEXT1":{"main":[[{"node":"Call a service","type":"main","index":0}]]},"Code5":{"main":[[{"node":"TEXT1","type":"main","index":0}]]},"Code4":{"main":[[{"node":"TEXT","type":"main","index":0}]]},"DeepSeek Chat Model6":{"ai_languageModel":[[{"node":"TEXT2","type":"ai_languageModel","index":1}]]},"TEXT2":{"main":[[{"node":"Call a service2","type":"main","index":0}]]},"Google Gemini Chat Model7":{"ai_languageModel":[[{"node":"TEXT2","type":"ai_languageModel","index":0}]]},"Code":{"main":[[{"node":"TEXT2","type":"main","index":0}]]},"Google Gemini Chat Model1":{"ai_languageModel":[[{"node":"TEXT1","type":"ai_languageModel","index":0}]]},"Google Gemini Chat Model2":{"ai_languageModel":[[{"node":"TEXT","type":"ai_languageModel","index":0}]]},"trianhtuenhi":{"main":[[{"node":"Code","type":"main","index":0}]]},"DeepSeek Chat Model":{"ai_languageModel":[[{"node":"TEXT","type":"ai_languageModel","index":1}]]},"DeepSeek Chat Model2":{"ai_languageModel":[[{"node":"TEXT1","type":"ai_languageModel","index":1}]]},"tritue":{"main":[[{"node":"Code4","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":{"node:Email Trigger (IMAP)":{"lastMessageUid":12969},"node:Email Trigger (IMAP)1":{"lastMessageUid":2150},"node:nguyenviet":{"lastMessageUid":13347},"node:tritue":{"lastMessageUid":2500},"node:Schedule Trigger":{"recurrenceRules":[]},"node:Schedule Trigger1":{"recurrenceRules":[]},"node:trianhtuenhi":{"lastMessageUid":31}},"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"1c990d88-0e69-4d72-bf4e-65796e755f52","triggerCount":3,"shared":[{"createdAt":"2025-08-14T13:16:04.293Z","updatedAt":"2025-08-14T13:16:04.293Z","role":"workflow:owner","workflowId":"jnt0m9DQJYO1QxOZ","projectId":"Bsx4kBdHQHZGGC5J"}],"tags":[]}