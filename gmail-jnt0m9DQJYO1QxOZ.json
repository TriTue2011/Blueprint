{"createdAt":"2025-08-14T13:16:04.293Z","updatedAt":"2025-09-07T09:15:13.142Z","id":"jnt0m9DQJYO1QxOZ","name":"gmail","active":true,"isArchived":false,"nodes":[{"parameters":{"promptType":"define","text":"={{ $json.output_all }}","needsFallback":true,"options":{"systemMessage":"=Bạn là AI chuyên tóm tắt email tiếng Việt.\nNhiệm vụ của bạn:\n\nHợp nhất toàn bộ thông tin từ nội dung email và các phần trích xuất từ file đính kèm (PDF, ảnh, văn bản, v.v.) thành một bản tóm tắt duy nhất.\n\nLoại bỏ trùng lặp: Nếu có câu hoặc thông tin trùng ý, chỉ giữ lại câu rõ ràng và đầy đủ nhất.\n\nGiữ nguyên các thông tin quan trọng như: tiêu đề, số quyết định/văn bản, tên người/đơn vị, ngày tháng, chức danh, địa điểm, thời hạn, yêu cầu hành động.\n\nViết mạch lạc, rõ ràng, ngắn gọn (5–7 câu), giọng trung tính, đúng ngữ cảnh.\n\nKhông thêm thông tin không có trong email/đính kèm.\n\nTrả kết quả ở dạng văn bản thuần (plain text).\n\nDữ liệu email:\n{{ $json.output_all }}"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.2,"position":[-1424,2288],"id":"3fdebdc8-e15f-4b6c-ba80-841210d13861","name":"AI Agent2"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[-1584,2576],"id":"19aa21e3-9eb5-431d-a4e7-2f5c1b617164","name":"Google Gemini Chat Model3","credentials":{"googlePalmApi":{"id":"BmSJpQbzqh1rnp4z","name":"NguyenViet"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatDeepSeek","typeVersion":1,"position":[-1200,2544],"id":"8647f950-c139-42dd-aa52-3befb987eb66","name":"DeepSeek Chat Model1","credentials":{"deepSeekApi":{"id":"nnHcWmUyC0Gmswgh","name":"DeepSeek account"}}},{"parameters":{"jsCode":"const norm = s => String(s||'').normalize('NFC').trim();\nconst normKey = s => norm(s).toLowerCase();\n\nconst inputData = $input.all();\n\nconst seen = new Set();\nconst unique = [];\n\nfor (const item of inputData) {\n  const value = item.json.output || item.json.content;\n  if (!value) continue;\n\n  const k = normKey(value);\n  if (!seen.has(k)) {\n    seen.add(k);\n    unique.push(norm(value));\n  }\n}\n\nreturn [\n  {\n    json: {\n      output_all: unique.join('\\n\\n')\n    }\n  }\n];\n"},"id":"6ddadcab-d8d0-43c6-a3cb-b35511cb4f92","name":"Parsing","type":"n8n-nodes-base.code","position":[-1680,2176],"typeVersion":2},{"parameters":{"promptType":"define","text":"=Nội dung email:\n{{ $json.text_clean }}\n{{ $json.textPlain }}\n{{ $json.from }}\n{{ $json.subject }}\n{{ $json.date }}","needsFallback":true,"options":{"systemMessage":"=Summarize the email content in 5-10 sentences, clearly and coherently, including:\n\nMain topic and purpose\nImportant points, requirements, deadlines, actions needed\nImportant information such as dates, times, locations, sender\nMaintain original urgency level and intent\nRemove greetings, signatures, repetitive information, details that don't affect main content.\nWrite in plain text, entirely in Vietnamese, ordered from most important to least important.\nDo not add inferences beyond the email content."}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.2,"position":[-2848,2368],"id":"403f946e-7d91-4835-9a96-e01a8bbaf418","name":"TEXT"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[-2624,2640],"id":"9d9137d6-ab16-4a71-8fdf-b3b343148564","name":"Google Gemini Chat Model4","credentials":{"googlePalmApi":{"id":"BmSJpQbzqh1rnp4z","name":"NguyenViet"}}},{"parameters":{"downloadAttachments":true,"options":{}},"type":"n8n-nodes-base.emailReadImap","typeVersion":2.1,"position":[-3408,3664],"id":"17bbb0cf-48b0-4d2d-9c88-38137570faeb","name":"nguyenviet","credentials":{"imap":{"id":"hEa9ue55LN63htGc","name":"nguyenvanviet210290@gmail.com"}}},{"parameters":{"downloadAttachments":true,"options":{}},"type":"n8n-nodes-base.emailReadImap","typeVersion":2.1,"position":[-3344,2368],"id":"db71b83b-e63e-4b0e-981f-83f80fd86a96","name":"tritue","credentials":{"imap":{"id":"SadEBUHgwO6Iv3qj","name":"tritue0610@gmail.com"}}},{"parameters":{"promptType":"define","text":"={{ $json.output_all }}","needsFallback":true,"options":{"systemMessage":"=Bạn là AI chuyên tóm tắt email tiếng Việt.\nNhiệm vụ của bạn:\n\nHợp nhất toàn bộ thông tin từ nội dung email và các phần trích xuất từ file đính kèm (PDF, ảnh, văn bản, v.v.) thành một bản tóm tắt duy nhất.\n\nLoại bỏ trùng lặp: Nếu có câu hoặc thông tin trùng ý, chỉ giữ lại câu rõ ràng và đầy đủ nhất.\n\nGiữ nguyên các thông tin quan trọng như: tiêu đề, số quyết định/văn bản, tên người/đơn vị, ngày tháng, chức danh, địa điểm, thời hạn, yêu cầu hành động.\n\nViết mạch lạc, rõ ràng, ngắn gọn (5–7 câu), giọng trung tính, đúng ngữ cảnh.\n\nKhông thêm thông tin không có trong email/đính kèm.\n\nTrả kết quả ở dạng văn bản thuần (plain text).\n\nDữ liệu email:\n{{ $json.output_all }}"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.2,"position":[-1792,3648],"id":"1e5b5318-5a40-4303-a0b4-f129ccd5f943","name":"AI Agent"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[-2208,3968],"id":"354e39e7-5619-459f-8355-6d6f7932fe9b","name":"Google Gemini Chat Model5","credentials":{"googlePalmApi":{"id":"BmSJpQbzqh1rnp4z","name":"NguyenViet"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatDeepSeek","typeVersion":1,"position":[-2080,3968],"id":"55dac8cb-d3d6-44b7-940a-12adca619270","name":"DeepSeek Chat Model","credentials":{"deepSeekApi":{"id":"nnHcWmUyC0Gmswgh","name":"DeepSeek account"}}},{"parameters":{"jsCode":"const norm = s => String(s||'').normalize('NFC').trim();\nconst normKey = s => norm(s).toLowerCase();\n\nconst inputData = $input.all();\n\nconst seen = new Set();\nconst unique = [];\n\nfor (const item of inputData) {\n  const value = item.json.output || item.json.content;\n  if (!value) continue;\n\n  const k = normKey(value);\n  if (!seen.has(k)) {\n    seen.add(k);\n    unique.push(norm(value));\n  }\n}\n\nreturn [\n  {\n    json: {\n      output_all: unique.join('\\n\\n')\n    }\n  }\n];\n"},"id":"2a29a262-b1da-4aa7-9be3-a95b89e0774d","name":"Parsing1","type":"n8n-nodes-base.code","position":[-2016,3632],"typeVersion":2},{"parameters":{"promptType":"define","text":"=Nội dung email:\n{{ $json.text_clean }}\n{{ $json.textPlain }}\n{{ $json.from }}\n{{ $json.subject }}\n{{ $json.date }}","needsFallback":true,"options":{"systemMessage":"=Summarize the email content in 5-10 sentences, clearly and coherently, including:\n\nMain topic and purpose\nImportant points, requirements, deadlines, actions needed\nImportant information such as dates, times, locations, sender\nMaintain original urgency level and intent\nRemove greetings, signatures, repetitive information, details that don't affect main content.\nWrite in plain text, entirely in Vietnamese, ordered from most important to least important.\nDo not add inferences beyond the email content."}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.2,"position":[-2784,3648],"id":"36887edc-6ed3-4fa8-b291-a50f3a089474","name":"TEXT1"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[-2528,3872],"id":"ea984511-18ac-41b8-b65e-0f90cd934da0","name":"Google Gemini Chat Model6","credentials":{"googlePalmApi":{"id":"BmSJpQbzqh1rnp4z","name":"NguyenViet"}}},{"parameters":{"jsCode":"// ==== helpers ====\nfunction decodeHtmlEntities(str) {\n  return String(str || '')\n    .replace(/&#(\\d+);/g, (_, n) => String.fromCharCode(n))\n    .replace(/&#x([0-9a-fA-F]+);/g, (_, h) => String.fromCharCode(parseInt(h, 16)))\n    .replace(/&nbsp;/g, ' ')\n    .replace(/&amp;/g, '&')\n    .replace(/&lt;/g, '<')\n    .replace(/&gt;/g, '>')\n    .replace(/&quot;/g, '\"')\n    .replace(/&apos;/g, \"'\");\n}\nfunction stripHtmlKeepNewlines(str) {\n  return String(str || '')\n    .replace(/<style[\\s\\S]*?<\\/style>/gi, '')\n    .replace(/<script[\\s\\S]*?<\\/script>/gi, '')\n    .replace(/<br\\s*\\/?>/gi, '\\n')\n    .replace(/<\\/p>/gi, '\\n\\n')\n    .replace(/<li[^>]*>/gi, '\\n- ')\n    .replace(/<\\/li>/gi, '')\n    .replace(/<div[^>]*>/gi, '\\n')\n    .replace(/<\\/div>/gi, '\\n')\n    .replace(/<[^>]+>/g, '')\n    .replace(/\\u00A0/g, ' ');\n}\nfunction latin1ToUtf8(s) {\n  try { return Buffer.from(String(s), 'latin1').toString('utf8'); }\n  catch { return s; }\n}\nfunction scoreVN(s) {\n  s = String(s || '');\n  const bad = (s.match(/[\\uFFFD�]/g) || []).length;\n  const moj = (s.match(/[ÂÃÄÅÆÐØÞ×¸¢¿¡]/g) || []).length;\n  const dia = (s.match(/[À-ỹđ]/g) || []).length;\n  return dia * 3 - (bad * 5 + moj * 2);\n}\nfunction tidy(s) {\n  return String(s || '')\n    .replace(/\\r\\n?/g, '\\n')\n    .replace(/[ \\t]+\\n/g, '\\n')\n    .replace(/\\n{3,}/g, '\\n\\n')\n    .replace(/[ \\t]{2,}/g, ' ')\n    .trim();\n}\n\n// ==== main ====\nlet html = '';\nif (Array.isArray($json)) html = $json[0]?.textHtml || $json[0]?.text || '';\nelse html = $json.textHtml || $json.text || '';\n\n// ứng viên A\nconst A = tidy(latin1ToUtf8(stripHtmlKeepNewlines(decodeHtmlEntities(html))));\n// ứng viên B\nconst B = tidy(stripHtmlKeepNewlines(decodeHtmlEntities(latin1ToUtf8(html))));\n\nlet best = A, bestScore = scoreVN(A);\nif (scoreVN(B) > bestScore) best = B;\n\n// bỏ header/footer nếu muốn\nbest = best\n  .replace(/^.*?\\bNhi Anh\\b.*?\\n+/i, '')\n  .replace(/\\n+Ghé thăm LuatVietnam[\\s\\S]*$/i, '');\n\n// ==== return kèm metadata ====\nreturn [{\n  json: {\n    text_clean: tidy(best),\n    textPlain: $json.textPlain || '',\n    from: $json.from || '',\n    subject: $json.subject || '',\n    date: $json.date || ''\n  }\n}];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-3200,3664],"id":"8a5f9ae7-c5d2-4f94-855e-2f02c8b78b1e","name":"Code5"},{"parameters":{"jsCode":"// ==== helpers ====\nfunction decodeHtmlEntities(str) {\n  return String(str || '')\n    .replace(/&#(\\d+);/g, (_, n) => String.fromCharCode(n))\n    .replace(/&#x([0-9a-fA-F]+);/g, (_, h) => String.fromCharCode(parseInt(h, 16)))\n    .replace(/&nbsp;/g, ' ')\n    .replace(/&amp;/g, '&')\n    .replace(/&lt;/g, '<')\n    .replace(/&gt;/g, '>')\n    .replace(/&quot;/g, '\"')\n    .replace(/&apos;/g, \"'\");\n}\nfunction stripHtmlKeepNewlines(str) {\n  return String(str || '')\n    .replace(/<style[\\s\\S]*?<\\/style>/gi, '')\n    .replace(/<script[\\s\\S]*?<\\/script>/gi, '')\n    .replace(/<br\\s*\\/?>/gi, '\\n')\n    .replace(/<\\/p>/gi, '\\n\\n')\n    .replace(/<li[^>]*>/gi, '\\n- ')\n    .replace(/<\\/li>/gi, '')\n    .replace(/<div[^>]*>/gi, '\\n')\n    .replace(/<\\/div>/gi, '\\n')\n    .replace(/<[^>]+>/g, '')\n    .replace(/\\u00A0/g, ' ');\n}\nfunction latin1ToUtf8(s) {\n  try { return Buffer.from(String(s), 'latin1').toString('utf8'); }\n  catch { return s; }\n}\nfunction scoreVN(s) {\n  s = String(s || '');\n  const bad = (s.match(/[\\uFFFD�]/g) || []).length;\n  const moj = (s.match(/[ÂÃÄÅÆÐØÞ×¸¢¿¡]/g) || []).length;\n  const dia = (s.match(/[À-ỹđ]/g) || []).length;\n  return dia * 3 - (bad * 5 + moj * 2);\n}\nfunction tidy(s) {\n  return String(s || '')\n    .replace(/\\r\\n?/g, '\\n')\n    .replace(/[ \\t]+\\n/g, '\\n')\n    .replace(/\\n{3,}/g, '\\n\\n')\n    .replace(/[ \\t]{2,}/g, ' ')\n    .trim();\n}\n\n// ==== main ====\nlet html = '';\nif (Array.isArray($json)) html = $json[0]?.textHtml || $json[0]?.text || '';\nelse html = $json.textHtml || $json.text || '';\n\n// ứng viên A\nconst A = tidy(latin1ToUtf8(stripHtmlKeepNewlines(decodeHtmlEntities(html))));\n// ứng viên B\nconst B = tidy(stripHtmlKeepNewlines(decodeHtmlEntities(latin1ToUtf8(html))));\n\nlet best = A, bestScore = scoreVN(A);\nif (scoreVN(B) > bestScore) best = B;\n\n// bỏ header/footer nếu muốn\nbest = best\n  .replace(/^.*?\\bNhi Anh\\b.*?\\n+/i, '')\n  .replace(/\\n+Ghé thăm LuatVietnam[\\s\\S]*$/i, '');\n\n// ==== return kèm metadata ====\nreturn [{\n  json: {\n    text_clean: tidy(best),\n    textPlain: $json.textPlain || '',\n    from: $json.from || '',\n    subject: $json.subject || '',\n    date: $json.date || ''\n  }\n}];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-3088,2368],"id":"77ec774a-a900-4fb0-96be-4845a57f8797","name":"Code4"},{"parameters":{"model":{"__rl":true,"value":"gemini-2.5-pro","mode":"list","cachedResultName":"gemini-2.5-pro"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-2496,2672],"id":"51544aeb-7863-4193-a946-cb3760ec4566","name":"OpenAI Chat Model","credentials":{"openAiApi":{"id":"0vhR5RV6RzHVkgzl","name":"OpenAi local gemeni"}}},{"parameters":{"model":{"__rl":true,"value":"gemini-2.5-flash","mode":"list","cachedResultName":"gemini-2.5-flash"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-2944,3856],"id":"f85452b4-0089-427d-9230-5d4f5f576ff9","name":"OpenAI Chat Model1","credentials":{"openAiApi":{"id":"0vhR5RV6RzHVkgzl","name":"OpenAi local gemeni"}}},{"parameters":{"promptType":"define","text":"={{ $json.output_all }}","needsFallback":true,"options":{"systemMessage":"=Bạn là AI chuyên tóm tắt email tiếng Việt.\nNhiệm vụ của bạn:\n\nHợp nhất toàn bộ thông tin từ nội dung email và các phần trích xuất từ file đính kèm (PDF, ảnh, văn bản, v.v.) thành một bản tóm tắt duy nhất.\n\nLoại bỏ trùng lặp: Nếu có câu hoặc thông tin trùng ý, chỉ giữ lại câu rõ ràng và đầy đủ nhất.\n\nGiữ nguyên các thông tin quan trọng như: tiêu đề, số quyết định/văn bản, tên người/đơn vị, ngày tháng, chức danh, địa điểm, thời hạn, yêu cầu hành động.\n\nViết mạch lạc, rõ ràng, ngắn gọn (5–7 câu), giọng trung tính, đúng ngữ cảnh.\n\nKhông thêm thông tin không có trong email/đính kèm.\n\nTrả kết quả ở dạng văn bản thuần (plain text).\n\nDữ liệu email:\n{{ $json.output_all }}"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.2,"position":[-208,4640],"id":"33b1817a-f03f-456f-9059-f8cd4907ec90","name":"AI Agent1"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[-624,4960],"id":"a38fd0f4-13a4-47be-b523-bd8dfce54c7c","name":"Google Gemini Chat Model","credentials":{"googlePalmApi":{"id":"BmSJpQbzqh1rnp4z","name":"NguyenViet"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatDeepSeek","typeVersion":1,"position":[-496,4960],"id":"77c8aa46-8025-4058-b407-1c510a031826","name":"DeepSeek Chat Model2","credentials":{"deepSeekApi":{"id":"nnHcWmUyC0Gmswgh","name":"DeepSeek account"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatDeepSeek","typeVersion":1,"position":[-1040,4944],"id":"2f39b1c5-d66b-462b-a9e9-10152ca2b6fa","name":"DeepSeek Chat Model6","credentials":{"deepSeekApi":{"id":"nnHcWmUyC0Gmswgh","name":"DeepSeek account"}}},{"parameters":{"jsCode":"const norm = s => String(s||'').normalize('NFC').trim();\nconst normKey = s => norm(s).toLowerCase();\n\nconst inputData = $input.all();\n\nconst seen = new Set();\nconst unique = [];\n\nfor (const item of inputData) {\n  const value = item.json.output || item.json.content;\n  if (!value) continue;\n\n  const k = normKey(value);\n  if (!seen.has(k)) {\n    seen.add(k);\n    unique.push(norm(value));\n  }\n}\n\nreturn [\n  {\n    json: {\n      output_all: unique.join('\\n\\n')\n    }\n  }\n];\n"},"id":"22380783-2e39-4cb4-a6dd-2a10c887cacc","name":"Parsing2","type":"n8n-nodes-base.code","position":[-432,4624],"typeVersion":2},{"parameters":{"promptType":"define","text":"=Nội dung email:\n{{ $json.text_clean }}\n{{ $json.textPlain }}\n{{ $json.from }}\n{{ $json.subject }}\n{{ $json.date }}","needsFallback":true,"options":{"systemMessage":"=Summarize the email content in 5-10 sentences, clearly and coherently, including:\n\nMain topic and purpose\nImportant points, requirements, deadlines, actions needed\nImportant information such as dates, times, locations, sender\nMaintain original urgency level and intent\nRemove greetings, signatures, repetitive information, details that don't affect main content.\nWrite in plain text, entirely in Vietnamese, ordered from most important to least important.\nDo not add inferences beyond the email content."}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.2,"position":[-1200,4640],"id":"c1e20eac-761f-474b-b616-6b67003af39f","name":"TEXT2"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[-1168,4912],"id":"b629860a-c6f3-4ef7-83ea-c208e0429fda","name":"Google Gemini Chat Model7","credentials":{"googlePalmApi":{"id":"BmSJpQbzqh1rnp4z","name":"NguyenViet"}}},{"parameters":{"jsCode":"// ==== helpers ====\nfunction decodeHtmlEntities(str) {\n  return String(str || '')\n    .replace(/&#(\\d+);/g, (_, n) => String.fromCharCode(n))\n    .replace(/&#x([0-9a-fA-F]+);/g, (_, h) => String.fromCharCode(parseInt(h, 16)))\n    .replace(/&nbsp;/g, ' ')\n    .replace(/&amp;/g, '&')\n    .replace(/&lt;/g, '<')\n    .replace(/&gt;/g, '>')\n    .replace(/&quot;/g, '\"')\n    .replace(/&apos;/g, \"'\");\n}\nfunction stripHtmlKeepNewlines(str) {\n  return String(str || '')\n    .replace(/<style[\\s\\S]*?<\\/style>/gi, '')\n    .replace(/<script[\\s\\S]*?<\\/script>/gi, '')\n    .replace(/<br\\s*\\/?>/gi, '\\n')\n    .replace(/<\\/p>/gi, '\\n\\n')\n    .replace(/<li[^>]*>/gi, '\\n- ')\n    .replace(/<\\/li>/gi, '')\n    .replace(/<div[^>]*>/gi, '\\n')\n    .replace(/<\\/div>/gi, '\\n')\n    .replace(/<[^>]+>/g, '')\n    .replace(/\\u00A0/g, ' ');\n}\nfunction latin1ToUtf8(s) {\n  try { return Buffer.from(String(s), 'latin1').toString('utf8'); }\n  catch { return s; }\n}\nfunction scoreVN(s) {\n  s = String(s || '');\n  const bad = (s.match(/[\\uFFFD�]/g) || []).length;\n  const moj = (s.match(/[ÂÃÄÅÆÐØÞ×¸¢¿¡]/g) || []).length;\n  const dia = (s.match(/[À-ỹđ]/g) || []).length;\n  return dia * 3 - (bad * 5 + moj * 2);\n}\nfunction tidy(s) {\n  return String(s || '')\n    .replace(/\\r\\n?/g, '\\n')\n    .replace(/[ \\t]+\\n/g, '\\n')\n    .replace(/\\n{3,}/g, '\\n\\n')\n    .replace(/[ \\t]{2,}/g, ' ')\n    .trim();\n}\n\n// ==== main ====\nlet html = '';\nif (Array.isArray($json)) html = $json[0]?.textHtml || $json[0]?.text || '';\nelse html = $json.textHtml || $json.text || '';\n\n// ứng viên A\nconst A = tidy(latin1ToUtf8(stripHtmlKeepNewlines(decodeHtmlEntities(html))));\n// ứng viên B\nconst B = tidy(stripHtmlKeepNewlines(decodeHtmlEntities(latin1ToUtf8(html))));\n\nlet best = A, bestScore = scoreVN(A);\nif (scoreVN(B) > bestScore) best = B;\n\n// bỏ header/footer nếu muốn\nbest = best\n  .replace(/^.*?\\bNhi Anh\\b.*?\\n+/i, '')\n  .replace(/\\n+Ghé thăm LuatVietnam[\\s\\S]*$/i, '');\n\n// ==== return kèm metadata ====\nreturn [{\n  json: {\n    text_clean: tidy(best),\n    textPlain: $json.textPlain || '',\n    from: $json.from || '',\n    subject: $json.subject || '',\n    date: $json.date || ''\n  }\n}];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-1616,4656],"id":"e1c36b13-de9c-4831-83c0-62ef9367d21b","name":"Code"},{"parameters":{"model":{"__rl":true,"value":"gemini-2.5-flash","mode":"list","cachedResultName":"gemini-2.5-flash"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-1344,4928],"id":"b2709303-b066-4875-809e-fb3f07f210e8","name":"OpenAI Chat Model2","credentials":{"openAiApi":{"id":"0vhR5RV6RzHVkgzl","name":"OpenAi local gemeni"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[-2784,3872],"id":"1334e80d-7da8-4728-89cb-e68eb5cecb18","name":"Google Gemini Chat Model1","credentials":{"googlePalmApi":{"id":"Noq5n0k4rwmKdMBk","name":"tritue"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[-2880,2704],"id":"0e46dbcd-bb44-46e7-955b-6e7c40bedf57","name":"Google Gemini Chat Model2","credentials":{"googlePalmApi":{"id":"BmSJpQbzqh1rnp4z","name":"NguyenViet"}}},{"parameters":{"model":{"__rl":true,"value":"gemini-2.5-flash","mode":"list","cachedResultName":"gemini-2.5-flash"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-3120,2688],"id":"9122980b-ec97-4746-a685-e720c2fc8079","name":"OpenAI Chat Model3","credentials":{"openAiApi":{"id":"0vhR5RV6RzHVkgzl","name":"OpenAi local gemeni"}}},{"parameters":{"resource":"service","operation":"call","domain":"zalo_bot","service":"send_message","serviceAttributes":{"attributes":[{"name":"type","value":"0"},{"name":"ttl","value":"1800000"},{"name":"message","value":"={{ $json.output }}"},{"name":"thread_id","value":"=6643404425553198601"},{"name":"account_selection","value":"+84947762285"}]}},"type":"n8n-nodes-base.homeAssistant","typeVersion":1,"position":[-2368,2368],"id":"5bff0293-99c6-4fd0-ac28-e1271a820148","name":"Call a service3","credentials":{"homeAssistantApi":{"id":"1lV5PEu2rtjuQlDB","name":"Home Assistant account"}}},{"parameters":{"resource":"service","operation":"call","domain":"zalo_bot","service":"send_message","serviceAttributes":{"attributes":[{"name":"type","value":"0"},{"name":"ttl","value":"1800000"},{"name":"message","value":"={{ $json.output }}"},{"name":"thread_id","value":"=6643404425553198601"},{"name":"account_selection","value":"+84947762285"}]}},"type":"n8n-nodes-base.homeAssistant","typeVersion":1,"position":[-2368,3712],"id":"a7275281-2001-4db8-872e-4b512d40eeca","name":"Call a service4","credentials":{"homeAssistantApi":{"id":"1lV5PEu2rtjuQlDB","name":"Home Assistant account"}}},{"parameters":{"resource":"service","operation":"call","domain":"zalo_bot","service":"send_message","serviceAttributes":{"attributes":[{"name":"type","value":"0"},{"name":"ttl","value":"1800000"},{"name":"message","value":"={{ $json.output }}"},{"name":"thread_id","value":"=6643404425553198601"},{"name":"account_selection","value":"+84947762285"}]}},"type":"n8n-nodes-base.homeAssistant","typeVersion":1,"position":[-864,4640],"id":"625d7d4d-87c6-4f9d-aa07-5c3ec148a008","name":"Call a service5","credentials":{"homeAssistantApi":{"id":"1lV5PEu2rtjuQlDB","name":"Home Assistant account"}}},{"parameters":{"resource":"service","operation":"call","domain":"zalo_bot","service":"send_message","serviceAttributes":{"attributes":[{"name":"type","value":"0"},{"name":"ttl","value":60000},{"name":"message","value":"={{ $json.output }}"},{"name":"thread_id","value":"=6643404425553198601"},{"name":"account_selection","value":"+84947762285"}]}},"type":"n8n-nodes-base.homeAssistant","typeVersion":1,"position":[-2416,3552],"id":"a00771b7-9f99-41d6-90ee-a13ae164622b","name":"Call a service","credentials":{"homeAssistantApi":{"id":"1lV5PEu2rtjuQlDB","name":"Home Assistant account"}}},{"parameters":{"downloadAttachments":true,"options":{}},"type":"n8n-nodes-base.emailReadImap","typeVersion":2.1,"position":[-1904,4592],"id":"60f38706-0442-4ec6-aaf8-cccb2789219a","name":"trianhtuenhi","credentials":{"imap":{"id":"kR0q1sphOLPGqlDg","name":"trianhtuenhi@gmail.com"}}}],"connections":{"AI Agent2":{"main":[[]]},"Google Gemini Chat Model3":{"ai_languageModel":[[{"node":"AI Agent2","type":"ai_languageModel","index":0}]]},"DeepSeek Chat Model1":{"ai_languageModel":[[{"node":"AI Agent2","type":"ai_languageModel","index":1}]]},"Parsing":{"main":[[{"node":"AI Agent2","type":"main","index":0}]]},"TEXT":{"main":[[{"node":"Call a service3","type":"main","index":0}]]},"Google Gemini Chat Model4":{"ai_languageModel":[[]]},"nguyenviet":{"main":[[{"node":"Code5","type":"main","index":0}]]},"tritue":{"main":[[{"node":"Code4","type":"main","index":0}]]},"AI Agent":{"main":[[]]},"Google Gemini Chat Model5":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"DeepSeek Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":1}]]},"Parsing1":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"TEXT1":{"main":[[{"node":"Call a service","type":"main","index":0}]]},"Google Gemini Chat Model6":{"ai_languageModel":[[]]},"Code5":{"main":[[{"node":"TEXT1","type":"main","index":0}]]},"Code4":{"main":[[{"node":"TEXT","type":"main","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[]]},"OpenAI Chat Model1":{"ai_languageModel":[[{"node":"TEXT1","type":"ai_languageModel","index":0}]]},"Google Gemini Chat Model":{"ai_languageModel":[[{"node":"AI Agent1","type":"ai_languageModel","index":0}]]},"DeepSeek Chat Model2":{"ai_languageModel":[[{"node":"AI Agent1","type":"ai_languageModel","index":1}]]},"DeepSeek Chat Model6":{"ai_languageModel":[[]]},"Parsing2":{"main":[[{"node":"AI Agent1","type":"main","index":0}]]},"TEXT2":{"main":[[{"node":"Call a service5","type":"main","index":0}]]},"Google Gemini Chat Model7":{"ai_languageModel":[[{"node":"TEXT2","type":"ai_languageModel","index":1}]]},"Code":{"main":[[{"node":"TEXT2","type":"main","index":0}]]},"Google Gemini Chat Model1":{"ai_languageModel":[[{"node":"TEXT1","type":"ai_languageModel","index":1}]]},"Google Gemini Chat Model2":{"ai_languageModel":[[{"node":"TEXT","type":"ai_languageModel","index":1}]]},"OpenAI Chat Model3":{"ai_languageModel":[[{"node":"TEXT","type":"ai_languageModel","index":0}]]},"OpenAI Chat Model2":{"ai_languageModel":[[{"node":"TEXT2","type":"ai_languageModel","index":0}]]},"trianhtuenhi":{"main":[[{"node":"Code","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":{"node:Email Trigger (IMAP)":{"lastMessageUid":12969},"node:Email Trigger (IMAP)1":{"lastMessageUid":2150},"node:nguyenviet":{"lastMessageUid":13159},"node:tritue":{"lastMessageUid":2339},"node:Schedule Trigger":{"recurrenceRules":[]},"node:Schedule Trigger1":{"recurrenceRules":[]},"node:trianhtuenhi":{"lastMessageUid":31}},"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"13413a28-5ce4-4fca-b264-0b51f04702e1","triggerCount":3,"shared":[{"createdAt":"2025-08-14T13:16:04.293Z","updatedAt":"2025-08-14T13:16:04.293Z","role":"workflow:owner","workflowId":"jnt0m9DQJYO1QxOZ","projectId":"Bsx4kBdHQHZGGC5J"}],"tags":[]}