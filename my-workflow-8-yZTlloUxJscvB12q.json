{"createdAt":"2025-08-24T09:47:56.956Z","updatedAt":"2025-08-28T17:08:28.419Z","id":"yZTlloUxJscvB12q","name":"My workflow 8","active":false,"isArchived":true,"nodes":[{"parameters":{"options":{}},"id":"13bc07a0-397f-4645-bb4e-d6668d1436e9","name":"Loop Over Items","type":"n8n-nodes-base.splitInBatches","position":[320,976],"typeVersion":3},{"parameters":{},"id":"96909650-8239-478f-9991-207249dc4b87","name":"Replace Me","type":"n8n-nodes-base.noOp","position":[1184,1360],"typeVersion":1},{"parameters":{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"conditions":[{"id":"2f466934-e257-4315-8a7f-5e3dde987430","operator":{"name":"filter.operator.equals","type":"string","operation":"equals"},"leftValue":"={{ $json.labelIds[2] }}","rightValue":"={{ $json.labelIds[2] }}"}],"combinator":"and"},"options":{}},"id":"16f5d957-6aa5-4b8f-9de2-d4ccee625b97","name":"If","type":"n8n-nodes-base.if","position":[672,1200],"typeVersion":2.2},{"parameters":{},"id":"b638e917-9868-4b35-891f-d96035ce0cda","name":"Merge","type":"n8n-nodes-base.merge","position":[832,1008],"typeVersion":3.1},{"parameters":{"operation":"getAll","limit":20,"simple":false,"filters":{"readStatus":"both"},"options":{}},"id":"bf04fa0a-3a47-458c-9c85-eab85b416aa1","name":"Gmail - Get All Messages","type":"n8n-nodes-base.gmail","position":[1008,752],"webhookId":"a501a86b-b2df-45ec-b0d9-178765859a0f","typeVersion":2.1},{"parameters":{"operation":"get","messageId":"={{ $json.id }}","simple":false,"options":{}},"id":"4269f758-611f-4fff-bc8d-921e43ba9426","name":"Gmail - Single Message","type":"n8n-nodes-base.gmail","position":[560,992],"webhookId":"ebc7d7c4-aece-4cd4-a46f-dff18891931e","typeVersion":2.1},{"parameters":{"content":"## Auto Gmail Labeling (Powered by OpenAI)","height":996,"width":1692},"id":"72c4c96a-79b3-43fd-a124-ba9798e261b9","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[176,640],"typeVersion":1},{"parameters":{"assignments":{"assignments":[{"id":"2e246278-eccb-4cd5-8c93-7daa824066e3","name":"id","type":"string","value":"={{ $json.id }}"},{"id":"06e5dde5-dfce-4d4d-859d-b364301cb5aa","name":"from","type":"string","value":"={{ $json.headers.from }}"},{"id":"e10231b9-fbb1-447a-a3fc-3ba8e5a9d314","name":"headers.subject","type":"string","value":"={{ $json.headers.subject }}"},{"id":"6a472d41-0f6e-4803-8d94-4b4f8272e66c","name":"text","type":"string","value":"={{ $json.text }}"}]},"options":{}},"id":"adb31ef9-72be-4c10-ae30-f69fe299871b","name":"Extract Email Data","type":"n8n-nodes-base.set","position":[1024,1008],"typeVersion":3.4},{"parameters":{"promptType":"define","text":"=Here is the email details:\nFrom: { $('Merge').item.json.headers.from }}\nSubject line: {{ $json.headers.subject }}\nEmail Body: \n{{ $json.text }}","hasOutputParser":true,"options":{"systemMessage":"You are my Personal Email Labeler.  \nWhen I feed you the subject and body of a new email, you must assign exactly one label—no extra text.\n\nAvailable labels:\n- Newsletter  \n- Inquiry  \n- Invoice  \n- Proposal  \n- Action Required  \n- Follow-up Reminder  \n- Task  \n- Personal  \n- Urgent  \n- Bank  \n- Job Update  \n- Spam / Junk  \n- Social / Networking  \n- Receipt  \n- Event Invite  \n- Subscription Renewal  \n- System Notification  \n\nLabel definitions:\n1. Newsletter  \n   • Subscription updates, promotions, digests.  \n   • No reply needed—just file away.  \n2. Inquiry  \n   • Sender asks a question or requests information.  \n   • Prioritize and suggest replying.  \n3. Invoice  \n   • Billing, receipts, payment requests.  \n   • Flag if payment is due.  \n4. Proposal  \n   • Business offers, contracts, collaboration pitches.  \n   • Flag for review; consider acknowledging receipt.  \n5. Action Required  \n   • Requests that demand you do something (book, confirm, complete).  \n   • Mark and suggest a reminder.  \n6. Follow-up Reminder  \n   • Emails reminding you of something pending or that you already acted on.  \n   • Suggest checking status or pinging again.  \n7. Task  \n   • Contains to-do items or project steps.  \n   • Extract tasks, prioritize by deadline.  \n8. Personal  \n   • From friends or family; non-work.  \n   • Keep accessible but low urgency unless marked urgent.  \n9. Urgent  \n   • Critical deadlines, emergencies, time-sensitive.  \n   • Bump to top of your inbox; reply ASAP.  \n10. Bank  \n    • Statements, alerts, transaction notices, fraud warnings from your bank.  \n    • Flag if action is needed (e.g., verify, transfer, dispute).  \n11. Job Update  \n    • Direct messages from recruiters/HR or alerts from job portals (LinkedIn, Naukri, etc.).  \n    • Flag as relevant opportunity; suggest acknowledging or bookmarking.  \n12. Spam / Junk  \n    • Unwanted bulk mail, phishing attempts, obvious ads.  \n    • Auto-archive or delete.  \n13. Social / Networking  \n    • Notifications from social sites (GitHub, Twitter, forums) not job-related.  \n    • File separately from Job Update.  \n14. Receipt  \n    • E-commerce order confirmations, tickets, one-off purchase receipts.  \n    • Archive after processing.  \n15. Event Invite  \n    • Calendar invitations or RSVPs (Google Meet, Zoom, Outlook).  \n    • Accept/decline or add to calendar.  \n16. Subscription Renewal  \n    • Reminders for software licenses, memberships, domain renewals.  \n    • Flag for manual renewal.  \n17. System Notification  \n    • Alerts from monitoring tools, CI/CD, cloud services, security scanners.  \n    • Triage or forward to team channel.\n\nRules:\n- Read subject + body.  \n- Choose the single best label.  \n- Output **only** that label."}},"id":"ee275336-128a-40dc-9912-9796627bdc57","name":"Categorize Email with AI","type":"@n8n/n8n-nodes-langchain.agent","position":[1232,1008],"typeVersion":1.7},{"parameters":{"assignments":{"assignments":[{"id":"2494d69d-3e5e-42ba-88d2-b76ca1962881","name":"output","type":"string","value":"={{ $json.output }}"}]},"options":{}},"id":"18f57ee7-9ba6-4fca-bc11-446af8bcc27a","name":"Store AI Category","type":"n8n-nodes-base.set","position":[1616,1008],"typeVersion":3.4},{"parameters":{"resource":"label","returnAll":true},"id":"b59f63c9-c650-48e9-926f-dc2ce3ca153c","name":"List All Gmail Labels","type":"n8n-nodes-base.gmail","position":[336,1376],"webhookId":"5c3cbc0b-9239-4a17-a8ec-bc8819341e47","typeVersion":2.1},{"parameters":{"mergeByFields":{"values":[{"field1":"output","field2":"name"}]},"fuzzyCompare":true,"options":{"multipleMatches":"first"}},"id":"00babbac-a394-4129-b5d1-d09db1069deb","name":"Check if Label Exists","type":"n8n-nodes-base.compareDatasets","position":[560,1312],"typeVersion":2.3},{"parameters":{"operation":"addLabels","messageId":"={{ $('Extract Email Data').item.json.id }}","labelIds":"={{ $json.different.id.inputB }}"},"id":"9e93b9ee-a67b-4573-bcde-832e76b22575","name":"Apply Label to Email","type":"n8n-nodes-base.gmail","position":[960,1360],"webhookId":"4a35699e-da45-48e9-8e12-d22b2dcca62e","typeVersion":2.1},{"parameters":{"resource":"label","operation":"create","name":"={{ $('Store AI Category').item.json.output }}","options":{}},"id":"4c67c727-b340-4fe9-85ee-080dc4a3fd59","name":"Apply New Label","type":"n8n-nodes-base.gmail","position":[1616,1296],"webhookId":"a6722fdc-15cb-4796-b82d-53cc23060640","typeVersion":2.1},{"parameters":{"operation":"addLabels","messageId":"={{ $('Extract Email Data').item.json.id }}","labelIds":"={{ $json.id }}"},"id":"281e8d11-2437-4d8e-b2e6-5807034fb104","name":"Create New Label","type":"n8n-nodes-base.gmail","position":[1392,1360],"webhookId":"9e401ad8-b89c-4015-a3cf-b1000ac51ae1","typeVersion":2.1},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4.1-nano","cachedResultName":"gpt-4.1-nano"},"options":{}},"id":"e8225f92-b33e-4857-aa57-bb967ab8f0f7","name":"OpenAI Chat Model","type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","position":[1232,1232],"typeVersion":1.2},{"parameters":{"jsCode":"const excludedLabelIds = [\n  \"Label_5\",   // Newsletter\n  \"Label_21\",  // Inquiry\n  \"Label_11\",  // Invoice\n  \"Label_9\",   // Proposal\n  \"Label_52\",  // Action Required\n  \"Label_55\",  // Follow-up Reminder\n  \"Label_53\",  // Task\n  \"Label_44\",  // Personal\n  \"Label_54\",  // Urgent\n  \"Label_12\",  // Bank\n  \"Label_3\",   // Job Update\n  \"Label_42\",  // Spam / Junk\n  \"Label_7\",   // Social / Networking\n  \"Label_8\",   // Receipt\n  \"Label_2\",   // Event Invite\n  \"Label_10\",  // Subscription Renewal\n  \"Label_4\"    // System Notification\n];\n\n\nreturn items.filter(item => {\n  const labels = item.json.labelIds || [];\n  // Exclude if ANY excluded label is present\n  return !labels.some(label => excludedLabelIds.includes(label));\n});\n"},"id":"1fee21ea-06b1-4293-9123-fd37060401f4","name":"Filter Emails Without Excluded Labels","type":"n8n-nodes-base.code","position":[1600,752],"typeVersion":2},{"parameters":{"jsCode":"// Kiểm tra dữ liệu đầu vào\nconst inputData = items[0];\nlet htmlContent = \"\";\n\n// Kiểm tra cấu trúc của dữ liệu đầu vào\nif (inputData && typeof inputData === 'object') {\n  // Nếu dữ liệu là một đối tượng, thử lấy thuộc tính 'data'\n  if (inputData.data) {\n    htmlContent = inputData.data;\n  } else if (inputData.json && inputData.json.data) {\n    // Thử lấy từ json.data nếu có\n    htmlContent = inputData.json.data;\n  } else {\n    // Thử tìm bất kỳ thuộc tính nào chứa chuỗi HTML\n    for (const key in inputData) {\n      if (typeof inputData[key] === 'string' && \n          (inputData[key].includes('<div') || inputData[key].includes('<table'))) {\n        htmlContent = inputData[key];\n        break;\n      }\n    }\n  }\n} else if (typeof inputData === 'string') {\n  // Nếu dữ liệu là một chuỗi, sử dụng trực tiếp\n  htmlContent = inputData;\n}\n\n// Xử lý HTML nếu có\nconst result = [];\nlet updateTime = \"\";\nlet dataSource = \"\";\n\nif (htmlContent && htmlContent.length > 0) {\n  try {\n    // Tìm tất cả các bảng trong HTML\n    const tableRegex = /<table[^>]*>[\\s\\S]*?<tbody>[\\s\\S]*?<\\/tbody>[\\s\\S]*?<\\/table>/g;\n    let tableMatch;\n    \n    while ((tableMatch = tableRegex.exec(htmlContent)) !== null) {\n      const tableContent = tableMatch[0];\n      const violation = {};\n      \n      // Tìm tất cả các hàng trong bảng\n      const rowRegex = /<tr>[\\s\\S]*?<td>(.*?)<\\/td>[\\s\\S]*?<td>([\\s\\S]*?)<\\/td>[\\s\\S]*?<\\/tr>/g;\n      let rowMatch;\n      \n      while ((rowMatch = rowRegex.exec(tableContent)) !== null) {\n        if (rowMatch.length >= 3) {\n          const key = rowMatch[1].replace(':', '').trim();\n          let value = rowMatch[2].trim();\n          \n          // Loại bỏ HTML tags từ giá trị\n          value = value.replace(/<button.*?<\\/button>/g, '');\n          value = value.replace(/<[^>]*>/g, ' ').replace(/\\s+/g, ' ').trim();\n          \n          // Chuyển đổi key thành camelCase\n          const camelKey = key\n            .normalize('NFD')\n            .replace(/[\\u0300-\\u036f]/g, '')\n            .replace(/đ/g, 'd')\n            .replace(/Đ/g, 'D')\n            .replace(/\\s+(.)/g, (match, group) => group.toUpperCase())\n            .replace(/\\s/g, '')\n            .replace(/^(.)/, (match, group) => group.toLowerCase());\n          \n          violation[camelKey] = value;\n        }\n      }\n      \n      // Chỉ thêm vi phạm nếu có ít nhất một trường dữ liệu\n      if (Object.keys(violation).length > 0) {\n        result.push(violation);\n      }\n    }\n    \n    // Trích xuất thời gian cập nhật\n    const updateTimeMatch = htmlContent.match(/Dữ liệu được cập nhật vào lúc: ([\\d:, -]+)/);\n    if (updateTimeMatch && updateTimeMatch[1]) {\n      updateTime = updateTimeMatch[1].trim();\n    }\n    \n    // Trích xuất nguồn dữ liệu\n    const sourceMatch = htmlContent.match(/Nguồn: <span[^>]*>(.*?)<\\/span>/);\n    if (sourceMatch && sourceMatch[1]) {\n      dataSource = sourceMatch[1].trim();\n    }\n    \n  } catch (error) {\n    return {\n      json: {\n        error: true,\n        message: `Lỗi khi xử lý dữ liệu: ${error.message}`\n      }\n    };\n  }\n}\n\n// Trả về kết quả\nreturn {\n  json: {\n    violations: result,\n    totalViolations: result.length,\n    licensePlate: result.length > 0 ? result[0].bienKiemSoat : '',\n    vehicleType: result.length > 0 ? result[0].loaiPhuongTien : '',\n    metadata: {\n      updateTime: updateTime,\n      dataSource: dataSource\n    }\n  }\n};"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[608,192],"id":"4b92f3f0-151b-4abb-b885-062ad7943f02","name":"Code"},{"parameters":{"rule":{"interval":[{"field":"minutes","minutesInterval":2}]}},"id":"86e9b4ac-13c2-4865-9719-a16a3168767c","name":"Schedule Gmail","type":"n8n-nodes-base.scheduleTrigger","position":[288,752],"typeVersion":1.2},{"parameters":{"rule":{"interval":[{"field":"hours"}]}},"id":"6a146d9c-e8fc-4800-afe9-0b93c6eb133c","name":"Schedule Phat nguoi","type":"n8n-nodes-base.scheduleTrigger","position":[272,208],"typeVersion":1.2},{"parameters":{"url":"=https://api.phatnguoi.vn/web/tra-cuu/34B87922/1","sendHeaders":true,"headerParameters":{"parameters":[{"name":"User-Agent","value":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:140.0) Gecko/20100101 Firefox/140.0"},{"name":"Accept","value":"*/*"},{"name":"Accept-Language","value":"en-US,en;q=0.5"},{"name":"Accept-Encoding","value":"gzip, deflate, br, zstd"},{"name":"Origin","value":"https://phatnguoi.vn"},{"name":"Connection","value":"keep-alive"},{"name":"Referer","value":"https://phatnguoi.vn/"},{"name":"Sec-Fetch-Dest","value":"empty"},{"name":"Sec-Fetch-Mode","value":"cors"},{"name":"Sec-Fetch-Site","value":"same-site"}]},"options":{"response":{}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[432,112],"id":"74bb71f7-d41a-4fa7-9b04-489222f1c74c","name":"phat-nguoi-oto","retryOnFail":true,"onError":"continueRegularOutput"},{"parameters":{"url":"=https://api.phatnguoi.vn/web/tra-cuu/34B53015/2","sendHeaders":true,"headerParameters":{"parameters":[{"name":"User-Agent","value":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:140.0) Gecko/20100101 Firefox/140.0"},{"name":"Accept","value":"*/*"},{"name":"Accept-Language","value":"en-US,en;q=0.5"},{"name":"Accept-Encoding","value":"gzip, deflate, br, zstd"},{"name":"Origin","value":"https://phatnguoi.vn"},{"name":"Connection","value":"keep-alive"},{"name":"Referer","value":"https://phatnguoi.vn/"},{"name":"Sec-Fetch-Dest","value":"empty"},{"name":"Sec-Fetch-Mode","value":"cors"},{"name":"Sec-Fetch-Site","value":"same-site"}]},"options":{"response":{}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[432,304],"id":"cd2f6086-021c-4966-8c7e-2ddc1077a1ed","name":"phat-nguoi-xemay","retryOnFail":true,"onError":"continueRegularOutput"},{"parameters":{"resource":"service","operation":"call","domain":"zalo_bot","service":"send_message","serviceAttributes":{"attributes":[{"name":"message","value":"=Có {{ $json.totalViolations }} lỗi phạt nguội\nLoại Phương Tiện: {{ $json.violations[0].loaiPhuongTien }}\nThời Gian Vi Phạm: {{ $json.violations[0].thoiGianViPham }}\nĐịa Điểm Vi Phạm: {{ $json.violations[0].diaDiemViPham }}\nTrạng Thái: {{ $json.violations[0].trangThai }}\nĐơn Vị Phát Hiện: {{ $json.violations[0].donViPhatHienViPham }}\nNơi Giải Quyết: {{ $json.violations[0].noiGiaiQuyetVuViec }}"},{"name":"thread_id","value":"5841349563795164131"},{"name":"account_selection","value":"+84764343466"},{"name":"type","value":"1"}]}},"type":"n8n-nodes-base.homeAssistant","typeVersion":1,"position":[992,176],"id":"58d88912-be45-46a7-b4a7-fea719ff0d4c","name":"sent-zalo-my-home"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"44c8d62f-87b4-40f9-b856-96a7349621f0","leftValue":"={{ $json.totalViolations }}","rightValue":0,"operator":{"type":"number","operation":"notEquals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[768,192],"id":"73b5bc3d-6d13-4751-b623-b9e81c1439e7","name":"If co vi pham"},{"parameters":{"content":"Automatically get lookup and sent zalo","height":640,"width":992},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[176,-16],"id":"6f867d5d-7395-448b-8aa6-29df829e57e4","name":"Sticky Note1"},{"parameters":{"pollTimes":{"item":[{"mode":"custom","cronExpression":"0 */10 * * * *"}]},"feedUrl":"https://dantri.com.vn/rss/home.rss"},"type":"n8n-nodes-base.rssFeedReadTrigger","typeVersion":1,"position":[1232,368],"id":"ef6e59ec-4e01-4a3d-8030-df6607253f1c","name":"dantri"},{"parameters":{"pollTimes":{"item":[{"mode":"custom","cronExpression":"0 */10 * * * *"}]},"feedUrl":"https://thanhnien.vn/rss/home.rss"},"type":"n8n-nodes-base.rssFeedReadTrigger","typeVersion":1,"position":[1232,208],"id":"7741045b-a958-4d7f-a9d3-5ee8d6b70318","name":"thannien"},{"parameters":{"jsCode":"return items.map(item => {\n  return {\n    json: {\n      title: item.json.title,\n      link: item.json.link,\n      contentSnippet: item.json.contentSnippet,\n      isoDate: item.json.isoDate\n    }\n  };\n});"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1472,208],"id":"e3c1f64a-ae3d-4a40-98db-31c7a2f8fa6e","name":"lọc"},{"parameters":{"schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"vnnew","mode":"list","cachedResultName":"vnnew"},"columns":{"mappingMode":"defineBelow","value":{},"matchingColumns":[],"schema":[],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[1696,208],"id":"892f5b36-6741-4b70-bca2-66d72a7719a5","name":"lưu tin tức","credentials":{"postgres":{"id":"vDBK6XLC0TBpoMww","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":"SELECT * FROM vnnew;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[1536,16],"id":"8ff4b3f4-9949-494d-b85d-e4d2d481ac2a","name":"Execute a SQL query","credentials":{"postgres":{"id":"vDBK6XLC0TBpoMww","name":"Postgres account"}}},{"parameters":{"pollTimes":{"item":[{"mode":"custom","cronExpression":"0 */10 * * * *"}]},"feedUrl":"https://vnexpress.net/rss/tin-moi-nhat.rss"},"type":"n8n-nodes-base.rssFeedReadTrigger","typeVersion":1,"position":[1232,64],"id":"d053f97d-17da-4d10-9952-7b4d54caffe8","name":"vnexpress"},{"parameters":{"content":"Automatically get news and save data","height":632,"width":684},"type":"n8n-nodes-base.stickyNote","position":[1184,-16],"typeVersion":1,"id":"05b52f95-95bc-465c-b06d-f0dffac2ccf5","name":"Sticky Note2"},{"parameters":{"operation":"deleteTable","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"vnnew","mode":"list","cachedResultName":"vnnew"},"deleteCommand":"delete","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[496,-272],"id":"46083f13-6cd8-464d-abc5-62b0b0336c38","name":"Delete table or rows","credentials":{"postgres":{"id":"vDBK6XLC0TBpoMww","name":"Postgres account"}}},{"parameters":{"url":"=https://api.phatnguoi.vn/web/tra-cuu/34C40736/1","sendHeaders":true,"headerParameters":{"parameters":[{"name":"User-Agent","value":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:140.0) Gecko/20100101 Firefox/140.0"},{"name":"Accept","value":"*/*"},{"name":"Accept-Language","value":"en-US,en;q=0.5"},{"name":"Accept-Encoding","value":"gzip, deflate, br, zstd"},{"name":"Origin","value":"https://phatnguoi.vn"},{"name":"Connection","value":"keep-alive"},{"name":"Referer","value":"https://phatnguoi.vn/"},{"name":"Sec-Fetch-Dest","value":"empty"},{"name":"Sec-Fetch-Mode","value":"cors"},{"name":"Sec-Fetch-Site","value":"same-site"}]},"options":{"response":{}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[3664,1840],"id":"6188d2d3-307d-4731-ae49-a966c91da6ef","name":"phat-nguoi-oto1","retryOnFail":true,"onError":"continueRegularOutput"},{"parameters":{"operation":"executeQuery","query":"CREATE TABLE vnnew (\n    title TEXT NOT NULL,\n    link TEXT NOT NULL UNIQUE,\n    contentSnippet TEXT,\n    isodate TIMESTAMP WITH TIME ZONE NOT NULL\n);","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[5216,1600],"id":"0b738cfe-edef-4096-8ced-5375005db383","name":"Creat table vnnew","credentials":{"postgres":{"id":"vDBK6XLC0TBpoMww","name":"Postgres account"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[4320,2864],"id":"427a9eb8-fb51-416e-b3c9-8d5002d41da0","name":"Google Gemini Chat Model","credentials":{"googlePalmApi":{"id":"BmSJpQbzqh1rnp4z","name":"NguyenViet"}}},{"parameters":{"options":{}},"id":"45195cbc-d626-4ed7-9808-39000208b3ba","name":"Loop Over Items1","type":"n8n-nodes-base.splitInBatches","position":[3552,2624],"typeVersion":3},{"parameters":{},"id":"1cd81e33-97be-4a7d-b5e4-f8efd4678579","name":"Replace Me1","type":"n8n-nodes-base.noOp","position":[4416,3008],"typeVersion":1},{"parameters":{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"conditions":[{"id":"2f466934-e257-4315-8a7f-5e3dde987430","operator":{"name":"filter.operator.equals","type":"string","operation":"equals"},"leftValue":"={{ $json.labelIds[2] }}","rightValue":"={{ $json.labelIds[2] }}"}],"combinator":"and"},"options":{}},"id":"6f22806f-e049-46e2-bc87-0369b7789573","name":"If1","type":"n8n-nodes-base.if","position":[3904,2848],"typeVersion":2.2},{"parameters":{},"id":"2b810306-0538-4c87-b57c-feaa6eb1c284","name":"Merge1","type":"n8n-nodes-base.merge","position":[4064,2656],"typeVersion":3.1},{"parameters":{"operation":"getAll","limit":20,"simple":false,"filters":{"readStatus":"both"},"options":{}},"id":"f51fbe4e-1b65-4d11-a6d8-aca099a09655","name":"Gmail - Get All Messages1","type":"n8n-nodes-base.gmail","position":[4240,2400],"webhookId":"a501a86b-b2df-45ec-b0d9-178765859a0f","typeVersion":2.1,"credentials":{"gmailOAuth2":{"id":"RgYFdPUJ820D4HyQ","name":"nguyenvanviet"}}},{"parameters":{"operation":"get","messageId":"={{ $json.id }}","simple":false,"options":{}},"id":"cf8bcbc7-6678-4e3e-b9bc-64e3b7007ab4","name":"Gmail - Single Message1","type":"n8n-nodes-base.gmail","position":[3792,2640],"webhookId":"ebc7d7c4-aece-4cd4-a46f-dff18891931e","typeVersion":2.1,"credentials":{"gmailOAuth2":{"id":"RgYFdPUJ820D4HyQ","name":"nguyenvanviet"}}},{"parameters":{"content":"## Auto Gmail Labeling (Powered by OpenAI)","height":996,"width":1692},"id":"83cf559c-d09c-420e-8789-8ce9fe14d16e","name":"Sticky Note3","type":"n8n-nodes-base.stickyNote","position":[3408,2288],"typeVersion":1},{"parameters":{"assignments":{"assignments":[{"id":"2e246278-eccb-4cd5-8c93-7daa824066e3","name":"id","type":"string","value":"={{ $json.id }}"},{"id":"06e5dde5-dfce-4d4d-859d-b364301cb5aa","name":"from","type":"string","value":"={{ $json.headers.from }}"},{"id":"e10231b9-fbb1-447a-a3fc-3ba8e5a9d314","name":"headers.subject","type":"string","value":"={{ $json.headers.subject }}"},{"id":"6a472d41-0f6e-4803-8d94-4b4f8272e66c","name":"text","type":"string","value":"={{ $json.text }}"}]},"options":{}},"id":"438e9e6b-f669-4cca-8a3b-b461dd687882","name":"Extract Email Data1","type":"n8n-nodes-base.set","position":[4256,2656],"typeVersion":3.4},{"parameters":{"promptType":"define","text":"=Here is the email details:\nFrom: { $('Merge1').item.json.headers.from }}\nSubject line: {{ $json.headers.subject }}\nEmail Body: \n{{ $json.text }}","hasOutputParser":true,"options":{"systemMessage":"You are my Personal Email Labeler.  \nWhen I feed you the subject and body of a new email, you must assign exactly one label—no extra text.\n\nAvailable labels:\n- Newsletter  \n- Inquiry  \n- Invoice  \n- Proposal  \n- Action Required  \n- Follow-up Reminder  \n- Task  \n- Personal  \n- Urgent  \n- Bank  \n- Job Update  \n- Spam / Junk  \n- Social / Networking  \n- Receipt  \n- Event Invite  \n- Subscription Renewal  \n- System Notification  \n\nLabel definitions:\n1. Newsletter  \n   • Subscription updates, promotions, digests.  \n   • No reply needed—just file away.  \n2. Inquiry  \n   • Sender asks a question or requests information.  \n   • Prioritize and suggest replying.  \n3. Invoice  \n   • Billing, receipts, payment requests.  \n   • Flag if payment is due.  \n4. Proposal  \n   • Business offers, contracts, collaboration pitches.  \n   • Flag for review; consider acknowledging receipt.  \n5. Action Required  \n   • Requests that demand you do something (book, confirm, complete).  \n   • Mark and suggest a reminder.  \n6. Follow-up Reminder  \n   • Emails reminding you of something pending or that you already acted on.  \n   • Suggest checking status or pinging again.  \n7. Task  \n   • Contains to-do items or project steps.  \n   • Extract tasks, prioritize by deadline.  \n8. Personal  \n   • From friends or family; non-work.  \n   • Keep accessible but low urgency unless marked urgent.  \n9. Urgent  \n   • Critical deadlines, emergencies, time-sensitive.  \n   • Bump to top of your inbox; reply ASAP.  \n10. Bank  \n    • Statements, alerts, transaction notices, fraud warnings from your bank.  \n    • Flag if action is needed (e.g., verify, transfer, dispute).  \n11. Job Update  \n    • Direct messages from recruiters/HR or alerts from job portals (LinkedIn, Naukri, etc.).  \n    • Flag as relevant opportunity; suggest acknowledging or bookmarking.  \n12. Spam / Junk  \n    • Unwanted bulk mail, phishing attempts, obvious ads.  \n    • Auto-archive or delete.  \n13. Social / Networking  \n    • Notifications from social sites (GitHub, Twitter, forums) not job-related.  \n    • File separately from Job Update.  \n14. Receipt  \n    • E-commerce order confirmations, tickets, one-off purchase receipts.  \n    • Archive after processing.  \n15. Event Invite  \n    • Calendar invitations or RSVPs (Google Meet, Zoom, Outlook).  \n    • Accept/decline or add to calendar.  \n16. Subscription Renewal  \n    • Reminders for software licenses, memberships, domain renewals.  \n    • Flag for manual renewal.  \n17. System Notification  \n    • Alerts from monitoring tools, CI/CD, cloud services, security scanners.  \n    • Triage or forward to team channel.\n\nRules:\n- Read subject + body.  \n- Choose the single best label.  \n- Output **only** that label."}},"id":"75bb0a52-4dfa-4025-ae3f-b28cd6765fec","name":"Categorize Email with AI1","type":"@n8n/n8n-nodes-langchain.agent","position":[4464,2656],"typeVersion":1.7},{"parameters":{"assignments":{"assignments":[{"id":"2494d69d-3e5e-42ba-88d2-b76ca1962881","name":"output","type":"string","value":"={{ $json.output }}"}]},"options":{}},"id":"76f71765-6224-4fe4-95ce-086d75d43f43","name":"Store AI Category1","type":"n8n-nodes-base.set","position":[4848,2656],"typeVersion":3.4},{"parameters":{"resource":"label","returnAll":true},"id":"d7b781e2-12ea-4c72-bf70-7d5464a2fec9","name":"List All Gmail Labels1","type":"n8n-nodes-base.gmail","position":[3568,3024],"webhookId":"5c3cbc0b-9239-4a17-a8ec-bc8819341e47","typeVersion":2.1,"credentials":{"gmailOAuth2":{"id":"RgYFdPUJ820D4HyQ","name":"nguyenvanviet"}}},{"parameters":{"mergeByFields":{"values":[{"field1":"output","field2":"name"}]},"fuzzyCompare":true,"options":{"multipleMatches":"first"}},"id":"fc6be946-816f-4dc1-8495-2950419e2114","name":"Check if Label Exists1","type":"n8n-nodes-base.compareDatasets","position":[3792,2960],"typeVersion":2.3},{"parameters":{"operation":"addLabels","messageId":"={{ $('Extract Email Data1').item.json.id }}","labelIds":"={{ $json.different.id.inputB }}"},"id":"423d93a2-6bfa-4ac9-918c-ac538224116e","name":"Apply Label to Email1","type":"n8n-nodes-base.gmail","position":[4192,3008],"webhookId":"4a35699e-da45-48e9-8e12-d22b2dcca62e","typeVersion":2.1,"credentials":{"gmailOAuth2":{"id":"RgYFdPUJ820D4HyQ","name":"nguyenvanviet"}}},{"parameters":{"resource":"label","operation":"create","name":"={{ $('Store AI Category1').item.json.output }}","options":{}},"id":"1b826df9-b1d4-4e42-966e-9c592c298c25","name":"Apply New Label1","type":"n8n-nodes-base.gmail","position":[4848,2944],"webhookId":"a6722fdc-15cb-4796-b82d-53cc23060640","typeVersion":2.1,"credentials":{"gmailOAuth2":{"id":"RgYFdPUJ820D4HyQ","name":"nguyenvanviet"}}},{"parameters":{"operation":"addLabels","messageId":"={{ $('Extract Email Data1').item.json.id }}","labelIds":"={{ $json.id }}"},"id":"94525430-8be7-4621-bba7-5a6fc909d4e1","name":"Create New Label1","type":"n8n-nodes-base.gmail","position":[4624,3008],"webhookId":"9e401ad8-b89c-4015-a3cf-b1000ac51ae1","typeVersion":2.1,"credentials":{"gmailOAuth2":{"id":"RgYFdPUJ820D4HyQ","name":"nguyenvanviet"}}},{"parameters":{"jsCode":"const excludedLabelIds = [\n  \"Label_5\",   // Newsletter\n  \"Label_21\",  // Inquiry\n  \"Label_11\",  // Invoice\n  \"Label_9\",   // Proposal\n  \"Label_52\",  // Action Required\n  \"Label_55\",  // Follow-up Reminder\n  \"Label_53\",  // Task\n  \"Label_44\",  // Personal\n  \"Label_54\",  // Urgent\n  \"Label_12\",  // Bank\n  \"Label_3\",   // Job Update\n  \"Label_42\",  // Spam / Junk\n  \"Label_7\",   // Social / Networking\n  \"Label_8\",   // Receipt\n  \"Label_2\",   // Event Invite\n  \"Label_10\",  // Subscription Renewal\n  \"Label_4\"    // System Notification\n];\n\n\nreturn items.filter(item => {\n  const labels = item.json.labelIds || [];\n  // Exclude if ANY excluded label is present\n  return !labels.some(label => excludedLabelIds.includes(label));\n});\n"},"id":"671ad9ed-9e2b-45aa-a935-e203fccda0b5","name":"Filter Emails Without Excluded Labels1","type":"n8n-nodes-base.code","position":[4832,2400],"typeVersion":2},{"parameters":{"jsCode":"// Kiểm tra dữ liệu đầu vào\nconst inputData = items[0];\nlet htmlContent = \"\";\n\n// Kiểm tra cấu trúc của dữ liệu đầu vào\nif (inputData && typeof inputData === 'object') {\n  // Nếu dữ liệu là một đối tượng, thử lấy thuộc tính 'data'\n  if (inputData.data) {\n    htmlContent = inputData.data;\n  } else if (inputData.json && inputData.json.data) {\n    // Thử lấy từ json.data nếu có\n    htmlContent = inputData.json.data;\n  } else {\n    // Thử tìm bất kỳ thuộc tính nào chứa chuỗi HTML\n    for (const key in inputData) {\n      if (typeof inputData[key] === 'string' && \n          (inputData[key].includes('<div') || inputData[key].includes('<table'))) {\n        htmlContent = inputData[key];\n        break;\n      }\n    }\n  }\n} else if (typeof inputData === 'string') {\n  // Nếu dữ liệu là một chuỗi, sử dụng trực tiếp\n  htmlContent = inputData;\n}\n\n// Xử lý HTML nếu có\nconst result = [];\nlet updateTime = \"\";\nlet dataSource = \"\";\n\nif (htmlContent && htmlContent.length > 0) {\n  try {\n    // Tìm tất cả các bảng trong HTML\n    const tableRegex = /<table[^>]*>[\\s\\S]*?<tbody>[\\s\\S]*?<\\/tbody>[\\s\\S]*?<\\/table>/g;\n    let tableMatch;\n    \n    while ((tableMatch = tableRegex.exec(htmlContent)) !== null) {\n      const tableContent = tableMatch[0];\n      const violation = {};\n      \n      // Tìm tất cả các hàng trong bảng\n      const rowRegex = /<tr>[\\s\\S]*?<td>(.*?)<\\/td>[\\s\\S]*?<td>([\\s\\S]*?)<\\/td>[\\s\\S]*?<\\/tr>/g;\n      let rowMatch;\n      \n      while ((rowMatch = rowRegex.exec(tableContent)) !== null) {\n        if (rowMatch.length >= 3) {\n          const key = rowMatch[1].replace(':', '').trim();\n          let value = rowMatch[2].trim();\n          \n          // Loại bỏ HTML tags từ giá trị\n          value = value.replace(/<button.*?<\\/button>/g, '');\n          value = value.replace(/<[^>]*>/g, ' ').replace(/\\s+/g, ' ').trim();\n          \n          // Chuyển đổi key thành camelCase\n          const camelKey = key\n            .normalize('NFD')\n            .replace(/[\\u0300-\\u036f]/g, '')\n            .replace(/đ/g, 'd')\n            .replace(/Đ/g, 'D')\n            .replace(/\\s+(.)/g, (match, group) => group.toUpperCase())\n            .replace(/\\s/g, '')\n            .replace(/^(.)/, (match, group) => group.toLowerCase());\n          \n          violation[camelKey] = value;\n        }\n      }\n      \n      // Chỉ thêm vi phạm nếu có ít nhất một trường dữ liệu\n      if (Object.keys(violation).length > 0) {\n        result.push(violation);\n      }\n    }\n    \n    // Trích xuất thời gian cập nhật\n    const updateTimeMatch = htmlContent.match(/Dữ liệu được cập nhật vào lúc: ([\\d:, -]+)/);\n    if (updateTimeMatch && updateTimeMatch[1]) {\n      updateTime = updateTimeMatch[1].trim();\n    }\n    \n    // Trích xuất nguồn dữ liệu\n    const sourceMatch = htmlContent.match(/Nguồn: <span[^>]*>(.*?)<\\/span>/);\n    if (sourceMatch && sourceMatch[1]) {\n      dataSource = sourceMatch[1].trim();\n    }\n    \n  } catch (error) {\n    return {\n      json: {\n        error: true,\n        message: `Lỗi khi xử lý dữ liệu: ${error.message}`\n      }\n    };\n  }\n}\n\n// Trả về kết quả\nreturn {\n  json: {\n    violations: result,\n    totalViolations: result.length,\n    licensePlate: result.length > 0 ? result[0].bienKiemSoat : '',\n    vehicleType: result.length > 0 ? result[0].loaiPhuongTien : '',\n    metadata: {\n      updateTime: updateTime,\n      dataSource: dataSource\n    }\n  }\n};"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[3840,1840],"id":"6c1a1854-9df1-4cf8-ae10-4974ee3deb82","name":"Code1"},{"parameters":{"rule":{"interval":[{"field":"minutes","minutesInterval":2}]}},"id":"ffd07b79-437a-46d2-b8fa-a20b39276f32","name":"Schedule Gmail1","type":"n8n-nodes-base.scheduleTrigger","position":[3520,2400],"typeVersion":1.2},{"parameters":{"rule":{"interval":[{"field":"hours"}]}},"id":"30cf0264-1cea-4daf-9583-6f1b538a88c7","name":"Schedule Phat nguoi1","type":"n8n-nodes-base.scheduleTrigger","position":[3504,1856],"typeVersion":1.2},{"parameters":{"url":"=https://api.phatnguoi.vn/web/tra-cuu/34C32787/1","sendHeaders":true,"headerParameters":{"parameters":[{"name":"User-Agent","value":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:140.0) Gecko/20100101 Firefox/140.0"},{"name":"Accept","value":"*/*"},{"name":"Accept-Language","value":"en-US,en;q=0.5"},{"name":"Accept-Encoding","value":"gzip, deflate, br, zstd"},{"name":"Origin","value":"https://phatnguoi.vn"},{"name":"Connection","value":"keep-alive"},{"name":"Referer","value":"https://phatnguoi.vn/"},{"name":"Sec-Fetch-Dest","value":"empty"},{"name":"Sec-Fetch-Mode","value":"cors"},{"name":"Sec-Fetch-Site","value":"same-site"}]},"options":{"response":{}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[3664,1632],"id":"2a18c5f2-fe84-47b2-9a21-d114b82f47c5","name":"phat-nguoi-oto2","retryOnFail":true,"onError":"continueRegularOutput"},{"parameters":{"url":"=https://api.phatnguoi.vn/web/tra-cuu/34B50323/2","sendHeaders":true,"headerParameters":{"parameters":[{"name":"User-Agent","value":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:140.0) Gecko/20100101 Firefox/140.0"},{"name":"Accept","value":"*/*"},{"name":"Accept-Language","value":"en-US,en;q=0.5"},{"name":"Accept-Encoding","value":"gzip, deflate, br, zstd"},{"name":"Origin","value":"https://phatnguoi.vn"},{"name":"Connection","value":"keep-alive"},{"name":"Referer","value":"https://phatnguoi.vn/"},{"name":"Sec-Fetch-Dest","value":"empty"},{"name":"Sec-Fetch-Mode","value":"cors"},{"name":"Sec-Fetch-Site","value":"same-site"}]},"options":{"response":{}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[3664,2016],"id":"19b53003-775f-4b90-8150-1e92d3ae8e8d","name":"phat-nguoi-xemay1","retryOnFail":true,"onError":"continueRegularOutput"},{"parameters":{"resource":"service","operation":"call","domain":"zalo_bot","service":"send_message","serviceAttributes":{"attributes":[{"name":"message","value":"=Có {{ $json.totalViolations }} lỗi phạt nguội\nLoại Phương Tiện: {{ $json.violations[0].loaiPhuongTien }}\nThời Gian Vi Phạm: {{ $json.violations[0].thoiGianViPham }}\nĐịa Điểm Vi Phạm: {{ $json.violations[0].diaDiemViPham }}\nTrạng Thái: {{ $json.violations[0].trangThai }}\nĐơn Vị Phát Hiện: {{ $json.violations[0].donViPhatHienViPham }}\nNơi Giải Quyết: {{ $json.violations[0].noiGiaiQuyetVuViec }}"},{"name":"thread_id","value":"6643404425553198601"},{"name":"account_selection","value":"+84947762285"},{"name":"type","value":"0"}]}},"type":"n8n-nodes-base.homeAssistant","typeVersion":1,"position":[4224,1824],"id":"9d386ae6-bb79-4b1b-897c-6fe737825823","name":"sent-zalo-my-home1","credentials":{"homeAssistantApi":{"id":"1lV5PEu2rtjuQlDB","name":"Home Assistant account"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"44c8d62f-87b4-40f9-b856-96a7349621f0","leftValue":"={{ $json.totalViolations }}","rightValue":0,"operator":{"type":"number","operation":"notEquals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[4000,1840],"id":"e10fa49a-7bed-42e5-8eb7-98ef09e5f105","name":"If co vi pham1"},{"parameters":{"content":"Automatically get lookup and sent zalo","height":640,"width":992},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[3408,1632],"id":"767e285a-b0db-4b9d-b949-e60849c39cca","name":"Sticky Note4"},{"parameters":{"pollTimes":{"item":[{"mode":"custom","cronExpression":"0 */10 * * * *"}]},"feedUrl":"https://thanhnien.vn/rss/home.rss"},"type":"n8n-nodes-base.rssFeedReadTrigger","typeVersion":1,"position":[4464,2016],"id":"612bfb93-fe1b-499d-830e-5f54051a34a5","name":"dantri1"},{"parameters":{"pollTimes":{"item":[{"mode":"custom","cronExpression":"0 */10 * * * *"}]},"feedUrl":"https://thanhnien.vn/rss/home.rss"},"type":"n8n-nodes-base.rssFeedReadTrigger","typeVersion":1,"position":[4464,1856],"id":"5b146dfa-3d76-4938-948c-41c7bddeba56","name":"thannien1"},{"parameters":{"jsCode":"return items.map(item => {\n  return {\n    json: {\n      title: item.json.title,\n      link: item.json.link,\n      contentSnippet: item.json.contentSnippet,\n      isoDate: item.json.isoDate\n    }\n  };\n});"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[4704,1856],"id":"c9fdc6ce-cb91-4411-8ce0-2784d51124c6","name":"lọc1"},{"parameters":{"schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"vnnew","mode":"list","cachedResultName":"vnnew"},"columns":{"mappingMode":"defineBelow","value":{"title":"={{ $json.title }}","link":"={{ $json.link }}","contentsnippet":"={{ $json.contentSnippet }}","isodate":"={{ $json.isoDate }}"},"matchingColumns":[],"schema":[{"id":"title","displayName":"title","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"link","displayName":"link","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"contentsnippet","displayName":"contentsnippet","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"isodate","displayName":"isodate","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[4912,1856],"id":"ab52bde4-e56d-4453-9ed1-bebc0dde304f","name":"lưu tin tức1","credentials":{"postgres":{"id":"vDBK6XLC0TBpoMww","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":"SELECT * FROM vnnew;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[4704,1664],"id":"31c13dd1-7678-4683-ad5c-8cb45a2452c5","name":"Execute a SQL query1","credentials":{"postgres":{"id":"vDBK6XLC0TBpoMww","name":"Postgres account"}}},{"parameters":{"pollTimes":{"item":[{"mode":"custom","cronExpression":"0 */10 * * * *"}]},"feedUrl":"https://vnexpress.net/rss/tin-moi-nhat.rss"},"type":"n8n-nodes-base.rssFeedReadTrigger","typeVersion":1,"position":[4464,1712],"id":"0a434567-aaa4-409c-afcc-d9e444632464","name":"vnexpress1"},{"parameters":{"content":"Automatically get news and save data","height":632,"width":684},"type":"n8n-nodes-base.stickyNote","position":[4416,1632],"typeVersion":1,"id":"a4c4df0a-bf8e-484c-9fe3-71345102753c","name":"Sticky Note5"}],"connections":{"If":{"main":[[],[{"node":"Merge","type":"main","index":1}]]},"Merge":{"main":[[{"node":"Extract Email Data","type":"main","index":0}]]},"Replace Me":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Apply New Label":{"main":[[{"node":"Create New Label","type":"main","index":0}]]},"Loop Over Items":{"main":[[],[{"node":"Gmail - Single Message","type":"main","index":0}]]},"Create New Label":{"main":[[{"node":"Replace Me","type":"main","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"Categorize Email with AI","type":"ai_languageModel","index":0}]]},"Store AI Category":{"main":[[{"node":"Check if Label Exists","type":"main","index":0},{"node":"List All Gmail Labels","type":"main","index":0}]]},"Extract Email Data":{"main":[[{"node":"Categorize Email with AI","type":"main","index":0}]]},"Apply Label to Email":{"main":[[{"node":"Replace Me","type":"main","index":0}]]},"Check if Label Exists":{"main":[[{"node":"Apply New Label","type":"main","index":0}],[],[{"node":"Apply Label to Email","type":"main","index":0}]]},"List All Gmail Labels":{"main":[[{"node":"Check if Label Exists","type":"main","index":1}]]},"Gmail - Single Message":{"main":[[{"node":"If","type":"main","index":0},{"node":"Merge","type":"main","index":0}]]},"Categorize Email with AI":{"main":[[{"node":"Store AI Category","type":"main","index":0}]]},"Gmail - Get All Messages":{"main":[[{"node":"Filter Emails Without Excluded Labels","type":"main","index":0}]]},"Filter Emails Without Excluded Labels":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Schedule Gmail":{"main":[[{"node":"Gmail - Get All Messages","type":"main","index":0}]]},"Schedule Phat nguoi":{"main":[[{"node":"phat-nguoi-oto","type":"main","index":0},{"node":"phat-nguoi-xemay","type":"main","index":0}]]},"phat-nguoi-oto":{"main":[[{"node":"Code","type":"main","index":0}]]},"Code":{"main":[[{"node":"If co vi pham","type":"main","index":0}]]},"phat-nguoi-xemay":{"main":[[{"node":"Code","type":"main","index":0}]]},"If co vi pham":{"main":[[{"node":"sent-zalo-my-home","type":"main","index":0}]]},"dantri":{"main":[[{"node":"lọc","type":"main","index":0}]]},"thannien":{"main":[[{"node":"lọc","type":"main","index":0}]]},"lọc":{"main":[[{"node":"lưu tin tức","type":"main","index":0}]]},"vnexpress":{"main":[[{"node":"lọc","type":"main","index":0}]]},"phat-nguoi-oto1":{"main":[[{"node":"Code1","type":"main","index":0}]]},"Google Gemini Chat Model":{"ai_languageModel":[[{"node":"Categorize Email with AI1","type":"ai_languageModel","index":0}]]},"Loop Over Items1":{"main":[[],[{"node":"Gmail - Single Message1","type":"main","index":0}]]},"Replace Me1":{"main":[[{"node":"Loop Over Items1","type":"main","index":0}]]},"If1":{"main":[[],[{"node":"Merge1","type":"main","index":1}]]},"Merge1":{"main":[[{"node":"Extract Email Data1","type":"main","index":0}]]},"Gmail - Get All Messages1":{"main":[[{"node":"Filter Emails Without Excluded Labels1","type":"main","index":0}]]},"Gmail - Single Message1":{"main":[[{"node":"If1","type":"main","index":0},{"node":"Merge1","type":"main","index":0}]]},"Extract Email Data1":{"main":[[{"node":"Categorize Email with AI1","type":"main","index":0}]]},"Categorize Email with AI1":{"main":[[{"node":"Store AI Category1","type":"main","index":0}]]},"Store AI Category1":{"main":[[{"node":"Check if Label Exists1","type":"main","index":0},{"node":"List All Gmail Labels1","type":"main","index":0}]]},"List All Gmail Labels1":{"main":[[{"node":"Check if Label Exists1","type":"main","index":1}]]},"Check if Label Exists1":{"main":[[{"node":"Apply New Label1","type":"main","index":0}],[],[{"node":"Apply Label to Email1","type":"main","index":0}]]},"Apply Label to Email1":{"main":[[{"node":"Replace Me1","type":"main","index":0}]]},"Apply New Label1":{"main":[[{"node":"Create New Label1","type":"main","index":0}]]},"Create New Label1":{"main":[[{"node":"Replace Me1","type":"main","index":0}]]},"Filter Emails Without Excluded Labels1":{"main":[[{"node":"Loop Over Items1","type":"main","index":0}]]},"Code1":{"main":[[{"node":"If co vi pham1","type":"main","index":0}]]},"Schedule Gmail1":{"main":[[{"node":"Gmail - Get All Messages1","type":"main","index":0}]]},"Schedule Phat nguoi1":{"main":[[{"node":"phat-nguoi-oto2","type":"main","index":0},{"node":"phat-nguoi-xemay1","type":"main","index":0},{"node":"phat-nguoi-oto1","type":"main","index":0}]]},"phat-nguoi-oto2":{"main":[[{"node":"Code1","type":"main","index":0}]]},"phat-nguoi-xemay1":{"main":[[{"node":"Code1","type":"main","index":0}]]},"If co vi pham1":{"main":[[{"node":"sent-zalo-my-home1","type":"main","index":0}]]},"dantri1":{"main":[[{"node":"lọc1","type":"main","index":0}]]},"thannien1":{"main":[[{"node":"lọc1","type":"main","index":0}]]},"lọc1":{"main":[[{"node":"lưu tin tức1","type":"main","index":0}]]},"vnexpress1":{"main":[[{"node":"lọc1","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"e138e6f8-1941-4b48-ab3b-35d2df97646c","triggerCount":0,"shared":[{"createdAt":"2025-08-24T09:47:56.956Z","updatedAt":"2025-08-24T09:47:56.956Z","role":"workflow:owner","workflowId":"yZTlloUxJscvB12q","projectId":"Bsx4kBdHQHZGGC5J"}],"tags":[]}