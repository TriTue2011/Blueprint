{"createdAt":"2025-08-12T04:12:06.513Z","updatedAt":"2025-09-14T17:08:31.901Z","id":"ydwnFhRCg0NmfUq9","name":"den","active":false,"isArchived":false,"nodes":[{"parameters":{"options":{"maxTokens":8192,"temperature":1,"maxRetries":10,"topP":1}},"type":"@n8n/n8n-nodes-langchain.lmChatDeepSeek","typeVersion":1,"position":[48,80],"id":"e6f6eae6-58fc-4b33-b53d-cdf08c8898b0","name":"DeepSeek"},{"parameters":{"content":"                               \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                                                \n\n\n\n\n                                                     AI Private","height":456,"width":1744},"type":"n8n-nodes-base.stickyNote","position":[-928,-208],"typeVersion":1,"id":"1c5a5bed-65cb-4d3f-9166-7ec53787bc32","name":"Sticky Note2"},{"parameters":{"httpMethod":"POST","path":"hass-zalo-bot","responseMode":"lastNode","options":{}},"name":"Webhook","id":"7e500fbf-6bae-4eaa-a451-164208a6267f","typeVersion":1,"position":[-848,-160],"type":"n8n-nodes-base.webhook","webhookId":"a0bd7c12-569b-42dc-8baa-19f74b9de7ca"},{"parameters":{"resource":"service","operation":"call","domain":"zalo_bot","service":"send_message","serviceAttributes":{"attributes":[{"name":"message","value":"={{ $json.message }}"},{"name":"thread_id","value":"={{ $('to json').item.json.rawData.threadId }}"},{"name":"account_selection","value":"={{ $('to json').item.json.rawData._accountId }}"},{"name":"type","value":"1"}]}},"type":"n8n-nodes-base.homeAssistant","typeVersion":1,"position":[560,-176],"id":"96218957-2035-44d2-a94a-68ca6ff42466","name":"Call a service"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[-80,80],"id":"d9a0698b-e2c8-4bae-8235-10d52b502df1","name":"Google Gemini Chat Model"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"d35f523e-09af-4a9c-a866-d123a96f790b","leftValue":"={{ $json.msgType }}","rightValue":"webchat","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}},{"id":"8e9149ea-43e0-42f8-a432-b13f4708107c","leftValue":"={{ $json.content }}","rightValue":"@n8n","operator":{"type":"string","operation":"contains"}},{"id":"bca28b7b-6b1e-490b-960d-ad4a52146fad","leftValue":"={{ $json.uidFrom }}","rightValue":"8527626492165203115","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-496,-48],"id":"03633d8d-ea54-42f2-8b51-21e2e0edf846","name":"If text"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"4f51e3b1-56b8-43b5-ad5b-1f3aeec49d5a","leftValue":"={{ $json.msgType }}","rightValue":"chat.voice","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}},{"id":"b0bd1b27-5bd5-4e2f-b592-9bbfbec87af8","leftValue":"={{ $json.content.href }}","rightValue":"","operator":{"type":"string","operation":"notEmpty","singleValue":true}},{"id":"0f9469f5-675a-4ac6-a336-7c1751fe2361","leftValue":"={{ $json.uidFrom }}","rightValue":"8527626492165203115","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-832,128],"id":"95570954-c53d-477b-8b6a-5d5557719c1f","name":"If voice"},{"parameters":{"jsCode":"// Lấy dữ liệu từ webhook\nconst webhookData = $input.item.json;\n\n// Lấy chuỗi message\nconst messageString = webhookData.originalMessage || webhookData.body.message;\n\n// Parse chuỗi message thành object\nlet messageData;\ntry {\n  // Xử lý các giá trị Python không tương thích với JSON\n  let jsonCompatible = messageString\n    .replace(/'/g, '\"')          // Thay thế dấu nháy đơn bằng dấu nháy kép\n    .replace(/False/g, 'false')  // Thay thế False của Python thành false của JSON\n    .replace(/True/g, 'true')    // Thay thế True của Python thành true của JSON\n    .replace(/None/g, 'null');   // Thay thế None của Python thành null của JSON\n  \n  // Xử lý các chuỗi JSON lồng nhau đã được escape\n  jsonCompatible = jsonCompatible.replace(/\"{/g, '{').replace(/}\"/g, '}');\n  \n  // Parse chuỗi thành object\n  messageData = JSON.parse(jsonCompatible);\n} catch (error) {\n  // Nếu vẫn không parse được, thử cách khác\n  try {\n    // Đôi khi chuỗi có thể chứa các ký tự escape không hợp lệ\n    const evalString = messageString\n      .replace(/'/g, '\"')\n      .replace(/False/g, 'false')\n      .replace(/True/g, 'true')\n      .replace(/None/g, 'null');\n    \n    // Sử dụng eval một cách an toàn để parse chuỗi\n    messageData = JSON.parse(evalString);\n  } catch (err) {\n    // Nếu không parse được, trả về lỗi chi tiết\n    return {\n      json: {\n        error: \"Không thể parse dữ liệu message\",\n        originalMessage: messageString,\n        errorDetails: error.message,\n        secondAttemptError: err.message\n      }\n    };\n  }\n}\n\n// Tạo object kết quả với các trường chính\nconst result = {\n  // Thông tin chung\n  type: messageData.type,\n  isSelf: messageData.isSelf,\n  threadId: messageData.threadId,\n  accountId: messageData._accountId,\n  \n  // Thông tin tin nhắn\n  actionId: messageData.data?.actionId,\n  msgId: messageData.data?.msgId,\n  cliMsgId: messageData.data?.cliMsgId,\n  msgType: messageData.data?.msgType,\n  \n  // Thông tin người gửi/nhận\n  uidFrom: messageData.data?.uidFrom,\n  idTo: messageData.data?.idTo,\n  dName: messageData.data?.dName,\n  \n  // Nội dung tin nhắn\n  content: messageData.data?.content,\n  timestamp: messageData.data?.ts,\n  status: messageData.data?.status,\n  \n  // Thông tin trích dẫn nếu có\n  quote: messageData.data?.quote ? {\n    ownerId: messageData.data.quote.ownerId,\n    message: messageData.data.quote.msg,\n    timestamp: messageData.data.quote.ts,\n    fromName: messageData.data.quote.fromD\n  } : null,\n  \n  // Thông tin mentions nếu có\n  mentions: messageData.data?.mentions || [],\n  \n  // Dữ liệu gốc để tham khảo\n  rawData: messageData\n};\n\n// Trả về kết quả\nreturn {\n  json: result\n};"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-672,-160],"id":"e83a72c2-e387-4787-8a17-57f32e0f3622","name":"to json"},{"parameters":{"jsCode":"const items = $input.all();\nlet inputData = items[0].json;\n\n// Lấy nội dung cần xử lý\nlet msg = inputData.output;\n\n// Xóa các ký tự đặc biệt: backtick và dấu sao\nmsg = msg.replace(/`/g, '').replace(/\\*/g, '');\n\n// Phân tách tin nhắn dài\nconst maxLen = 3000;\nlet messages = [];\n\nfor (let i = 0; i < msg.length; i += maxLen) {\n  let part = msg.substring(i, i + maxLen);\n  messages.push({ json: { message: part, quote: { thumb: \"\" } } });\n}\n\nreturn messages.length ? messages : [{ json: { message: \"Không có thông tin để hiển thị\", quote: { thumb: \"\" } } }];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[320,-176],"id":"09f37d89-e273-4fa7-91c1-14073935ab1b","name":"maxLen"},{"parameters":{"jsCode":"return items.map(item => {\n  const text = item.json.content.parts?.[0]?.text || '';\n  return {\n    json: {\n      content: text\n    }\n  };\n});\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-272,112],"id":"90e8bd53-d5f3-4934-9093-cd24c3c93134","name":"Code"},{"parameters":{"resource":"audio","modelId":{"__rl":true,"value":"models/gemini-2.0-flash-lite","mode":"list","cachedResultName":"models/gemini-2.0-flash-lite"},"audioUrls":"={{ $json.content.href }}","options":{}},"type":"@n8n/n8n-nodes-langchain.googleGemini","typeVersion":1,"position":[-560,112],"id":"a8c687fd-b083-4733-885f-6d81f89c5ec8","name":"stt"},{"parameters":{"promptType":"define","text":"=Thời gian hiện tại: {{ $now }}. \nXếp Black hỏi: \n{{ $('to json').item.json.rawData.data.content }}\n{{ $('to json').item.json.content.title }}\n{{ $('to json').item.json.content.href }}\n","needsFallback":true,"options":{"systemMessage":"# TRỢ LÝ AI THÔNG MINH - HƯỚNG DẪN HOẠT ĐỘNG\n\n## VAI TRÒ VÀ QUY TRÌNH XỬ LÝ\nBạn là trợ lý AI thông minh phục vụ Sếp Black. Làm theo quy trình sau cho mỗi yêu cầu:\n\n\n1. **PHÂN TÍCH YÊU CẦU**: Phân tích kỹ lưỡng yêu cầu người dùng\n3. **ĐÁNH GIÁ CÔNG CỤ**: Xác định công cụ phù hợp nhất\n4. **KIỂM TRA DỮ LIỆU**: Xác minh dữ liệu đầu vào đã đủ chưa\n5. **THỰC HIỆN**: Sử dụng công cụ đã chọn và xử lý kết quả\n6. **PHẢN HỒI**: Tạo phản hồi theo định dạng hướng dẫn bên dưới\n\n## HƯỚNG DẪN PHẢN HỒI\n- Ghi rõ nguồn thông tin\n- Tập trung vào vấn đề chính, nội dung ngắn gọn, sạch sẽ, dễ đọc\n- Thêm nhãn [AI Tự Suy Luận] khi không sử dụng công cụ\n- Không Được phép trả lời các câu hỏi liên quan đến chính trị, tôn giáo, chủng tộc, vùng miền, giới tính, Sex, Tình dục\n- Với câu hỏi về nguồn gốc AI, trả lời là \"Sếp Black\"\n- Nếu yêu cầu về dự đoán kết quả xổ số, thì hãy dùng công cụ truy cập lấy kết quả 10 ngày gần nhất, rồi hãy tư duy đưa ra các kết quả có thể có xu hướng về\n- Nếu hỏi về tin mới, tin tức thì hãy truy vấn ở bảng db có tên là vnnew, bao gồm các cột: title (tiêu đề của bài báo) , link (địa chủ url của bài báo) , contentsnippet (nội dung tóm tắt của bài báo) , isodate (là thời gian.ví dụ 2025-07-13T13:12:00.000Z ). \n- Nếu hỏi về tin nhắn nhóm, tóm tắt nội dung, trò chuyện trong nhóm..., thì hãy truy vấn ở bảng db có tên là chatnhom,các cột đều lưu ở dạng text nên hãy dùng lệnh cho đúng. ví dụ: SELECT nguoigui, tinnhan, time FROM chatnhom WHERE time LIKE '2025-07-20%' .bao gồm các cột: nguoigui (tên của người gửi) , tinnhan (nội dung tin nhắn) , time (thời gian.ví dụ 2025-07-13T13:12:00.000Z ). \n- Kết hợp xu hướng hiện tại,Trending, hài hước để cuộc trò chuyện thoải mái nhưng không làm sai lệch nội dung\n- Không phản hồi các thẻ url, markdown vì thiết bị của người hỏi chỉ hỗ trợ text đơn thuần và các emoi icon\n"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.1,"position":[-48,-176],"id":"647fc385-a6d7-4e3e-b219-0688d4032d6c","name":"AI Agent","retryOnFail":true,"onError":"continueRegularOutput"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"d35f523e-09af-4a9c-a866-d123a96f790b","leftValue":"={{ $json.msgType }}","rightValue":"chat.photo","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}},{"id":"8e9149ea-43e0-42f8-a432-b13f4708107c","leftValue":"={{ $json.content.title }}","rightValue":"@n8n","operator":{"type":"string","operation":"contains"}},{"id":"bca28b7b-6b1e-490b-960d-ad4a52146fad","leftValue":"={{ $json.uidFrom }}","rightValue":"8527626492165203115","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-496,-160],"id":"a3b71189-be83-43aa-b1ee-84b6eaf93dff","name":"If img"},{"parameters":{"sseEndpoint":"http://localhost:5678/mcp/google","include":"selected","options":{}},"type":"@n8n/n8n-nodes-langchain.mcpClientTool","typeVersion":1,"position":[272,80],"id":"2a8b447c-01be-4a94-8079-b7d2396bb6ae","name":"google"},{"parameters":{"sseEndpoint":"http://localhost:5678/mcp/tracuu","options":{}},"type":"@n8n/n8n-nodes-langchain.mcpClientTool","typeVersion":1,"position":[368,80],"id":"cd6a2678-4268-4c75-a46a-79f290082819","name":"tracuu"},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('to json').item.json.rawData.threadId }}","tableName":"histories_private"},"type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1.3,"position":[160,80],"id":"577b064d-ce10-4f98-ae30-63c6210f6a6f","name":"memory"},{"parameters":{"description":"Use this tool to download files, documents","workflowId":{"__rl":true,"value":"T1gzDhDncq21FOJB","mode":"list","cachedResultName":"Download"},"workflowInputs":{"mappingMode":"defineBelow","value":{"idzalo":"{{ $('to json').item.json.rawData.threadId }}","idfile":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('idfile', `- idfile: ID of file, document`, 'string') }}"},"matchingColumns":[],"schema":[{"id":"idfile","displayName":"idfile","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true},{"id":"idzalo","displayName":"idzalo","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true}],"attemptToConvertTypes":false,"convertFieldsToString":false}},"type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":2.2,"position":[480,80],"id":"7482a384-67af-485a-9c30-ffbd6cbae3f5","name":"download"},{"parameters":{"url":"http://192.168.1.220:8000/health","sendBody":true,"contentType":"multipart-form-data","bodyParameters":{"parameters":[{"name":"prompt","value":"Tạo ảnh 1 chú mèo dễ thương"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-576,432],"id":"d7cb6d03-2d79-405d-af95-a06beb48df45","name":"HTTP Request"},{"parameters":{"method":"POST","url":"http://192.168.1.220:8000/chat","sendBody":true,"contentType":"multipart-form-data","bodyParameters":{"parameters":[{"name":"prompt","value":"Phân tích nội dung file"},{"name":"file","value":"@https://drive.google.com/uc?export=download&id=1yu06XBXk3MTkCONmrSKz74jgAZSGdWbJ"}]},"options":{"response":{"response":{"responseFormat":"json"}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-752,288],"id":"40b9970f-359f-459c-94d9-1bf400a09006","name":"HTTP Request1"},{"parameters":{"method":"POST","url":"http://192.168.1.220:8000/generate","sendBody":true,"contentType":"multipart-form-data","bodyParameters":{"parameters":[{"name":"prompt","value":"Mô tả nội dung trong bức ảnh này"},{"name":"file","value":"@https://cdn.canhsatpccc.gov.vn/Uploads/news_file_folder/h5jppnqr.gal-105_2025_ND-CP_15052025-signed.pdf"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-144,384],"id":"33fb0025-aab7-49c3-8715-631ecdaf9b5e","name":"HTTP Request2"},{"parameters":{"operation":"download","fileId":{"__rl":true,"value":"1nlWfsbW2QfFhIWgTHX4QP391nGQChwZD","mode":"list","cachedResultName":"285.25 Miễn nhiệm nhân sự Nguyễn Văn Sáng.pdf","cachedResultUrl":"https://drive.google.com/file/d/1nlWfsbW2QfFhIWgTHX4QP391nGQChwZD/view?usp=drivesdk"},"options":{"binaryPropertyName":"data"}},"type":"n8n-nodes-base.googleDrive","typeVersion":3,"position":[-384,208],"id":"40aaeae2-9644-47af-af44-3c099a854cdd","name":"Download file","credentials":{"googleDriveOAuth2Api":{"id":"LqceacVZayCNzphl","name":"nguyenvanviet"}}},{"parameters":{"method":"POST","url":"http://192.168.1.220:1455/v1/chat/completions","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjE5MzQ0ZTY1LWJiYzktNDRkMS1hOWQwLWY5NTdiMDc5YmQwZSIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiaHR0cHM6Ly9hcGkub3BlbmFpLmNvbS92MSJdLCJjbGllbnRfaWQiOiJhcHBfRU1vYW1FRVo3M2YwQ2tYYVhwN2hyYW5uIiwiZXhwIjoxNzU2ODY3NjgyLCJodHRwczovL2FwaS5vcGVuYWkuY29tL2F1dGgiOnsiY2hhdGdwdF9hY2NvdW50X2lkIjoiMzkxZjRhOTctZTBlNy00NWRjLWEzNDAtMDA3ZTY3ZmUxODFjIiwiY2hhdGdwdF9hY2NvdW50X3VzZXJfaWQiOiJ1c2VyLVpiM2hERGN2YWFKdzdiUVhYZjNTVzZ1N19fMzkxZjRhOTctZTBlNy00NWRjLWEzNDAtMDA3ZTY3ZmUxODFjIiwiY2hhdGdwdF9wbGFuX3R5cGUiOiJwbHVzIiwiY2hhdGdwdF91c2VyX2lkIjoidXNlci1aYjNoRERjdmFhSnc3YlFYWGYzU1c2dTciLCJ1c2VyX2lkIjoidXNlci1aYjNoRERjdmFhSnc3YlFYWGYzU1c2dTcifSwiaHR0cHM6Ly9hcGkub3BlbmFpLmNvbS9wcm9maWxlIjp7ImVtYWlsIjoidHJpdHVlMDYxMEBnbWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZX0sImlhdCI6MTc1NjAwMzY4MiwiaXNzIjoiaHR0cHM6Ly9hdXRoLm9wZW5haS5jb20iLCJqdGkiOiI5MmI2YzA0ZS0zOTc1LTRkODAtYTliOS01NGYwYzIxNTk4OTciLCJuYmYiOjE3NTYwMDM2ODIsInB3ZF9hdXRoX3RpbWUiOjE3NTYwMDM2ODA4MzIsInNjcCI6WyJvcGVuaWQiLCJwcm9maWxlIiwiZW1haWwiLCJvZmZsaW5lX2FjY2VzcyJdLCJzZXNzaW9uX2lkIjoiYXV0aHNlc3Nfb1lEanBUVXN5UjZKZjJLRktLSE01cTN2Iiwic3ViIjoiZ29vZ2xlLW9hdXRoMnwxMDk2ODY1NzE0ODgzNTYxNjMyNjkifQ.FDc3VUPLFeIThV-XYwKmy2Nk35s5A7jUYq-yGOfrBor-mv-ZHY0En7xMzdIN32GWEMHVzXGgiugeZrv9673e5-rc1DQ2i7ZcDGw6LWKUi8-YJ9nXYxRda0LGs796lUjBxwwN353JTweZghDNdCT0NYmajG7dDI34RLI1FLc6YVpNO2LoefxZJZknExbqnbK8z-8Ib7ePs1zKbTFJvcRDhW0og68abthgyzINsZRp-nZbzyNd8d9eyN-Y6i-E9_VXLKve2FnuzrSJtlY0DKaOaz9CN3WOuwshZ8BRCDIT6Aawai9nGkOxK8dI9JO0cN35lMA0oNTFA6lG4wVgI1f9gWIHopex0QY47__4b8JIQWJj_PqJOdf5SNS73J5qm6b6kt05G07DmaoCVwsHQpscLEK8D2llvVlrlx3GtwwbWpMXrxxr7k2Pt9rUvqdjZIls8YX9gP6eaPrHMgLgibtMW3ZTb28Kba1TGH9yi35juNArcDzBHImqNo-ke0BiVZq5zVVF-L9J97AtGsUGaycqtPsy01MzUsVv8HCO714mvXfPw8__HFHiSmFUCskqfZqvu7vo4TA0-dtVydc82qPSpNubH_mwTBJvsC3cEzEqLftet1PhrwCLeKEFlBOHankXTGKDLm31VQpQLy_mVlQpTirVcwuJxjLjoIcfZOnyv00\",     \"refresh_token\": \"rt_A66HCGzpJkSt5p56Dg8gcNodGakHPnWF4cH6T-o5T4o.IObK50GZ6bX8_ADb7c4-nIw19aPicD2ucWrGwMhDrZo"},{"name":"Content-Type","value":"application/json"}]},"sendBody":true,"bodyParameters":{"parameters":[{}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[192,592],"id":"720c5563-e161-4a9e-b813-53c7f784c5c6","name":"HTTP Request3"},{"parameters":{"options":{}},"id":"4549ce45-2ca6-4bf2-a710-28c3e428583d","name":"Loop Over Items","type":"n8n-nodes-base.splitInBatches","position":[1968,880],"typeVersion":3},{"parameters":{},"id":"cc82dda5-4f82-4f04-a94c-8908be358e49","name":"Replace Me","type":"n8n-nodes-base.noOp","position":[2832,1264],"typeVersion":1},{"parameters":{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"conditions":[{"id":"2f466934-e257-4315-8a7f-5e3dde987430","operator":{"name":"filter.operator.equals","type":"string","operation":"equals"},"leftValue":"={{ $json.labelIds[2] }}","rightValue":"={{ $json.labelIds[2] }}"}],"combinator":"and"},"options":{}},"id":"11ba002d-c740-401a-bc39-3641c1fef0c1","name":"If","type":"n8n-nodes-base.if","position":[2320,1104],"typeVersion":2.2},{"parameters":{},"id":"4ff915dd-c3a6-4b0a-8a6d-80d3dc8a1fac","name":"Merge","type":"n8n-nodes-base.merge","position":[2480,912],"typeVersion":3.1},{"parameters":{"operation":"getAll","limit":20,"simple":false,"filters":{"readStatus":"both"},"options":{}},"id":"993ec33d-b63a-4bf6-96a6-a1090c6e7a8a","name":"Gmail - Get All Messages","type":"n8n-nodes-base.gmail","position":[2656,656],"webhookId":"a501a86b-b2df-45ec-b0d9-178765859a0f","typeVersion":2.1},{"parameters":{"operation":"get","messageId":"={{ $json.id }}","simple":false,"options":{}},"id":"8c0314c9-fbed-400c-9a29-e95d7fdbc601","name":"Gmail - Single Message","type":"n8n-nodes-base.gmail","position":[2208,896],"webhookId":"ebc7d7c4-aece-4cd4-a46f-dff18891931e","typeVersion":2.1},{"parameters":{"content":"## Auto Gmail Labeling (Powered by OpenAI)","height":996,"width":1692},"id":"b9cc6a27-3bd4-46f0-8700-02fad402ad41","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[1824,544],"typeVersion":1},{"parameters":{"assignments":{"assignments":[{"id":"2e246278-eccb-4cd5-8c93-7daa824066e3","name":"id","type":"string","value":"={{ $json.id }}"},{"id":"06e5dde5-dfce-4d4d-859d-b364301cb5aa","name":"from","type":"string","value":"={{ $json.headers.from }}"},{"id":"e10231b9-fbb1-447a-a3fc-3ba8e5a9d314","name":"headers.subject","type":"string","value":"={{ $json.headers.subject }}"},{"id":"6a472d41-0f6e-4803-8d94-4b4f8272e66c","name":"text","type":"string","value":"={{ $json.text }}"}]},"options":{}},"id":"d8ae37bd-9e62-4ce4-9e40-de017967927d","name":"Extract Email Data","type":"n8n-nodes-base.set","position":[2672,912],"typeVersion":3.4},{"parameters":{"promptType":"define","text":"=Here is the email details:\nFrom: { $('Merge').item.json.headers.from }}\nSubject line: {{ $json.headers.subject }}\nEmail Body: \n{{ $json.text }}","hasOutputParser":true,"options":{"systemMessage":"You are my Personal Email Labeler.  \nWhen I feed you the subject and body of a new email, you must assign exactly one label—no extra text.\n\nAvailable labels:\n- Newsletter  \n- Inquiry  \n- Invoice  \n- Proposal  \n- Action Required  \n- Follow-up Reminder  \n- Task  \n- Personal  \n- Urgent  \n- Bank  \n- Job Update  \n- Spam / Junk  \n- Social / Networking  \n- Receipt  \n- Event Invite  \n- Subscription Renewal  \n- System Notification  \n\nLabel definitions:\n1. Newsletter  \n   • Subscription updates, promotions, digests.  \n   • No reply needed—just file away.  \n2. Inquiry  \n   • Sender asks a question or requests information.  \n   • Prioritize and suggest replying.  \n3. Invoice  \n   • Billing, receipts, payment requests.  \n   • Flag if payment is due.  \n4. Proposal  \n   • Business offers, contracts, collaboration pitches.  \n   • Flag for review; consider acknowledging receipt.  \n5. Action Required  \n   • Requests that demand you do something (book, confirm, complete).  \n   • Mark and suggest a reminder.  \n6. Follow-up Reminder  \n   • Emails reminding you of something pending or that you already acted on.  \n   • Suggest checking status or pinging again.  \n7. Task  \n   • Contains to-do items or project steps.  \n   • Extract tasks, prioritize by deadline.  \n8. Personal  \n   • From friends or family; non-work.  \n   • Keep accessible but low urgency unless marked urgent.  \n9. Urgent  \n   • Critical deadlines, emergencies, time-sensitive.  \n   • Bump to top of your inbox; reply ASAP.  \n10. Bank  \n    • Statements, alerts, transaction notices, fraud warnings from your bank.  \n    • Flag if action is needed (e.g., verify, transfer, dispute).  \n11. Job Update  \n    • Direct messages from recruiters/HR or alerts from job portals (LinkedIn, Naukri, etc.).  \n    • Flag as relevant opportunity; suggest acknowledging or bookmarking.  \n12. Spam / Junk  \n    • Unwanted bulk mail, phishing attempts, obvious ads.  \n    • Auto-archive or delete.  \n13. Social / Networking  \n    • Notifications from social sites (GitHub, Twitter, forums) not job-related.  \n    • File separately from Job Update.  \n14. Receipt  \n    • E-commerce order confirmations, tickets, one-off purchase receipts.  \n    • Archive after processing.  \n15. Event Invite  \n    • Calendar invitations or RSVPs (Google Meet, Zoom, Outlook).  \n    • Accept/decline or add to calendar.  \n16. Subscription Renewal  \n    • Reminders for software licenses, memberships, domain renewals.  \n    • Flag for manual renewal.  \n17. System Notification  \n    • Alerts from monitoring tools, CI/CD, cloud services, security scanners.  \n    • Triage or forward to team channel.\n\nRules:\n- Read subject + body.  \n- Choose the single best label.  \n- Output **only** that label."}},"id":"9b00818a-575f-4927-923f-a7721b143284","name":"Categorize Email with AI","type":"@n8n/n8n-nodes-langchain.agent","position":[2880,912],"typeVersion":1.7},{"parameters":{"assignments":{"assignments":[{"id":"2494d69d-3e5e-42ba-88d2-b76ca1962881","name":"output","type":"string","value":"={{ $json.output }}"}]},"options":{}},"id":"7b0bfa59-2d95-48f8-8424-6d45ebc1d434","name":"Store AI Category","type":"n8n-nodes-base.set","position":[3264,912],"typeVersion":3.4},{"parameters":{"resource":"label","returnAll":true},"id":"a03cae0a-187c-4310-a47a-95784986bfbd","name":"List All Gmail Labels","type":"n8n-nodes-base.gmail","position":[1984,1280],"webhookId":"5c3cbc0b-9239-4a17-a8ec-bc8819341e47","typeVersion":2.1},{"parameters":{"mergeByFields":{"values":[{"field1":"output","field2":"name"}]},"fuzzyCompare":true,"options":{"multipleMatches":"first"}},"id":"deda2a97-789d-44a0-8343-330d1e1bb44e","name":"Check if Label Exists","type":"n8n-nodes-base.compareDatasets","position":[2208,1216],"typeVersion":2.3},{"parameters":{"operation":"addLabels","messageId":"={{ $('Extract Email Data').item.json.id }}","labelIds":"={{ $json.different.id.inputB }}"},"id":"447876ea-0e58-4f29-b58f-5a47bf842bcf","name":"Apply Label to Email","type":"n8n-nodes-base.gmail","position":[2608,1264],"webhookId":"4a35699e-da45-48e9-8e12-d22b2dcca62e","typeVersion":2.1},{"parameters":{"resource":"label","operation":"create","name":"={{ $('Store AI Category').item.json.output }}","options":{}},"id":"438f6814-00a1-4c19-b2c4-adf5c1462c02","name":"Apply New Label","type":"n8n-nodes-base.gmail","position":[3264,1200],"webhookId":"a6722fdc-15cb-4796-b82d-53cc23060640","typeVersion":2.1},{"parameters":{"operation":"addLabels","messageId":"={{ $('Extract Email Data').item.json.id }}","labelIds":"={{ $json.id }}"},"id":"e5ebb1f7-2020-4b38-bae0-e86731a5019f","name":"Create New Label","type":"n8n-nodes-base.gmail","position":[3040,1264],"webhookId":"9e401ad8-b89c-4015-a3cf-b1000ac51ae1","typeVersion":2.1},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4.1-nano","cachedResultName":"gpt-4.1-nano"},"options":{}},"id":"8e035460-ecce-4489-ac1e-05d327bf6b83","name":"OpenAI Chat Model","type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","position":[2880,1136],"typeVersion":1.2},{"parameters":{"jsCode":"const excludedLabelIds = [\n  \"Label_5\",   // Newsletter\n  \"Label_21\",  // Inquiry\n  \"Label_11\",  // Invoice\n  \"Label_9\",   // Proposal\n  \"Label_52\",  // Action Required\n  \"Label_55\",  // Follow-up Reminder\n  \"Label_53\",  // Task\n  \"Label_44\",  // Personal\n  \"Label_54\",  // Urgent\n  \"Label_12\",  // Bank\n  \"Label_3\",   // Job Update\n  \"Label_42\",  // Spam / Junk\n  \"Label_7\",   // Social / Networking\n  \"Label_8\",   // Receipt\n  \"Label_2\",   // Event Invite\n  \"Label_10\",  // Subscription Renewal\n  \"Label_4\"    // System Notification\n];\n\n\nreturn items.filter(item => {\n  const labels = item.json.labelIds || [];\n  // Exclude if ANY excluded label is present\n  return !labels.some(label => excludedLabelIds.includes(label));\n});\n"},"id":"5c65febb-34c2-409c-b106-fc5f3cd1c7f3","name":"Filter Emails Without Excluded Labels","type":"n8n-nodes-base.code","position":[3248,656],"typeVersion":2},{"parameters":{"rule":{"interval":[{"field":"minutes","minutesInterval":2}]}},"id":"16f48e4b-ff07-4887-9a5d-7c775d6474f8","name":"Schedule Gmail","type":"n8n-nodes-base.scheduleTrigger","position":[1936,656],"typeVersion":1.2},{"parameters":{"rule":{"interval":[{"field":"hours"}]}},"id":"bec22051-7434-411c-a406-57f73f4ada1f","name":"Schedule Phat nguoi","type":"n8n-nodes-base.scheduleTrigger","position":[1920,112],"typeVersion":1.2},{"parameters":{"url":"=https://api.phatnguoi.vn/web/tra-cuu/34B87922/1","sendHeaders":true,"headerParameters":{"parameters":[{"name":"User-Agent","value":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:140.0) Gecko/20100101 Firefox/140.0"},{"name":"Accept","value":"*/*"},{"name":"Accept-Language","value":"en-US,en;q=0.5"},{"name":"Accept-Encoding","value":"gzip, deflate, br, zstd"},{"name":"Origin","value":"https://phatnguoi.vn"},{"name":"Connection","value":"keep-alive"},{"name":"Referer","value":"https://phatnguoi.vn/"},{"name":"Sec-Fetch-Dest","value":"empty"},{"name":"Sec-Fetch-Mode","value":"cors"},{"name":"Sec-Fetch-Site","value":"same-site"}]},"options":{"response":{}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[2080,16],"id":"bbee461a-8fd1-47ec-9023-4900267092dc","name":"phat-nguoi-oto","retryOnFail":true,"onError":"continueRegularOutput"},{"parameters":{"url":"=https://api.phatnguoi.vn/web/tra-cuu/34B53015/2","sendHeaders":true,"headerParameters":{"parameters":[{"name":"User-Agent","value":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:140.0) Gecko/20100101 Firefox/140.0"},{"name":"Accept","value":"*/*"},{"name":"Accept-Language","value":"en-US,en;q=0.5"},{"name":"Accept-Encoding","value":"gzip, deflate, br, zstd"},{"name":"Origin","value":"https://phatnguoi.vn"},{"name":"Connection","value":"keep-alive"},{"name":"Referer","value":"https://phatnguoi.vn/"},{"name":"Sec-Fetch-Dest","value":"empty"},{"name":"Sec-Fetch-Mode","value":"cors"},{"name":"Sec-Fetch-Site","value":"same-site"}]},"options":{"response":{}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[2080,208],"id":"405fae02-8135-47f2-be57-56138f0b78d1","name":"phat-nguoi-xemay","retryOnFail":true,"onError":"continueRegularOutput"},{"parameters":{"resource":"service","operation":"call","domain":"zalo_bot","service":"send_message","serviceAttributes":{"attributes":[{"name":"message","value":"=Có {{ $json.totalViolations }} lỗi phạt nguội\nLoại Phương Tiện: {{ $json.violations[0].loaiPhuongTien }}\nThời Gian Vi Phạm: {{ $json.violations[0].thoiGianViPham }}\nĐịa Điểm Vi Phạm: {{ $json.violations[0].diaDiemViPham }}\nTrạng Thái: {{ $json.violations[0].trangThai }}\nĐơn Vị Phát Hiện: {{ $json.violations[0].donViPhatHienViPham }}\nNơi Giải Quyết: {{ $json.violations[0].noiGiaiQuyetVuViec }}"},{"name":"thread_id","value":"5841349563795164131"},{"name":"account_selection","value":"+84764343466"},{"name":"type","value":"1"}]}},"type":"n8n-nodes-base.homeAssistant","typeVersion":1,"position":[2640,80],"id":"4f31c6c4-135b-4bed-baf0-f49dbbdfe6fb","name":"sent-zalo-my-home"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"44c8d62f-87b4-40f9-b856-96a7349621f0","leftValue":"={{ $json.totalViolations }}","rightValue":0,"operator":{"type":"number","operation":"notEquals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[2416,96],"id":"3d85b793-1f6e-42ba-b5ba-de4ac58bd4d5","name":"If co vi pham"},{"parameters":{"content":"Automatically get lookup and sent zalo","height":640,"width":992},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[1824,-112],"id":"f70b4606-f68e-42ae-8401-6d1bbbc30b27","name":"Sticky Note1"},{"parameters":{"pollTimes":{"item":[{"mode":"custom","cronExpression":"0 */10 * * * *"}]},"feedUrl":"https://thanhnien.vn/rss/home.rss"},"type":"n8n-nodes-base.rssFeedReadTrigger","typeVersion":1,"position":[2880,272],"id":"4be3284e-2365-4fa3-84bb-736d53e301d5","name":"dantri"},{"parameters":{"pollTimes":{"item":[{"mode":"custom","cronExpression":"0 */10 * * * *"}]},"feedUrl":"https://thanhnien.vn/rss/home.rss"},"type":"n8n-nodes-base.rssFeedReadTrigger","typeVersion":1,"position":[2880,112],"id":"0a8ceb8c-02d4-4c03-aaf2-4d9a65384281","name":"thannien"},{"parameters":{"jsCode":"return items.map(item => {\n  return {\n    json: {\n      title: item.json.title,\n      link: item.json.link,\n      contentSnippet: item.json.contentSnippet,\n      isoDate: item.json.isoDate\n    }\n  };\n});"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[3120,112],"id":"167eac18-7839-4a69-88d4-5747699647e7","name":"lọc"},{"parameters":{"schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"vnnew","mode":"list","cachedResultName":"vnnew"},"columns":{"mappingMode":"defineBelow","value":{"title":"={{ $json.title }}","link":"={{ $json.link }}","contentsnippet":"={{ $json.contentSnippet }}","isodate":"={{ $json.isoDate }}"},"matchingColumns":[],"schema":[{"id":"title","displayName":"title","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"link","displayName":"link","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"contentsnippet","displayName":"contentsnippet","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"isodate","displayName":"isodate","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[3328,112],"id":"46b9aa3a-188d-4c86-9547-4996a6641641","name":"lưu tin tức"},{"parameters":{"operation":"executeQuery","query":"SELECT * FROM vnnew;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[3120,-32],"id":"b1475570-02bc-41e7-87cd-51e3329d1f5c","name":"Execute a SQL query","credentials":{"postgres":{"id":"jkiKUkla6ZxGtvS1","name":"Supabase"}}},{"parameters":{"pollTimes":{"item":[{"mode":"custom","cronExpression":"0 */10 * * * *"}]},"feedUrl":"https://vnexpress.net/rss/tin-moi-nhat.rss"},"type":"n8n-nodes-base.rssFeedReadTrigger","typeVersion":1,"position":[2880,-32],"id":"21490faf-7eb6-432e-b230-ea1497f793ea","name":"vnexpress"},{"parameters":{"jsCode":"// Kiểm tra dữ liệu đầu vào\nconst inputData = items[0];\nlet htmlContent = \"\";\n\n// Kiểm tra cấu trúc của dữ liệu đầu vào\nif (inputData && typeof inputData === 'object') {\n  // Nếu dữ liệu là một đối tượng, thử lấy thuộc tính 'data'\n  if (inputData.data) {\n    htmlContent = inputData.data;\n  } else if (inputData.json && inputData.json.data) {\n    // Thử lấy từ json.data nếu có\n    htmlContent = inputData.json.data;\n  } else {\n    // Thử tìm bất kỳ thuộc tính nào chứa chuỗi HTML\n    for (const key in inputData) {\n      if (typeof inputData[key] === 'string' && \n          (inputData[key].includes('<div') || inputData[key].includes('<table'))) {\n        htmlContent = inputData[key];\n        break;\n      }\n    }\n  }\n} else if (typeof inputData === 'string') {\n  // Nếu dữ liệu là một chuỗi, sử dụng trực tiếp\n  htmlContent = inputData;\n}\n\n// Xử lý HTML nếu có\nconst result = [];\nlet updateTime = \"\";\nlet dataSource = \"\";\n\nif (htmlContent && htmlContent.length > 0) {\n  try {\n    // Tìm tất cả các bảng trong HTML\n    const tableRegex = /<table[^>]*>[\\s\\S]*?<tbody>[\\s\\S]*?<\\/tbody>[\\s\\S]*?<\\/table>/g;\n    let tableMatch;\n    \n    while ((tableMatch = tableRegex.exec(htmlContent)) !== null) {\n      const tableContent = tableMatch[0];\n      const violation = {};\n      \n      // Tìm tất cả các hàng trong bảng\n      const rowRegex = /<tr>[\\s\\S]*?<td>(.*?)<\\/td>[\\s\\S]*?<td>([\\s\\S]*?)<\\/td>[\\s\\S]*?<\\/tr>/g;\n      let rowMatch;\n      \n      while ((rowMatch = rowRegex.exec(tableContent)) !== null) {\n        if (rowMatch.length >= 3) {\n          const key = rowMatch[1].replace(':', '').trim();\n          let value = rowMatch[2].trim();\n          \n          // Loại bỏ HTML tags từ giá trị\n          value = value.replace(/<button.*?<\\/button>/g, '');\n          value = value.replace(/<[^>]*>/g, ' ').replace(/\\s+/g, ' ').trim();\n          \n          // Chuyển đổi key thành camelCase\n          const camelKey = key\n            .normalize('NFD')\n            .replace(/[\\u0300-\\u036f]/g, '')\n            .replace(/đ/g, 'd')\n            .replace(/Đ/g, 'D')\n            .replace(/\\s+(.)/g, (match, group) => group.toUpperCase())\n            .replace(/\\s/g, '')\n            .replace(/^(.)/, (match, group) => group.toLowerCase());\n          \n          violation[camelKey] = value;\n        }\n      }\n      \n      // Chỉ thêm vi phạm nếu có ít nhất một trường dữ liệu\n      if (Object.keys(violation).length > 0) {\n        result.push(violation);\n      }\n    }\n    \n    // Trích xuất thời gian cập nhật\n    const updateTimeMatch = htmlContent.match(/Dữ liệu được cập nhật vào lúc: ([\\d:, -]+)/);\n    if (updateTimeMatch && updateTimeMatch[1]) {\n      updateTime = updateTimeMatch[1].trim();\n    }\n    \n    // Trích xuất nguồn dữ liệu\n    const sourceMatch = htmlContent.match(/Nguồn: <span[^>]*>(.*?)<\\/span>/);\n    if (sourceMatch && sourceMatch[1]) {\n      dataSource = sourceMatch[1].trim();\n    }\n    \n  } catch (error) {\n    return {\n      json: {\n        error: true,\n        message: `Lỗi khi xử lý dữ liệu: ${error.message}`\n      }\n    };\n  }\n}\n\n// Trả về kết quả\nreturn {\n  json: {\n    violations: result,\n    totalViolations: result.length,\n    licensePlate: result.length > 0 ? result[0].bienKiemSoat : '',\n    vehicleType: result.length > 0 ? result[0].loaiPhuongTien : '',\n    metadata: {\n      updateTime: updateTime,\n      dataSource: dataSource\n    }\n  }\n};"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2256,96],"id":"4bb89094-3849-4d78-b386-6f8075fcc003","name":"Code1"},{"parameters":{"content":"Automatically get news and save data","height":632,"width":684},"type":"n8n-nodes-base.stickyNote","position":[2832,-112],"typeVersion":1,"id":"cadb951a-02a4-4891-9601-fd10baa57b9a","name":"Sticky Note3"},{"parameters":{"workflowInputs":{"values":[{"name":"loaixe","type":"number"},{"name":"bienso","type":"any"},{"name":"khuvuc","type":"any"},{"name":"date","type":"any"},{"name":"temdk","type":"any"},{"name":"datedl","type":"any"},{"name":"chitiet","type":"any"}]}},"id":"06cf802a-b858-45fc-9fae-c80356250843","typeVersion":1.1,"name":"Start","type":"n8n-nodes-base.executeWorkflowTrigger","position":[3680,1184]},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $('Start').item.json.khuvuc }}","rightValue":"xsmb","operator":{"type":"string","operation":"equals"},"id":"afc68c52-279c-48f3-a8ec-f838b1299bc1"}],"combinator":"and"},"renameOutput":true,"outputKey":"xsmb"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"858fe1e9-7df3-40e6-b16b-3d59e8bbb9d0","leftValue":"={{ $('Start').item.json.khuvuc }}","rightValue":"xsmn","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"xsmn"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"188bde00-8f42-4570-9197-a683cd5d7782","leftValue":"={{ $('Start').item.json.khuvuc }}","rightValue":"xsmt","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"xsmt"}]},"options":{}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[4544,1152],"id":"325cff73-863c-4654-ae6b-c5f8fc14ee7f","name":"Switch","onError":"continueRegularOutput"},{"parameters":{"jsCode":"// --- CÁC HÀM HỖ TRỢ ---\n// Hàm để dọn dẹp văn bản lấy từ HTML (xóa thẻ HTML, khoảng trắng thừa)\nfunction cleanText(text) {\n    if (!text) return '';\n    return text.replace(/<[^>]*>/g, '').replace(/\\s+/g, ' ').trim();\n}\n\n// --- LOGIC CHÍNH ---\n\n// Lấy dữ liệu JSON từ item đầu tiên n8n đưa vào\nconst inputJson = items[0].json;\n\n// Lấy chuỗi HTML. Dữ liệu có thể là một object { \"data\": \"...\" }\n// hoặc một mảng chứa object đó [{ \"data\": \"...\" }]. Code này xử lý cả hai.\nlet html = '';\nif (Array.isArray(inputJson) && inputJson[0] && inputJson[0].data) {\n  // Trường hợp là mảng\n  html = inputJson[0].data;\n} else if (inputJson && inputJson.data) {\n  // Trường hợp là object\n  html = inputJson.data;\n}\n\n// Nếu không tìm thấy HTML thì báo lỗi\nif (!html) {\n  throw new Error(\"Không tìm thấy chuỗi HTML trong `items[0].json.data`. Vui lòng kiểm tra cấu trúc dữ liệu từ node phía trước.\");\n}\n\n\n// --- 1. TRÍCH XUẤT BẢNG KẾT QUẢ XỔ SỐ CHÍNH ---\n\nconst ketQuaXoSo = {};\n\n// Tìm bảng kết quả chính bằng regex\nconst prizeTableRegex = /<table class=\"table table-bordered table-striped table-xsmn livetn3\">([\\s\\S]*?)<\\/table>/;\nconst prizeTableMatch = html.match(prizeTableRegex);\n\nif (prizeTableMatch) {\n    const tableHtml = prizeTableMatch[1];\n\n    // Lấy tên các tỉnh từ thead\n    const theadRegex = /<thead>([\\s\\S]*?)<\\/thead>/;\n    const theadMatch = tableHtml.match(theadRegex);\n    const provinces = [];\n    if (theadMatch) {\n        const provinceHeaderRegex = /<th[^>]*>([\\s\\S]*?)<\\/th>/g;\n        let provinceMatch;\n        // Bỏ qua thẻ <th> đầu tiên (chữ \"Giải\")\n        provinceHeaderRegex.exec(theadMatch[1]); \n        while ((provinceMatch = provinceHeaderRegex.exec(theadMatch[1])) !== null) {\n            const provinceName = cleanText(provinceMatch[1]);\n            provinces.push(provinceName);\n            ketQuaXoSo[provinceName] = {};\n        }\n    }\n\n    // Lấy các giải thưởng từ tbody\n    const tbodyRegex = /<tbody>([\\s\\S]*?)<\\/tbody>/;\n    const tbodyMatch = tableHtml.match(tbodyRegex);\n    if (tbodyMatch) {\n        const rowRegex = /<tr>([\\s\\S]*?)<\\/tr>/g;\n        let rowMatch;\n        while ((rowMatch = rowRegex.exec(tbodyMatch[1])) !== null) {\n            const cellRegex = /<td[^>]*>([\\s\\S]*?)<\\/td>/g;\n            let cellMatch;\n            \n            // Ô đầu tiên là tên giải\n            cellMatch = cellRegex.exec(rowMatch[1]);\n            if (!cellMatch) continue;\n            const prizeName = cleanText(cellMatch[1]);\n\n            // Các ô tiếp theo là kết quả\n            let provinceIndex = 0;\n            while ((cellMatch = cellRegex.exec(rowMatch[1])) !== null) {\n                if (provinceIndex < provinces.length) {\n                    const provinceName = provinces[provinceIndex];\n                    const numbersRaw = cellMatch[1];\n                    const numberSpanRegex = /<span[^>]*>([\\s\\S]*?)<\\/span>/g;\n                    const numbers = [];\n                    let numberMatch;\n                    while((numberMatch = numberSpanRegex.exec(numbersRaw)) !== null) {\n                        numbers.push(...cleanText(numberMatch[1]).split(' '));\n                    }\n                    \n                    ketQuaXoSo[provinceName][prizeName] = numbers.filter(n => n); // Lọc bỏ chuỗi rỗng\n                    provinceIndex++;\n                }\n            }\n        }\n    }\n}\n\n// --- 2. TRÍCH XUẤT CÁC BẢNG LOTO ---\nconst loto = {};\nconst lotoContainerRegex = /<div class=\"block-main-content view-loto\">([\\s\\S]*?)<\\/div>/;\nconst lotoContainerMatch = html.match(lotoContainerRegex);\n\nif (lotoContainerMatch) {\n    // Tách mỗi bảng loto thành một phần riêng\n    const lotoTablesHtml = lotoContainerMatch[1].split('<p class=\"padding10\">').slice(1);\n    \n    for (const tableHtml of lotoTablesHtml) {\n        // Lấy tên tỉnh từ tiêu đề\n        const titleMatch = tableHtml.match(/Loto (.*?) Thứ/);\n        if (titleMatch && titleMatch[1]) {\n            const provinceName = titleMatch[1].trim();\n            loto[provinceName] = {};\n            \n            // Lấy các hàng của bảng loto\n            const lotoRowRegex = /<td class=\"text-center\">(\\d+|-)<\\/td>\\s*<td.*?>([\\s\\S]*?)<\\/td>/g;\n            let rowMatch;\n            while ((rowMatch = lotoRowRegex.exec(tableHtml)) !== null) {\n                const head = rowMatch[1]; // Đầu số (0, 1, 2... hoặc -)\n                if (head === '-') continue;\n\n                const numbersRaw = cleanText(rowMatch[2]); // Dãy số loto\n                \n                const numbers = numbersRaw === '-' ? [] : numbersRaw.replace(/,\\s*$/,'').split(/, | |,/g).filter(n => n);\n                loto[provinceName][head] = numbers;\n            }\n        }\n    }\n}\n\n// --- KẾT QUẢ CUỐI CÙNG ---\nreturn [{\n    json: {\n        ketQuaXoSo,\n        loto\n    }\n}];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[4880,1168],"id":"6607e8cd-5be0-40cb-9875-052c7493b2b1","name":"Code2","onError":"continueRegularOutput"},{"parameters":{"jsCode":"// --- CÁC HÀM HỖ TRỢ ---\n// Hàm để dọn dẹp văn bản lấy từ HTML (xóa thẻ HTML, khoảng trắng thừa)\nfunction cleanText(text) {\n    if (!text) return '';\n    return text.replace(/<[^>]*>/g, '').replace(/\\s+/g, ' ').trim();\n}\n\n// --- LOGIC CHÍNH ---\n\n// Lấy dữ liệu JSON từ item đầu tiên n8n đưa vào\nconst inputJson = items[0].json;\n\n// Lấy chuỗi HTML. Dữ liệu có thể là một object { \"data\": \"...\" }\n// hoặc một mảng chứa object đó [{ \"data\": \"...\" }]. Code này xử lý cả hai.\nlet html = '';\nif (Array.isArray(inputJson) && inputJson[0] && inputJson[0].data) {\n  // Trường hợp là mảng\n  html = inputJson[0].data;\n} else if (inputJson && inputJson.data) {\n  // Trường hợp là object\n  html = inputJson.data;\n}\n\n// Nếu không tìm thấy HTML thì báo lỗi\nif (!html) {\n  throw new Error(\"Không tìm thấy chuỗi HTML trong `items[0].json.data`. Vui lòng kiểm tra cấu trúc dữ liệu từ node phía trước.\");\n}\n\n\n// --- 1. TRÍCH XUẤT BẢNG KẾT QUẢ XỔ SỐ CHÍNH ---\n\nconst ketQuaXoSo = {};\n\n// Tìm bảng kết quả chính bằng regex\nconst prizeTableRegex = /<table class=\"table table-bordered table-striped table-xsmn livetn3\">([\\s\\S]*?)<\\/table>/;\nconst prizeTableMatch = html.match(prizeTableRegex);\n\nif (prizeTableMatch) {\n    const tableHtml = prizeTableMatch[1];\n\n    // Lấy tên các tỉnh từ thead\n    const theadRegex = /<thead>([\\s\\S]*?)<\\/thead>/;\n    const theadMatch = tableHtml.match(theadRegex);\n    const provinces = [];\n    if (theadMatch) {\n        const provinceHeaderRegex = /<th[^>]*>([\\s\\S]*?)<\\/th>/g;\n        let provinceMatch;\n        // Bỏ qua thẻ <th> đầu tiên (chữ \"Giải\")\n        provinceHeaderRegex.exec(theadMatch[1]); \n        while ((provinceMatch = provinceHeaderRegex.exec(theadMatch[1])) !== null) {\n            const provinceName = cleanText(provinceMatch[1]);\n            provinces.push(provinceName);\n            ketQuaXoSo[provinceName] = {};\n        }\n    }\n\n    // Lấy các giải thưởng từ tbody\n    const tbodyRegex = /<tbody>([\\s\\S]*?)<\\/tbody>/;\n    const tbodyMatch = tableHtml.match(tbodyRegex);\n    if (tbodyMatch) {\n        const rowRegex = /<tr>([\\s\\S]*?)<\\/tr>/g;\n        let rowMatch;\n        while ((rowMatch = rowRegex.exec(tbodyMatch[1])) !== null) {\n            const cellRegex = /<td[^>]*>([\\s\\S]*?)<\\/td>/g;\n            let cellMatch;\n            \n            // Ô đầu tiên là tên giải\n            cellMatch = cellRegex.exec(rowMatch[1]);\n            if (!cellMatch) continue;\n            const prizeName = cleanText(cellMatch[1]);\n\n            // Các ô tiếp theo là kết quả\n            let provinceIndex = 0;\n            while ((cellMatch = cellRegex.exec(rowMatch[1])) !== null) {\n                if (provinceIndex < provinces.length) {\n                    const provinceName = provinces[provinceIndex];\n                    const numbersRaw = cellMatch[1];\n                    const numberSpanRegex = /<span[^>]*>([\\s\\S]*?)<\\/span>/g;\n                    const numbers = [];\n                    let numberMatch;\n                    while((numberMatch = numberSpanRegex.exec(numbersRaw)) !== null) {\n                        numbers.push(...cleanText(numberMatch[1]).split(' '));\n                    }\n                    \n                    ketQuaXoSo[provinceName][prizeName] = numbers.filter(n => n); // Lọc bỏ chuỗi rỗng\n                    provinceIndex++;\n                }\n            }\n        }\n    }\n}\n\n// --- 2. TRÍCH XUẤT CÁC BẢNG LOTO ---\nconst loto = {};\nconst lotoContainerRegex = /<div class=\"block-main-content view-loto\">([\\s\\S]*?)<\\/div>/;\nconst lotoContainerMatch = html.match(lotoContainerRegex);\n\nif (lotoContainerMatch) {\n    // Tách mỗi bảng loto thành một phần riêng\n    const lotoTablesHtml = lotoContainerMatch[1].split('<p class=\"padding10\">').slice(1);\n    \n    for (const tableHtml of lotoTablesHtml) {\n        // Lấy tên tỉnh từ tiêu đề\n        const titleMatch = tableHtml.match(/Loto (.*?) Thứ/);\n        if (titleMatch && titleMatch[1]) {\n            const provinceName = titleMatch[1].trim();\n            loto[provinceName] = {};\n            \n            // Lấy các hàng của bảng loto\n            const lotoRowRegex = /<td class=\"text-center\">(\\d+|-)<\\/td>\\s*<td.*?>([\\s\\S]*?)<\\/td>/g;\n            let rowMatch;\n            while ((rowMatch = lotoRowRegex.exec(tableHtml)) !== null) {\n                const head = rowMatch[1]; // Đầu số (0, 1, 2... hoặc -)\n                if (head === '-') continue;\n\n                const numbersRaw = cleanText(rowMatch[2]); // Dãy số loto\n                \n                const numbers = numbersRaw === '-' ? [] : numbersRaw.replace(/,\\s*$/,'').split(/, | |,/g).filter(n => n);\n                loto[provinceName][head] = numbers;\n            }\n        }\n    }\n}\n\n// --- KẾT QUẢ CUỐI CÙNG ---\nreturn [{\n    json: {\n        ketQuaXoSo,\n        loto\n    }\n}];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[4880,1328],"id":"cdf56963-8740-4fa1-b74b-07c60c0b2727","name":"Code3","onError":"continueRegularOutput"},{"parameters":{"url":"=https://api.phatnguoi.vn/web/tra-cuu/{{ $json.bienso }}/{{ $json.loaixe }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"User-Agent","value":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:140.0) Gecko/20100101 Firefox/140.0"},{"name":"Accept","value":"*/*"},{"name":"Accept-Language","value":"en-US,en;q=0.5"},{"name":"Accept-Encoding","value":"gzip, deflate, br, zstd"},{"name":"Origin","value":"https://phatnguoi.vn"},{"name":"Connection","value":"keep-alive"},{"name":"Referer","value":"https://phatnguoi.vn/"},{"name":"Sec-Fetch-Dest","value":"empty"},{"name":"Sec-Fetch-Mode","value":"cors"},{"name":"Sec-Fetch-Site","value":"same-site"}]},"options":{"response":{}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[4352,896],"id":"ebb6229e-fbc5-45f5-85fc-4ab1819bad09","name":"phat-nguoi","retryOnFail":true,"onError":"continueRegularOutput"},{"parameters":{"url":"=https://xosodaiphat.com/{{ $json.khuvuc }}-{{ $json.date }}.html ","sendHeaders":true,"headerParameters":{"parameters":[{"name":"User-Agent","value":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0"},{"name":"Accept","value":"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"},{"name":"Accept-Language","value":"en-US,en;q=0.5"},{"name":"Accept-Encoding","value":"gzip, deflate, br, zstd"},{"name":"Alt-Used","value":"xosodaiphat.com"},{"name":"Connection","value":"keep-alive"},{"name":"Upgrade-Insecure-Requests","value":"1"},{"name":"Sec-Fetch-Dest","value":"document"},{"name":"Sec-Fetch-Mode","value":"navigate"},{"name":"Sec-Fetch-Site","value":"same-origin"},{"name":"Sec-Fetch-User","value":"?1"},{"name":"Priority","value":"u=0, i"},{"name":"TE","value":"trailers"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[4352,1168],"id":"f45ba67c-138c-427e-a881-2c417c3c630a","name":"xo-so","retryOnFail":true,"onError":"continueRegularOutput"},{"parameters":{"jsCode":"// Lấy dữ liệu HTML từ phản hồi\nconst response = items[0].json;\nlet html = \"\";\n\n// Kiểm tra cấu trúc dữ liệu đầu vào\nif (response && response.data) {\n  html = response.data;\n} else if (response.body) {\n  html = response.body;\n} else if (typeof response === 'string') {\n  html = response;\n}\n\n// Kiểm tra xem có dữ liệu HTML không\nif (!html) {\n  return {\n    json: {\n      success: false,\n      message: \"Không tìm thấy dữ liệu HTML trong phản hồi\"\n    }\n  };\n}\n\n// Kiểm tra xem có phải là trang lỗi không\nif (html.includes(\"Sai mã xác nhận!\")) {\n  return {\n    json: {\n      success: false,\n      message: \"Sai mã xác nhận CAPTCHA\",\n      error: \"CAPTCHA_ERROR\"\n    }\n  };\n}\n\n// Hàm trích xuất giá trị từ span theo ID\nfunction extractSpanValue(html, spanId) {\n  const regex = new RegExp(`<span id=\"${spanId}\"[^>]*>([^<]+)<\\\\/span>`, 'i');\n  const match = html.match(regex);\n  return match ? match[1].trim() : \"\";\n}\n\n// Trích xuất thông tin từ HTML\nconst thongTinXe = {\n  // Thông tin chung\n  bienDangKy: extractSpanValue(html, \"LblBinDangKy\").replace(\"THÔNG TIN PHƯƠNG TIỆN BIỂN ĐĂNG KÝ:\", \"\").trim(),\n  nhanHieu: extractSpanValue(html, \"txtNhanHieu\"),\n  loaiPhuongTien: extractSpanValue(html, \"txtLoaiPT\"),\n  soKhung: extractSpanValue(html, \"txtSoKhung\"),\n  soMay: extractSpanValue(html, \"txtSoMay\"),\n  \n  // Thông số kỹ thuật\n  kichThuocBao: extractSpanValue(html, \"txtKichThuocBao\"),\n  kichThuocThungHang: extractSpanValue(html, \"txtKichThuocThung\"),\n  khoiLuongBanThan: extractSpanValue(html, \"txtTuTrongTK\"),\n  khoiLuongHangHoaChoPhep: extractSpanValue(html, \"txtTaiTrongGT\"),\n  soNguoiChoPhepCho: extractSpanValue(html, \"txtSoCho\"),\n  khoiLuongToanBo: extractSpanValue(html, \"txtTrLgToanBoGT\"),\n  soTrucChieuDaiCoSo: extractSpanValue(html, \"txtCdCsCtBx\"),\n  khoiLuongKeoTheo: extractSpanValue(html, \"txtTrLgMoocCP\"),\n  \n  // Kiểm định gần nhất\n  kiemDinh: {\n    ngayKiemDinh: extractSpanValue(html, \"txtNgayKD\"),\n    donViKiemDinh: extractSpanValue(html, \"txtTramKD\"),\n    soTemGCN: extractSpanValue(html, \"txtSoTemGCN\"),\n    hanHieuLuc: extractSpanValue(html, \"txtHanKDToi\")\n  },\n  \n  // Phí sử dụng đường bộ\n  phiDuongBo: {\n    ngayNopPhi: extractSpanValue(html, \"txtNgayNop\"),\n    donViThuPhi: extractSpanValue(html, \"txtDonVi\"),\n    soBienLai: extractSpanValue(html, \"txtBL_ID\"),\n    phiNopDenNgay: extractSpanValue(html, \"txtDenNgay\")\n  }\n};\n\n// Kiểm tra xem có dữ liệu xe không\nconst hasVehicleData = thongTinXe.bienDangKy && thongTinXe.nhanHieu;\n\n// Tính toán tình trạng kiểm định và phí đường bộ\nconst today = new Date();\nconst formatDate = (dateStr) => {\n  const [day, month, year] = dateStr.split('/');\n  return new Date(`${year}-${month}-${day}`);\n};\n\n// Tính ngày còn lại của kiểm định và phí đường bộ\nlet kiemDinhStatus = \"Không có thông tin\";\nlet phiDuongBoStatus = \"Không có thông tin\";\n\nif (thongTinXe.kiemDinh.hanHieuLuc) {\n  const expDate = formatDate(thongTinXe.kiemDinh.hanHieuLuc);\n  const daysLeft = Math.ceil((expDate - today) / (1000 * 60 * 60 * 24));\n  \n  if (daysLeft > 30) {\n    kiemDinhStatus = `Còn hạn (${daysLeft} ngày)`;\n  } else if (daysLeft > 0) {\n    kiemDinhStatus = `Sắp hết hạn (${daysLeft} ngày)`;\n  } else {\n    kiemDinhStatus = `Đã hết hạn (${Math.abs(daysLeft)} ngày)`;\n  }\n}\n\nif (thongTinXe.phiDuongBo.phiNopDenNgay) {\n  const expDate = formatDate(thongTinXe.phiDuongBo.phiNopDenNgay);\n  const daysLeft = Math.ceil((expDate - today) / (1000 * 60 * 60 * 24));\n  \n  if (daysLeft > 30) {\n    phiDuongBoStatus = `Còn hạn (${daysLeft} ngày)`;\n  } else if (daysLeft > 0) {\n    phiDuongBoStatus = `Sắp hết hạn (${daysLeft} ngày)`;\n  } else {\n    phiDuongBoStatus = `Đã hết hạn (${Math.abs(daysLeft)} ngày)`;\n  }\n}\n\n// Trả về kết quả\nreturn {\n  json: {\n    success: hasVehicleData,\n    message: hasVehicleData ? \"Tìm thấy thông tin phương tiện\" : \"Không tìm thấy thông tin phương tiện\",\n    data: thongTinXe,\n    status: {\n      kiemDinh: kiemDinhStatus,\n      phiDuongBo: phiDuongBoStatus\n    },\n    raw: hasVehicleData ? undefined : html // Chỉ trả về HTML gốc nếu không tìm thấy thông tin xe\n  }\n};"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[4544,1712],"id":"2076246a-deec-47e4-bdfa-456f028d55f0","name":"Code5","onError":"continueRegularOutput"},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $json.loaixe }}","rightValue":0,"operator":{"type":"number","operation":"notEquals"},"id":"b796e213-5e79-4c03-9399-278e970a9971"}],"combinator":"and"},"renameOutput":true,"outputKey":"phatnguoi"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"a8441e0b-ad4c-4581-9279-49eb5e6ed2f4","leftValue":"={{ $json.khuvuc }}","rightValue":"0","operator":{"type":"string","operation":"notEquals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"xoso"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"2fa3822e-2570-4db0-9533-32e1175b8648","leftValue":"={{ $json.temdk }}","rightValue":"0","operator":{"type":"string","operation":"notEquals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"dangkiem"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"463ecdcb-9047-410c-a334-4c51d6d4b48b","leftValue":"={{ $json.dateal }}","rightValue":"0","operator":{"type":"string","operation":"notEquals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"amlich"}]},"options":{}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[3888,1152],"id":"38fd4908-7317-42ae-b585-465cc7dbb716","name":"Switch1"},{"parameters":{"url":"={{ $json.captchaUrl }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"User-Agent","value":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0"},{"name":"Accept","value":"image/avif,image/webp,image/png,image/svg+xml,image/*;q=0.8,*/*;q=0.5"},{"name":"Accept-Language","value":"en-US,en;q=0.5"},{"name":"Accept-Encoding","value":"gzip, deflate"},{"name":"Connection","value":"keep-alive"},{"name":"Referer","value":"http://app.vr.org.vn/ptpublic/thongtinptpublic.aspx"},{"name":"Priority","value":"u=4, i"}]},"options":{"response":{"response":{"fullResponse":true,"responseFormat":"file"}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[4720,1488],"id":"85884d19-5123-43a7-90a5-b9baaf0817c0","name":"Get File Captcha","retryOnFail":false,"maxTries":5,"waitBetweenTries":2000,"onError":"continueRegularOutput"},{"parameters":{"resource":"image","operation":"analyze","modelId":{"__rl":true,"value":"gpt-4o-mini","mode":"list","cachedResultName":"GPT-4O-MINI"},"text":"This is a captcha code, decode it and return only the result, note that the code distinguishes between uppercase, lowercase, and numbers.","inputType":"base64","options":{}},"type":"@n8n/n8n-nodes-langchain.openAi","typeVersion":1.8,"position":[4912,1488],"id":"bd433d73-05d7-4a57-aeb3-92b0d08669bc","name":"Text Captcha","retryOnFail":true,"onError":"continueRegularOutput"},{"parameters":{"method":"POST","url":"=http://app.vr.org.vn/ptpublic/thongtinptpublic.aspx","sendHeaders":true,"headerParameters":{"parameters":[{"name":"User-Agent","value":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0"},{"name":"Accept","value":"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"},{"name":"Accept-Language","value":"en-US,en;q=0.5"},{"name":"Accept-Encoding","value":"gzip, deflate"},{"name":"Origin","value":"http://app.vr.org.vn"},{"name":"Connection","value":"keep-alive"},{"name":"Referer","value":"http://app.vr.org.vn/ptpublic/thongtinptpublic.aspx"},{"name":"Upgrade-Insecure-Requests","value":"1"},{"name":"Priority","value":"u=0, i"},{"name":"Cookie","value":"={{ $('Find URL Captcha').item.json.headers['set-cookie'][0] }}"}]},"sendBody":true,"contentType":"form-urlencoded","bodyParameters":{"parameters":[{"name":"__VIEWSTATE","value":"={{ $('Find Get Headers').item.json.viewstate }}"},{"name":"__VIEWSTATEGENERATOR","value":"={{ $('Find Get Headers').item.json.viewstategenerator }}"},{"name":"__EVENTVALIDATION","value":"={{ $('Find Get Headers').item.json.eventvalidation }}"},{"name":"txtBienDK","value":"={{ $('Start').item.json.bienso }}"},{"name":"TxtSoTem","value":"={{ $('Start').item.json.temdk }}"},{"name":"txtCaptcha","value":"={{ $json.content }}"},{"name":"CmdTraCuu","value":"Tra+cứu"}]},"options":{"response":{"response":{"fullResponse":true}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[4352,1712],"id":"c3e8562a-d6d9-45b7-b199-00d5630068ab","name":"POST Payload","retryOnFail":true,"maxTries":5,"waitBetweenTries":2000,"onError":"continueRegularOutput"},{"parameters":{"jsCode":"// Chào bạn, đây là phiên bản hoàn thiện cuối cùng của mã.\n// Phiên bản này bao gồm một hàm cleanup nâng cao để xử lý\n// triệt để các ký tự HTML đặc biệt, giúp kết quả hiển thị tiếng Việt hoàn hảo.\n\nconst item = items[0];\nconst rawDataString = item.json.data;\n\nlet html = '';\ntry {\n  // Bước 1: Chuyển chuỗi JSON thành mã HTML hoàn chỉnh.\n  const htmlParts = JSON.parse(rawDataString);\n  html = Array.isArray(htmlParts) ? htmlParts.join('') : rawDataString;\n} catch (e) {\n  html = rawDataString;\n}\n\nconst result = {};\n\n/**\n * Hàm tiện ích đa năng để làm sạch văn bản, bao gồm cả việc\n * giải mã các ký tự HTML đặc biệt (HTML entities).\n * @param {string} str - Chuỗi HTML đầu vào.\n * @returns {string} - Văn bản sạch.\n */\nfunction cleanup(str) {\n  if (!str) return '';\n  try {\n    // Bản đồ các ký tự HTML phổ biến\n    const entities = {\n        '&amp;': '&', '&lt;': '<', '&gt;': '>', '&quot;': '\"', '&#39;': \"'\",\n        '&nbsp;': ' ', '&agrave;': 'à', '&Agrave;': 'À', '&aacute;': 'á', '&Aacute;': 'Á',\n        '&acirc;': 'â', '&Acirc;': 'Â', '&atilde;': 'ã', '&Atilde;': 'Ã', '&egrave;': 'è',\n        '&Egrave;': 'È', '&eacute;': 'é', '&Eacute;': 'É', '&ecirc;': 'ê', '&Ecirc;': 'Ê',\n        '&igrave;': 'ì', '&Igrave;': 'Ì', '&iacute;': 'í', '&Iacute;': 'Í', '&ograve;': 'ò',\n        '&Ograve;': 'Ò', '&oacute;': 'ó', '&Oacute;': 'Ó', '&ocirc;': 'ô', '&Ocirc;': 'Ô',\n        '&otilde;': 'õ', '&Otilde;': 'Õ', '&ugrave;': 'ù', '&Ugrave;': 'Ù', '&uacute;': 'ú',\n        '&Uacute;': 'Ú', '&yacute;': 'ý', '&Yacute;': 'Ý', '&đ;': 'đ', '&Đ;': 'Đ'\n    };\n    \n    // Thay thế các ký tự HTML\n    let decodedStr = str.replace(/&[a-zA-Z#0-9]+;/g, entity => entities[entity] || entity);\n\n    // Dọn dẹp các thẻ và khoảng trắng\n    return decodedStr\n      .replace(/<br\\s*\\/?>/gi, '\\n')\n      .replace(/<p[^>]*>/gi, '\\n')\n      .replace(/<li[^>]*>/gi, '\\n- ')\n      .replace(/<[^>]*>?/g, ' ')\n      .replace(/“|”/g, '\"')\n      .replace(/[ \\t]+/g, ' ')\n      .replace(/\\n\\s*\\n/g, '\\n')\n      .replace(/^[\\s\\n]+|[\\s\\n]+$/g, '')\n      .trim();\n  } catch (e) {\n    return str;\n  }\n}\n\n\n/**\n * Hàm trích xuất nội dung dựa vào một nhãn (label) cụ thể.\n * @param {string} labelText - Văn bản của nhãn cần tìm (ví dụ: \"Giờ Hoàng Đạo\").\n * @returns {string} - Nội dung tương ứng đã được làm sạch.\n */\nfunction extractByLabel(labelText) {\n    const regex = new RegExp(`<label>${labelText}\\\\s*<\\\\/label>[\\\\s\\\\S]*?<\\\\/td>\\\\s*<td>([\\\\s\\\\S]*?)<\\\\/td>`, 'i');\n    const match = html.match(regex);\n    return cleanup(match?.[1] || '');\n}\n\n// --- BẮT ĐẦU TRÍCH XUẤT ---\n\n// 1. Lấy thông tin cơ bản\nresult['LichAmNgay'] = cleanup(html.match(/<h1 class=\"day\">([\\s\\S]*?)<\\/h1>/i)?.[1] || '');\nresult['NgayDuongLich'] = cleanup(html.match(/Ngày <b>Dương Lịch<\\/b>:<span[^>]+>([^<]+)/i)?.[1] || '');\nresult['NgayAmLich'] = cleanup(html.match(/Ngày <b>Âm Lịch<\\/b>:\\s*<span[^>]+>([^<]+)/i)?.[1] || '');\nresult['NgayTrongTuan'] = cleanup(html.match(/Ngày trong tuần: <b>([^<]+)/i)?.[1] || '');\n\nconst canChiMatch = html.match(/<p>Ngày <b>([^<]+)<\\/b> tháng <b>([^<]+)<\\/b> năm <b>([^<]+)<\\/b><\\/p>/i);\nif (canChiMatch) {\n    result['NgayCanChi'] = `Ngày ${cleanup(canChiMatch[1])} tháng ${cleanup(canChiMatch[2])} năm ${cleanup(canChiMatch[3])}`;\n}\nresult['NgayBachHoKiep'] = cleanup(html.match(/Ngày <b>Bạch Hổ Kiếp<\\/b>:([^<]+)/i)?.[1] || '');\n\n// 2. Trích xuất từng mục còn lại bằng hàm extractByLabel\nresult['GiờHoàngĐạo'] = extractByLabel('Giờ Hoàng Đạo');\nresult['GiờHắcĐạo'] = extractByLabel('Giờ Hắc Đạo');\nresult['CácNgàyKỵ'] = extractByLabel('Các Ngày Kỵ');\nresult['NgũHành'] = extractByLabel('Ngũ Hành');\nresult['BànhTổBáchKỵNhật'] = extractByLabel('Bành Tổ Bách Kỵ Nhật');\nresult['KhổngMinhLụcDiệu'] = extractByLabel('Khổng Minh Lục Diệu');\nresult['NhịThậpBátTú'] = extractByLabel('Nhị Thập Bát Tú');\nresult['ThậpNhịKiếnTrừ'] = extractByLabel('Thập Nhị Kiến Trừ');\nresult['NgọcHạpThôngThư'] = extractByLabel('Ngọc Hạp Thông Thư');\nresult['Hướngxuấthành'] = extractByLabel('Hướng xuất hành');\nresult['GiờxuấthànhTheoLýThuầnPhong'] = extractByLabel('Giờ xuất hành Theo Lý Thuần Phong');\n\n// --- KẾT THÚC TRÍCH XUẤT ---\n\nreturn [{ json: result }];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[4832,1968],"id":"5eb52ceb-c507-4043-b408-1eaafc57672f","name":"Code4"},{"parameters":{"url":"http://app.vr.org.vn/ptpublic/thongtinptpublic.aspx","sendHeaders":true,"headerParameters":{"parameters":[{"name":"User-Agent","value":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0"},{"name":"Accept","value":"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"},{"name":"Accept-Language","value":"en-US,en;q=0.5"},{"name":"Accept-Encoding","value":"gzip, deflate"},{"name":"Connection","value":"keep-alive"},{"name":"Upgrade-Insecure-Requests","value":"1"},{"name":"Priority","value":"u=0, i"}]},"options":{"response":{"response":{"fullResponse":true}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[4352,1488],"id":"5461991d-4429-4abe-a2d8-1702fda447c2","name":"Find URL Captcha","retryOnFail":true,"waitBetweenTries":2000,"maxTries":5,"onError":"continueRegularOutput"},{"parameters":{"jsCode":"// Lấy toàn bộ phản hồi từ node trước (bao gồm data và headers)\nconst response = items[0].json;\nconst html = response.data;\nconst headers = response.headers;\n\n// Kiểm tra dữ liệu đầu vào\nif (!html) {\n  throw new Error(\"Không nhận được HTML từ node HTTP Request.\");\n}\nif (!headers || !headers['set-cookie']) {\n  throw new Error(\"Không tìm thấy header 'set-cookie' trong phản hồi. Hãy đảm bảo node HTTP Request đã bật 'Include Response Headers'.\");\n}\n\n// --- 1. TRÍCH XUẤT URL CAPTCHA ---\nconst captchaRegex = /<img id=\"captchaImage\"[^>]*?src=\"([^\"]+)\"/i;\nconst match = html.match(captchaRegex);\nif (!match || !match[1]) {\n  throw new Error(\"Không thể tìm thấy URL của ảnh captcha trong HTML.\");\n}\nconst relativeUrl = match[1];\nconst fullCaptchaUrl = 'http://app.vr.org.vn/ptpublic/' + relativeUrl;\n\n// --- 2. TRÍCH XUẤT CHÍNH XÁC GIÁ TRỊ COOKIE ---\n// Header 'set-cookie' là một mảng, ta lấy phần tử đầu tiên\nconst cookieHeader = headers['set-cookie'][0];\n// Chuỗi cookie có dạng \"ASP.NET_SessionId=value; path=/; ...\",\nconst fullCookieString = cookieHeader.split(';')[0]; \n\nif (!fullCookieString || !fullCookieString.startsWith('ASP.NET_SessionId')) {\n    throw new Error(\"Không thể trích xuất ASP.NET_SessionId từ cookie: \" + cookieHeader);\n}\n\n// Tách chuỗi bằng dấu '=' và lấy phần tử thứ hai (chính là giá trị session)\nconst cookieParts = fullCookieString.split('=');\nconst sessionId = cookieParts.length > 1 ? cookieParts[1] : null;\n\nif (!sessionId) {\n    throw new Error(\"Không thể trích xuất giá trị từ chuỗi cookie: \" + fullCookieString);\n}\n\n// --- 3. TRÍCH XUẤT __VIEWSTATE ---\nconst viewstateRegex = /<input type=\"hidden\" name=\"__VIEWSTATE\" id=\"__VIEWSTATE\" value=\"([^\"]+)\"/i;\nconst viewstateMatch = html.match(viewstateRegex);\nif (!viewstateMatch || !viewstateMatch[1]) {\n  throw new Error(\"Không thể tìm thấy __VIEWSTATE trong HTML.\");\n}\nconst viewstate = viewstateMatch[1];\n\n// --- 4. TRÍCH XUẤT __VIEWSTATEGENERATOR ---\nconst viewstategenRegex = /<input type=\"hidden\" name=\"__VIEWSTATEGENERATOR\" id=\"__VIEWSTATEGENERATOR\" value=\"([^\"]+)\"/i;\nconst viewstategenMatch = html.match(viewstategenRegex);\nif (!viewstategenMatch || !viewstategenMatch[1]) {\n  throw new Error(\"Không thể tìm thấy __VIEWSTATEGENERATOR trong HTML.\");\n}\nconst viewstategenerator = viewstategenMatch[1];\n\n// --- 5. TRÍCH XUẤT __EVENTVALIDATION ---\nconst eventvalidationRegex = /<input type=\"hidden\" name=\"__EVENTVALIDATION\" id=\"__EVENTVALIDATION\" value=\"([^\"]+)\"/i;\nconst eventvalidationMatch = html.match(eventvalidationRegex);\nif (!eventvalidationMatch || !eventvalidationMatch[1]) {\n  throw new Error(\"Không thể tìm thấy __EVENTVALIDATION trong HTML.\");\n}\nconst eventvalidation = eventvalidationMatch[1];\n\n// --- KẾT QUẢ ---\n// Trả về URL captcha, session ID và các tham số form\nreturn [{\n  json: {\n    captchaUrl: fullCaptchaUrl,\n    sessionId: sessionId,\n    viewstate: viewstate,\n    viewstategenerator: viewstategenerator,\n    eventvalidation: eventvalidation,\n    cookieHeader: `ASP.NET_SessionId=${sessionId}`  // Cookie header đầy đủ để sử dụng trong request tiếp theo\n  }\n}];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[4544,1488],"id":"e685facc-4fc9-4e72-802c-e952765aecde","name":"Find Get Headers","onError":"continueRegularOutput"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"889790c7-7628-41af-808f-171c1df58ce3","leftValue":"={{ $json.error }}","rightValue":"CAPTCHA_ERROR","operator":{"type":"string","operation":"notContains"}},{"id":"c483dd3b-cb0d-4281-9c81-bab490fb4295","leftValue":"={{ $json.error.status }}","rightValue":500,"operator":{"type":"number","operation":"notEquals"}},{"id":"3b429215-82b0-439f-a946-412149aa8625","leftValue":"={{ $json.message }}","rightValue":"Không tìm thấy dữ liệu HTML trong phản hồi","operator":{"type":"string","operation":"notEquals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[4720,1712],"id":"aa7b5730-0dc3-4759-8427-abf19d105aa2","name":"If Erro","onError":"continueRegularOutput"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"d4301437-5b14-4ceb-928b-4a1f948535c6","leftValue":"={{ $runIndex }}","rightValue":3,"operator":{"type":"number","operation":"lte"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[4912,1728],"id":"d5dc320a-fa80-4f64-a169-9524939f36e9","name":"Retry Max 5","onError":"continueRegularOutput"},{"parameters":{"url":"=https://www.xemlicham.com/am-lich/nam/{{ $('Start').item.json.datedl }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"User-Agent","value":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0"},{"name":"Accept","value":"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"},{"name":"Accept-Language","value":"en-US,en;q=0.5"},{"name":"Accept-Encoding","value":"gzip, deflate, br, zstd"},{"name":"Connection","value":"keep-alive"},{"name":"Upgrade-Insecure-Requests","value":"1"},{"name":"Sec-Fetch-Dest","value":"document"},{"name":"Sec-Fetch-Mode","value":"navigate"},{"name":"Sec-Fetch-Site","value":"same-origin"},{"name":"Sec-Fetch-User","value":"?1"},{"name":"Priority","value":"u=0, i"}]},"options":{"redirect":{"redirect":{"followRedirects":false}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[4320,2032],"id":"c40b1d83-bb96-4e46-b6a3-3ae9ba509d58","name":"Am Lich","onError":"continueRegularOutput"},{"parameters":{"jsCode":"// Đây là phiên bản rút gọn để lấy thông tin ngày cơ bản.\nconst item = items[0];\nconst rawDataString = item.json.data;\n\nlet html = '';\ntry {\n  // Chuyển chuỗi JSON thành mã HTML hoàn chỉnh.\n  const htmlParts = JSON.parse(rawDataString);\n  html = Array.isArray(htmlParts) ? htmlParts.join('') : rawDataString;\n} catch (e) {\n  html = rawDataString;\n}\n\nconst result = {};\n\n/**\n * Hàm tiện ích để làm sạch văn bản HTML.\n * @param {string} str - Chuỗi HTML đầu vào.\n * @returns {string} - Văn bản sạch.\n */\nfunction cleanup(str) {\n  if (!str) return '';\n  return str.replace(/<[^>]*>?/g, ' ').replace(/\\s+/g, ' ').trim();\n}\n\n// 1. Trích xuất Ngày Dương Lịch\nconst duongLichMatch = html.match(/Ngày <b>Dương Lịch<\\/b>:<span[^>]+>([^<]+)/i);\nresult['NgayDuongLich'] = cleanup(duongLichMatch?.[1] || '');\n\n// 2. Trích xuất Ngày Âm Lịch\nconst amLichMatch = html.match(/Ngày <b>Âm Lịch<\\/b>:\\s*<span[^>]+>([^<]+)/i);\nresult['NgayAmLich'] = cleanup(amLichMatch?.[1] || '');\n\n// 3. Trích xuất Ngày trong tuần\nconst thuMatch = html.match(/Ngày trong tuần: <b>([^<]+)/i);\nresult['NgayTrongTuan'] = cleanup(thuMatch?.[1] || '');\n\n// 4. Trích xuất Ngày Can Chi\nconst canChiMatch = html.match(/<p>Ngày <b>([^<]+)<\\/b> tháng <b>([^<]+)<\\/b> năm <b>([^<]+)<\\/b><\\/p>/i);\nif (canChiMatch) {\n    const ngay = cleanup(canChiMatch[1]);\n    const thang = cleanup(canChiMatch[2]);\n    const nam = cleanup(canChiMatch[3]);\n    result['NgayCanChi'] = `Ngày ${ngay} tháng ${thang} năm ${nam}`;\n} else {\n    result['NgayCanChi'] = '';\n}\n\nreturn [{ json: result }];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[4832,2128],"id":"18f60c7c-811d-4a95-9109-19779142a674","name":"Code6"},{"parameters":{"jsCode":"// Kiểm tra dữ liệu đầu vào\nconst inputData = items[0];\nlet htmlContent = \"\";\n\n// Kiểm tra cấu trúc của dữ liệu đầu vào\nif (inputData && typeof inputData === 'object') {\n  // Nếu dữ liệu là một đối tượng, thử lấy thuộc tính 'data'\n  if (inputData.data) {\n    htmlContent = inputData.data;\n  } else if (inputData.json && inputData.json.data) {\n    // Thử lấy từ json.data nếu có\n    htmlContent = inputData.json.data;\n  } else {\n    // Thử tìm bất kỳ thuộc tính nào chứa chuỗi HTML\n    for (const key in inputData) {\n      if (typeof inputData[key] === 'string' && \n          (inputData[key].includes('<div') || inputData[key].includes('<table'))) {\n        htmlContent = inputData[key];\n        break;\n      }\n    }\n  }\n} else if (typeof inputData === 'string') {\n  // Nếu dữ liệu là một chuỗi, sử dụng trực tiếp\n  htmlContent = inputData;\n}\n\n// Xử lý HTML nếu có\nconst result = [];\nlet updateTime = \"\";\nlet dataSource = \"\";\n\nif (htmlContent && htmlContent.length > 0) {\n  try {\n    // Tìm tất cả các bảng trong HTML\n    const tableRegex = /<table[^>]*>[\\s\\S]*?<tbody>[\\s\\S]*?<\\/tbody>[\\s\\S]*?<\\/table>/g;\n    let tableMatch;\n    \n    while ((tableMatch = tableRegex.exec(htmlContent)) !== null) {\n      const tableContent = tableMatch[0];\n      const violation = {};\n      \n      // Tìm tất cả các hàng trong bảng\n      const rowRegex = /<tr>[\\s\\S]*?<td>(.*?)<\\/td>[\\s\\S]*?<td>([\\s\\S]*?)<\\/td>[\\s\\S]*?<\\/tr>/g;\n      let rowMatch;\n      \n      while ((rowMatch = rowRegex.exec(tableContent)) !== null) {\n        if (rowMatch.length >= 3) {\n          const key = rowMatch[1].replace(':', '').trim();\n          let value = rowMatch[2].trim();\n          \n          // Loại bỏ HTML tags từ giá trị\n          value = value.replace(/<button.*?<\\/button>/g, '');\n          value = value.replace(/<[^>]*>/g, ' ').replace(/\\s+/g, ' ').trim();\n          \n          // Chuyển đổi key thành camelCase\n          const camelKey = key\n            .normalize('NFD')\n            .replace(/[\\u0300-\\u036f]/g, '')\n            .replace(/đ/g, 'd')\n            .replace(/Đ/g, 'D')\n            .replace(/\\s+(.)/g, (match, group) => group.toUpperCase())\n            .replace(/\\s/g, '')\n            .replace(/^(.)/, (match, group) => group.toLowerCase());\n          \n          violation[camelKey] = value;\n        }\n      }\n      \n      // Chỉ thêm vi phạm nếu có ít nhất một trường dữ liệu\n      if (Object.keys(violation).length > 0) {\n        result.push(violation);\n      }\n    }\n    \n    // Trích xuất thời gian cập nhật\n    const updateTimeMatch = htmlContent.match(/Dữ liệu được cập nhật vào lúc: ([\\d:, -]+)/);\n    if (updateTimeMatch && updateTimeMatch[1]) {\n      updateTime = updateTimeMatch[1].trim();\n    }\n    \n    // Trích xuất nguồn dữ liệu\n    const sourceMatch = htmlContent.match(/Nguồn: <span[^>]*>(.*?)<\\/span>/);\n    if (sourceMatch && sourceMatch[1]) {\n      dataSource = sourceMatch[1].trim();\n    }\n    \n  } catch (error) {\n    return {\n      json: {\n        error: true,\n        message: `Lỗi khi xử lý dữ liệu: ${error.message}`\n      }\n    };\n  }\n}\n\n// Trả về kết quả\nreturn {\n  json: {\n    violations: result,\n    totalViolations: result.length,\n    licensePlate: result.length > 0 ? result[0].bienKiemSoat : '',\n    vehicleType: result.length > 0 ? result[0].loaiPhuongTien : '',\n    metadata: {\n      updateTime: updateTime,\n      dataSource: dataSource\n    }\n  }\n};"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[4880,896],"id":"b589ab17-e056-4dac-89cf-8c7d334f4d67","name":"Code7","onError":"continueRegularOutput"},{"parameters":{"jsCode":"// Kiểm tra cấu trúc dữ liệu đầu vào\nlet htmlContent = \"\";\n\n// Kiểm tra xem items có tồn tại không\nif (!items || !Array.isArray(items) || items.length === 0) {\n  return {\n    json: {\n      error: true,\n      message: \"Dữ liệu đầu vào không hợp lệ hoặc rỗng\"\n    }\n  };\n}\n\n// Kiểm tra cấu trúc của items[0]\nconst inputData = items[0];\nif (typeof inputData === 'object') {\n  // Thử lấy dữ liệu từ các thuộc tính phổ biến\n  if (inputData.data) {\n    htmlContent = inputData.data;\n  } else if (inputData.json && inputData.json.data) {\n    htmlContent = inputData.json.data;\n  } else if (inputData.body) {\n    htmlContent = inputData.body;\n  } else if (inputData.content) {\n    htmlContent = inputData.content;\n  } else if (inputData.html) {\n    htmlContent = inputData.html;\n  }\n} else if (typeof inputData === 'string') {\n  htmlContent = inputData;\n}\n\n// Kiểm tra xem chúng ta đã có HTML chưa\nif (!htmlContent) {\n  return {\n    json: {\n      error: true,\n      message: \"Không thể tìm thấy dữ liệu HTML\"\n    }\n  };\n}\n\nconst result = {};\n\ntry {\n  // Trích xuất giải đặc biệt (G.ĐB)\n  const gdbMatch = htmlContent.match(/<td>G\\.ĐB<\\/td>\\s*<td[^>]*>\\s*<span[^>]*>([^<]+)<\\/span>/);\n  result.giai_db = gdbMatch ? gdbMatch[1].trim() : null;\n\n  // Trích xuất giải nhất (G.1)\n  const g1Match = htmlContent.match(/<td>G\\.1<\\/td>\\s*<td[^>]*>\\s*<span[^>]*>([^<]+)<\\/span>/);\n  result.giai_nhat = g1Match ? g1Match[1].trim() : null;\n\n  // Trích xuất giải nhì (G.2)\n  const g2Match = htmlContent.match(/<td>G\\.2<\\/td>\\s*<td[^>]*>([\\s\\S]*?)<\\/td>/);\n  if (g2Match) {\n    const g2Numbers = g2Match[1].match(/<span[^>]*>([^<]+)<\\/span>/g);\n    if (g2Numbers) {\n      result.giai_nhi = g2Numbers.map(span => span.replace(/<[^>]*>/g, '').trim()).join(' ');\n    }\n  }\n\n  // Trích xuất giải ba (G.3)\n  const g3Match = htmlContent.match(/<td>G\\.3<\\/td>\\s*<td[^>]*>([\\s\\S]*?)<\\/td>/);\n  if (g3Match) {\n    const g3Numbers = g3Match[1].match(/<span[^>]*>([^<]+)<\\/span>/g);\n    if (g3Numbers) {\n      result.giai_ba = g3Numbers.map(span => span.replace(/<[^>]*>/g, '').trim()).join(' ');\n    }\n  }\n\n  // Trích xuất giải tư (G.4)\n  const g4Match = htmlContent.match(/<td>G\\.4<\\/td>\\s*<td[^>]*>([\\s\\S]*?)<\\/td>/);\n  if (g4Match) {\n    const g4Numbers = g4Match[1].match(/<span[^>]*>([^<]+)<\\/span>/g);\n    if (g4Numbers) {\n      result.giai_tu = g4Numbers.map(span => span.replace(/<[^>]*>/g, '').trim()).join(' ');\n    }\n  }\n\n  // Trích xuất giải năm (G.5)\n  const g5Match = htmlContent.match(/<td>G\\.5<\\/td>\\s*<td[^>]*>([\\s\\S]*?)<\\/td>/);\n  if (g5Match) {\n    const g5Numbers = g5Match[1].match(/<span[^>]*>([^<]+)<\\/span>/g);\n    if (g5Numbers) {\n      result.giai_nam = g5Numbers.map(span => span.replace(/<[^>]*>/g, '').trim()).join(' ');\n    }\n  }\n\n  // Trích xuất giải sáu (G.6)\n  const g6Match = htmlContent.match(/<td>G\\.6<\\/td>\\s*<td[^>]*>([\\s\\S]*?)<\\/td>/);\n  if (g6Match) {\n    const g6Numbers = g6Match[1].match(/<span[^>]*>([^<]+)<\\/span>/g);\n    if (g6Numbers) {\n      result.giai_sau = g6Numbers.map(span => span.replace(/<[^>]*>/g, '').trim()).join(' ');\n    }\n  }\n\n  // Trích xuất giải bảy (G.7)\n  const g7Match = htmlContent.match(/<td>G\\.7<\\/td>\\s*<td[^>]*>([\\s\\S]*?)<\\/td>/);\n  if (g7Match) {\n    const g7Numbers = g7Match[1].match(/<span[^>]*>([^<]+)<\\/span>/g);\n    if (g7Numbers) {\n      result.giai_bay = g7Numbers.map(span => span.replace(/<[^>]*>/g, '').trim()).join(' ');\n    }\n  }\n\n  // Trích xuất bảng loto\n  const lotoMatch = htmlContent.match(/<span class=\"link-pad-left padding10\">Loto miền Bắc<\\/span>[\\s\\S]*?<table[^>]*>([\\s\\S]*?)<\\/table>/);\n  if (lotoMatch) {\n    const lotoRows = lotoMatch[1].match(/<tr>\\s*<td[^>]*>(\\d+)<\\/td>\\s*<td[^>]*>([\\s\\S]*?)<\\/td>\\s*<\\/tr>/g);\n    if (lotoRows) {\n      result.loto = {};\n      lotoRows.forEach(row => {\n        const match = row.match(/<tr>\\s*<td[^>]*>(\\d+)<\\/td>\\s*<td[^>]*>([\\s\\S]*?)<\\/td>\\s*<\\/tr>/);\n        if (match) {\n          const head = match[1];\n          const content = match[2].replace(/<[^>]*>/g, '').replace(/\\s+/g, ' ').trim();\n          result.loto[head] = content;\n        }\n      });\n    }\n  }\n\n} catch (error) {\n  return {\n    json: {\n      error: true,\n      message: `Lỗi khi xử lý dữ liệu: ${error.message}`\n    }\n  };\n}\n\n// Trả về kết quả\nreturn {\n  json: {\n    success: true,\n    data: result\n  }\n};"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[4880,1024],"id":"0f9bf554-d6c1-4d06-a3a5-93b41ae7eb3b","name":"Code8","onError":"continueRegularOutput"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"75e7b36f-3fc3-459d-a807-1e83af718c98","leftValue":"={{ $('Start').item.json.chitiet }}","rightValue":"0","operator":{"type":"string","operation":"notEquals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[4496,2032],"id":"e7650cb8-9efc-4e0f-89ec-96504bed95b4","name":"If1"}],"connections":{"DeepSeek":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":1}]]},"Webhook":{"main":[[{"node":"to json","type":"main","index":0}]]},"Google Gemini Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"If text":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"If voice":{"main":[[{"node":"stt","type":"main","index":0}]]},"to json":{"main":[[{"node":"If voice","type":"main","index":0},{"node":"If text","type":"main","index":0},{"node":"If img","type":"main","index":0}]]},"maxLen":{"main":[[{"node":"Call a service","type":"main","index":0}]]},"Code":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"stt":{"main":[[{"node":"Code","type":"main","index":0}]]},"AI Agent":{"main":[[{"node":"maxLen","type":"main","index":0}]]},"If img":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"google":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"tracuu":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]},"download":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"HTTP Request":{"main":[[]]},"HTTP Request1":{"main":[[]]},"Download file":{"main":[[]]},"If":{"main":[[],[{"node":"Merge","type":"main","index":1}]]},"Merge":{"main":[[{"node":"Extract Email Data","type":"main","index":0}]]},"Replace Me":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Apply New Label":{"main":[[{"node":"Create New Label","type":"main","index":0}]]},"Loop Over Items":{"main":[[],[{"node":"Gmail - Single Message","type":"main","index":0}]]},"Create New Label":{"main":[[{"node":"Replace Me","type":"main","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"Categorize Email with AI","type":"ai_languageModel","index":0}]]},"Store AI Category":{"main":[[{"node":"Check if Label Exists","type":"main","index":0},{"node":"List All Gmail Labels","type":"main","index":0}]]},"Extract Email Data":{"main":[[{"node":"Categorize Email with AI","type":"main","index":0}]]},"Apply Label to Email":{"main":[[{"node":"Replace Me","type":"main","index":0}]]},"Check if Label Exists":{"main":[[{"node":"Apply New Label","type":"main","index":0}],[],[{"node":"Apply Label to Email","type":"main","index":0}]]},"List All Gmail Labels":{"main":[[{"node":"Check if Label Exists","type":"main","index":1}]]},"Gmail - Single Message":{"main":[[{"node":"If","type":"main","index":0},{"node":"Merge","type":"main","index":0}]]},"Categorize Email with AI":{"main":[[{"node":"Store AI Category","type":"main","index":0}]]},"Gmail - Get All Messages":{"main":[[{"node":"Filter Emails Without Excluded Labels","type":"main","index":0}]]},"Filter Emails Without Excluded Labels":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Schedule Gmail":{"main":[[{"node":"Gmail - Get All Messages","type":"main","index":0}]]},"Schedule Phat nguoi":{"main":[[{"node":"phat-nguoi-oto","type":"main","index":0},{"node":"phat-nguoi-xemay","type":"main","index":0}]]},"phat-nguoi-oto":{"main":[[{"node":"Code1","type":"main","index":0}]]},"phat-nguoi-xemay":{"main":[[{"node":"Code1","type":"main","index":0}]]},"If co vi pham":{"main":[[{"node":"sent-zalo-my-home","type":"main","index":0}]]},"dantri":{"main":[[{"node":"lọc","type":"main","index":0}]]},"thannien":{"main":[[{"node":"lọc","type":"main","index":0}]]},"lọc":{"main":[[{"node":"lưu tin tức","type":"main","index":0}]]},"vnexpress":{"main":[[{"node":"lọc","type":"main","index":0}]]},"Code1":{"main":[[{"node":"If co vi pham","type":"main","index":0}]]},"Start":{"main":[[{"node":"Switch1","type":"main","index":0}]]},"Switch":{"main":[[{"node":"Code8","type":"main","index":0}],[{"node":"Code2","type":"main","index":0}],[{"node":"Code3","type":"main","index":0}]]},"phat-nguoi":{"main":[[{"node":"Code7","type":"main","index":0}]]},"xo-so":{"main":[[{"node":"Switch","type":"main","index":0}]]},"Code5":{"main":[[{"node":"If Erro","type":"main","index":0}]]},"Switch1":{"main":[[{"node":"phat-nguoi","type":"main","index":0}],[{"node":"xo-so","type":"main","index":0}],[{"node":"Find URL Captcha","type":"main","index":0}],[{"node":"Am Lich","type":"main","index":0}]]},"Get File Captcha":{"main":[[{"node":"Text Captcha","type":"main","index":0}]]},"Text Captcha":{"main":[[{"node":"POST Payload","type":"main","index":0}]]},"POST Payload":{"main":[[{"node":"Code5","type":"main","index":0}]]},"Find URL Captcha":{"main":[[{"node":"Find Get Headers","type":"main","index":0}]]},"Find Get Headers":{"main":[[{"node":"Get File Captcha","type":"main","index":0}]]},"If Erro":{"main":[[],[{"node":"Retry Max 5","type":"main","index":0}]]},"Retry Max 5":{"main":[[{"node":"Find URL Captcha","type":"main","index":0}]]},"Am Lich":{"main":[[{"node":"If1","type":"main","index":0}]]},"If1":{"main":[[{"node":"Code4","type":"main","index":0}],[{"node":"Code6","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"64153cad-12e1-4150-bde3-e886cc63633e","triggerCount":0,"shared":[{"createdAt":"2025-08-12T04:12:06.513Z","updatedAt":"2025-08-12T04:12:06.513Z","role":"workflow:owner","workflowId":"ydwnFhRCg0NmfUq9","projectId":"Bsx4kBdHQHZGGC5J"}],"tags":[]}