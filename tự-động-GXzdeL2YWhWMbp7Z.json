{"createdAt":"2025-08-03T13:07:51.836Z","updatedAt":"2025-09-07T01:32:48.594Z","id":"GXzdeL2YWhWMbp7Z","name":"tự động","active":true,"isArchived":false,"nodes":[{"parameters":{"content":"## Auto Gmail Labeling (Powered by OpenAI)","height":996,"width":1692},"id":"3aaacb51-a5c9-4529-b50e-55eaa4509c0f","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[-128,608],"typeVersion":1},{"parameters":{"jsCode":"// Kiểm tra dữ liệu đầu vào\nconst inputData = items[0];\nlet htmlContent = \"\";\n\n// Kiểm tra cấu trúc của dữ liệu đầu vào\nif (inputData && typeof inputData === 'object') {\n  // Nếu dữ liệu là một đối tượng, thử lấy thuộc tính 'data'\n  if (inputData.data) {\n    htmlContent = inputData.data;\n  } else if (inputData.json && inputData.json.data) {\n    // Thử lấy từ json.data nếu có\n    htmlContent = inputData.json.data;\n  } else {\n    // Thử tìm bất kỳ thuộc tính nào chứa chuỗi HTML\n    for (const key in inputData) {\n      if (typeof inputData[key] === 'string' && \n          (inputData[key].includes('<div') || inputData[key].includes('<table'))) {\n        htmlContent = inputData[key];\n        break;\n      }\n    }\n  }\n} else if (typeof inputData === 'string') {\n  // Nếu dữ liệu là một chuỗi, sử dụng trực tiếp\n  htmlContent = inputData;\n}\n\n// Xử lý HTML nếu có\nconst result = [];\nlet updateTime = \"\";\nlet dataSource = \"\";\n\nif (htmlContent && htmlContent.length > 0) {\n  try {\n    // Tìm tất cả các bảng trong HTML\n    const tableRegex = /<table[^>]*>[\\s\\S]*?<tbody>[\\s\\S]*?<\\/tbody>[\\s\\S]*?<\\/table>/g;\n    let tableMatch;\n    \n    while ((tableMatch = tableRegex.exec(htmlContent)) !== null) {\n      const tableContent = tableMatch[0];\n      const violation = {};\n      \n      // Tìm tất cả các hàng trong bảng\n      const rowRegex = /<tr>[\\s\\S]*?<td>(.*?)<\\/td>[\\s\\S]*?<td>([\\s\\S]*?)<\\/td>[\\s\\S]*?<\\/tr>/g;\n      let rowMatch;\n      \n      while ((rowMatch = rowRegex.exec(tableContent)) !== null) {\n        if (rowMatch.length >= 3) {\n          const key = rowMatch[1].replace(':', '').trim();\n          let value = rowMatch[2].trim();\n          \n          // Loại bỏ HTML tags từ giá trị\n          value = value.replace(/<button.*?<\\/button>/g, '');\n          value = value.replace(/<[^>]*>/g, ' ').replace(/\\s+/g, ' ').trim();\n          \n          // Chuyển đổi key thành camelCase\n          const camelKey = key\n            .normalize('NFD')\n            .replace(/[\\u0300-\\u036f]/g, '')\n            .replace(/đ/g, 'd')\n            .replace(/Đ/g, 'D')\n            .replace(/\\s+(.)/g, (match, group) => group.toUpperCase())\n            .replace(/\\s/g, '')\n            .replace(/^(.)/, (match, group) => group.toLowerCase());\n          \n          violation[camelKey] = value;\n        }\n      }\n      \n      // Chỉ thêm vi phạm nếu có ít nhất một trường dữ liệu\n      if (Object.keys(violation).length > 0) {\n        result.push(violation);\n      }\n    }\n    \n    // Trích xuất thời gian cập nhật\n    const updateTimeMatch = htmlContent.match(/Dữ liệu được cập nhật vào lúc: ([\\d:, -]+)/);\n    if (updateTimeMatch && updateTimeMatch[1]) {\n      updateTime = updateTimeMatch[1].trim();\n    }\n    \n    // Trích xuất nguồn dữ liệu\n    const sourceMatch = htmlContent.match(/Nguồn: <span[^>]*>(.*?)<\\/span>/);\n    if (sourceMatch && sourceMatch[1]) {\n      dataSource = sourceMatch[1].trim();\n    }\n    \n  } catch (error) {\n    return {\n      json: {\n        error: true,\n        message: `Lỗi khi xử lý dữ liệu: ${error.message}`\n      }\n    };\n  }\n}\n\n// Trả về kết quả\nreturn {\n  json: {\n    violations: result,\n    totalViolations: result.length,\n    licensePlate: result.length > 0 ? result[0].bienKiemSoat : '',\n    vehicleType: result.length > 0 ? result[0].loaiPhuongTien : '',\n    metadata: {\n      updateTime: updateTime,\n      dataSource: dataSource\n    }\n  }\n};"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[256,80],"id":"c99db99e-c397-4140-8add-9bce5112840b","name":"Code"},{"parameters":{"rule":{"interval":[{"field":"hours"}]}},"id":"38cbaf8f-7183-48a2-8dcf-83ae67202c58","name":"Schedule Phat nguoi","type":"n8n-nodes-base.scheduleTrigger","position":[-128,96],"typeVersion":1.2},{"parameters":{"url":"=https://api.phatnguoi.vn/web/tra-cuu/34C32787/1","sendHeaders":true,"headerParameters":{"parameters":[{"name":"User-Agent","value":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:140.0) Gecko/20100101 Firefox/140.0"},{"name":"Accept","value":"*/*"},{"name":"Accept-Language","value":"en-US,en;q=0.5"},{"name":"Accept-Encoding","value":"gzip, deflate, br, zstd"},{"name":"Origin","value":"https://phatnguoi.vn"},{"name":"Connection","value":"keep-alive"},{"name":"Referer","value":"https://phatnguoi.vn/"},{"name":"Sec-Fetch-Dest","value":"empty"},{"name":"Sec-Fetch-Mode","value":"cors"},{"name":"Sec-Fetch-Site","value":"same-site"}]},"options":{"response":{}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[80,-128],"id":"05840f33-2725-46c2-8060-5d2c04043346","name":"phat-nguoi-oto","retryOnFail":true,"onError":"continueRegularOutput"},{"parameters":{"url":"=https://api.phatnguoi.vn/web/tra-cuu/34B50323/2","sendHeaders":true,"headerParameters":{"parameters":[{"name":"User-Agent","value":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:140.0) Gecko/20100101 Firefox/140.0"},{"name":"Accept","value":"*/*"},{"name":"Accept-Language","value":"en-US,en;q=0.5"},{"name":"Accept-Encoding","value":"gzip, deflate, br, zstd"},{"name":"Origin","value":"https://phatnguoi.vn"},{"name":"Connection","value":"keep-alive"},{"name":"Referer","value":"https://phatnguoi.vn/"},{"name":"Sec-Fetch-Dest","value":"empty"},{"name":"Sec-Fetch-Mode","value":"cors"},{"name":"Sec-Fetch-Site","value":"same-site"}]},"options":{"response":{}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[80,256],"id":"23b3b67e-8fab-4743-ba7b-d42e4e74a2a2","name":"phat-nguoi-xemay","retryOnFail":true,"onError":"continueRegularOutput"},{"parameters":{"resource":"service","operation":"call","domain":"zalo_bot","service":"send_message","serviceAttributes":{"attributes":[{"name":"message","value":"=Có {{ $json.totalViolations }} lỗi phạt nguội\nLoại Phương Tiện: {{ $json.violations[0].loaiPhuongTien }}\nThời Gian Vi Phạm: {{ $json.violations[0].thoiGianViPham }}\nĐịa Điểm Vi Phạm: {{ $json.violations[0].diaDiemViPham }}\nTrạng Thái: {{ $json.violations[0].trangThai }}\nĐơn Vị Phát Hiện: {{ $json.violations[0].donViPhatHienViPham }}\nNơi Giải Quyết: {{ $json.violations[0].noiGiaiQuyetVuViec }}"},{"name":"thread_id","value":"6643404425553198601"},{"name":"account_selection","value":"+84947762285"},{"name":"type","value":"0"}]}},"type":"n8n-nodes-base.homeAssistant","typeVersion":1,"position":[640,0],"id":"39c1ced2-ff7d-4405-8343-7008210e1bcb","name":"sent-zalo-my-home","credentials":{"homeAssistantApi":{"id":"1lV5PEu2rtjuQlDB","name":"Home Assistant account"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"44c8d62f-87b4-40f9-b856-96a7349621f0","leftValue":"={{ $json.totalViolations }}","rightValue":0,"operator":{"type":"number","operation":"notEquals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[416,80],"id":"f7b0018e-fb38-42a5-9473-404a0629282e","name":"If co vi pham"},{"parameters":{"content":"Automatically get lookup and sent zalo","height":640,"width":992},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-176,-128],"id":"658dafe4-1546-4d17-b053-a52bed5593a0","name":"Sticky Note1"},{"parameters":{"content":"Automatically get news and save data","height":632,"width":684},"type":"n8n-nodes-base.stickyNote","position":[864,-128],"typeVersion":1,"id":"0fd196d7-a30f-45b3-9fee-b06868d3b8d9","name":"Sticky Note2"},{"parameters":{"url":"=https://api.phatnguoi.vn/web/tra-cuu/34C40736/1","sendHeaders":true,"headerParameters":{"parameters":[{"name":"User-Agent","value":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:140.0) Gecko/20100101 Firefox/140.0"},{"name":"Accept","value":"*/*"},{"name":"Accept-Language","value":"en-US,en;q=0.5"},{"name":"Accept-Encoding","value":"gzip, deflate, br, zstd"},{"name":"Origin","value":"https://phatnguoi.vn"},{"name":"Connection","value":"keep-alive"},{"name":"Referer","value":"https://phatnguoi.vn/"},{"name":"Sec-Fetch-Dest","value":"empty"},{"name":"Sec-Fetch-Mode","value":"cors"},{"name":"Sec-Fetch-Site","value":"same-site"}]},"options":{"response":{}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[80,80],"id":"34d8fb36-77ff-481f-bc23-5fd22a00b71d","name":"phat-nguoi-oto1","retryOnFail":true,"onError":"continueRegularOutput"},{"parameters":{"url":"=https://dbtt.edu.vn","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Accept-Language","value":"vi"},{"name":"User-Agent","value":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"},{"name":"Accept","value":"text/html,application/xhtml+xml,application/xml;q=0.9,/;q=0.8"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1984,96],"id":"8e5a14ea-b651-4921-a75e-18bf462c329d","name":"tinhthanhpho5"},{"parameters":{"jsCode":"const tinh = $json.tinh || [];\nconst url = $json.href || [];\nconst out = [];\n// 1. Tạo một Set để theo dõi các mục đã xuất hiện\nconst seen = new Set();\n\nfor (let i = 0; i < Math.min(tinh.length, url.length); i++) {\n  const n = (tinh[i] || '').trim();\n  const h = url[i] || '';\n\n  // Bỏ qua các mục không cần thiết\n  if (n.toLowerCase() === 'home' || n.toLowerCase() === 'forums') {\n    continue;\n  }\n\n  // 2. Tạo một khóa duy nhất từ tên và href\n  const uniqueKey = `${n}|${h}`;\n\n  // 3. Chỉ thêm vào kết quả nếu khóa này chưa tồn tại trong Set\n  if (!seen.has(uniqueKey)) {\n    // 4. Đánh dấu là đã thấy và thêm vào mảng kết quả\n    seen.add(uniqueKey);\n    out.push({ json: { tinh: n, huyen: 0, url: h } });\n  }\n}\n\nreturn out;"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2432,96],"id":"24974d96-a917-4f08-b6b5-d9dd873b5ccc","name":"Code15"},{"parameters":{"operation":"extractHtmlContent","extractionValues":{"values":[{"key":"tinh","cssSelector":"a.dropdown-item","returnArray":true},{"key":"href","cssSelector":"a.dropdown-item","returnValue":"attribute","attribute":"href","returnArray":true}]},"options":{}},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[2224,96],"id":"117d41d2-01f7-4a98-b4f7-3381a79a7324","name":"HTML3"},{"parameters":{"options":{}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[2624,96],"id":"7f6e4566-319c-4333-b684-7adcf5c318a8","name":"Loop Over Items1"},{"parameters":{},"type":"n8n-nodes-base.noOp","name":"Replace Me1","typeVersion":1,"position":[3072,112],"id":"ba4a7303-460a-46eb-a116-796129c6f489"},{"parameters":{"rule":{"interval":[{"field":"months","triggerAtHour":2}]}},"type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.2,"position":[1776,96],"id":"8279f051-94c3-4ddc-b3a6-6c74c5cf0074","name":"Schedule Trigger"},{"parameters":{"jsCode":"return items.map(item => {\n  return {\n    json: {\n      title: item.json.title,\n      link: item.json.link,\n      contentSnippet: item.json.contentSnippet,\n      isoDate: item.json.isoDate\n    }\n  };\n});"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1136,128],"id":"8d8bf4d4-3d42-44d7-b943-8ac61c1a3a75","name":"lọc"},{"parameters":{"schema":{"__rl":true,"value":"public","mode":"list","cachedResultName":"public"},"table":{"__rl":true,"value":"vnnew","mode":"list","cachedResultName":"vnnew"},"columns":{"mappingMode":"defineBelow","value":{"title":"={{ $json.title }}","link":"={{ $json.link }}","contentsnippet":"={{ $json.contentSnippet }}","isodate":"={{ $json.isoDate }}"},"matchingColumns":[],"schema":[{"id":"title","displayName":"title","required":true,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"link","displayName":"link","required":true,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"contentsnippet","displayName":"contentsnippet","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"isodate","displayName":"isodate","required":true,"defaultMatch":false,"display":true,"type":"dateTime","canBeUsedToMatch":true,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[1344,128],"id":"1a977f7c-8cb6-4817-bebf-1381812b560a","name":"lưu tin tức","credentials":{"postgres":{"id":"vDBK6XLC0TBpoMww","name":"Postgres account"}}},{"parameters":{"pollTimes":{"item":[{"mode":"custom","cronExpression":"0 */9 * * * *"}]},"feedUrl":"https://vnexpress.net/rss/tin-moi-nhat.rss"},"type":"n8n-nodes-base.rssFeedReadTrigger","typeVersion":1,"position":[896,-32],"id":"cf512574-0362-45e9-a83f-410303d33697","name":"vnexpress"},{"parameters":{"pollTimes":{"item":[{"mode":"custom","cronExpression":"0 */10 * * * *"}]},"feedUrl":"https://thanhnien.vn/rss/home.rss"},"type":"n8n-nodes-base.rssFeedReadTrigger","typeVersion":1,"position":[896,112],"id":"8ab67e80-30c0-402c-a9dd-0fe57902aa62","name":"thannien"},{"parameters":{"pollTimes":{"item":[{"mode":"custom","cronExpression":"0 */8 * * * *"}]},"feedUrl":"https://dantri.com.vn/rss/home.rss"},"type":"n8n-nodes-base.rssFeedReadTrigger","typeVersion":1,"position":[896,272],"id":"9461dde6-d188-4527-b7a1-3def364bf713","name":"dantri"},{"parameters":{"schema":{"__rl":true,"value":"public","mode":"list","cachedResultName":"public"},"table":{"__rl":true,"value":"weather","mode":"list","cachedResultName":"weather"},"columns":{"mappingMode":"defineBelow","value":{"url":"={{ $json.url }}","province":"={{ $json.tinh }}","district":"={{ $json.huyen }}"},"matchingColumns":["tinh","huyen"],"schema":[{"id":"province","displayName":"province","required":true,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"district","displayName":"district","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"url","displayName":"url","required":true,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[2880,112],"id":"8b466b3d-5848-4957-9027-b71a4d5c47c3","name":"Insert rows in a table","executeOnce":false,"credentials":{"postgres":{"id":"vDBK6XLC0TBpoMww","name":"Postgres account"}},"onError":"continueRegularOutput"},{"parameters":{"options":{}},"id":"33314bdc-4d58-492a-ac6f-d51f7702ef7b","name":"Loop Over Items","type":"n8n-nodes-base.splitInBatches","position":[32,944],"typeVersion":3},{"parameters":{},"id":"1ff9ad4f-1b8f-403c-880c-787fcb802e7c","name":"Replace Me","type":"n8n-nodes-base.noOp","position":[896,1328],"typeVersion":1},{"parameters":{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"conditions":[{"id":"2f466934-e257-4315-8a7f-5e3dde987430","operator":{"name":"filter.operator.equals","type":"string","operation":"equals"},"leftValue":"={{ $json.labelIds[2] }}","rightValue":"={{ $json.labelIds[2] }}"}],"combinator":"and"},"options":{}},"id":"ea68081e-b5f8-4258-9b39-5c14e19873d7","name":"If","type":"n8n-nodes-base.if","position":[400,1056],"typeVersion":2.2},{"parameters":{},"id":"2be09fc4-9090-4331-a1b6-c3583a518462","name":"Merge","type":"n8n-nodes-base.merge","position":[544,976],"typeVersion":3.1},{"parameters":{"operation":"getAll","limit":20,"simple":false,"filters":{"readStatus":"both"},"options":{}},"id":"f349876b-3d5b-4050-b5d7-dfbc8263d07a","name":"Gmail - Get All Messages","type":"n8n-nodes-base.gmail","position":[720,720],"webhookId":"a501a86b-b2df-45ec-b0d9-178765859a0f","typeVersion":2.1,"credentials":{"gmailOAuth2":{"id":"RgYFdPUJ820D4HyQ","name":"nguyenvanviet"}}},{"parameters":{"operation":"get","messageId":"={{ $json.id }}","simple":false,"options":{}},"id":"4b0db8c8-ca2d-4322-a992-b3e9524e8ef0","name":"Gmail - Single Message","type":"n8n-nodes-base.gmail","position":[272,960],"webhookId":"ebc7d7c4-aece-4cd4-a46f-dff18891931e","typeVersion":2.1,"credentials":{"gmailOAuth2":{"id":"RgYFdPUJ820D4HyQ","name":"nguyenvanviet"}}},{"parameters":{"assignments":{"assignments":[{"id":"2e246278-eccb-4cd5-8c93-7daa824066e3","name":"id","type":"string","value":"={{ $json.id }}"},{"id":"06e5dde5-dfce-4d4d-859d-b364301cb5aa","name":"from","type":"string","value":"={{ $json.headers.from }}"},{"id":"e10231b9-fbb1-447a-a3fc-3ba8e5a9d314","name":"headers.subject","type":"string","value":"={{ $json.headers.subject }}"},{"id":"6a472d41-0f6e-4803-8d94-4b4f8272e66c","name":"text","type":"string","value":"={{ $json.text }}"}]},"options":{}},"id":"647e3484-5ab0-4582-98f2-d8afb0ffd1a5","name":"Extract Email Data","type":"n8n-nodes-base.set","position":[736,976],"typeVersion":3.4},{"parameters":{"promptType":"define","text":"=Here is the email details:\nFrom: { $('Merge').item.json.headers.from }}\nSubject line: {{ $json.headers.subject }}\nEmail Body: \n{{ $json.text }}","hasOutputParser":true,"options":{"systemMessage":"You are my Personal Email Labeler.  \nWhen I feed you the subject and body of a new email, you must assign exactly one label—no extra text.\n\nAvailable labels:\n- Newsletter  \n- Inquiry  \n- Invoice  \n- Proposal  \n- Action Required  \n- Follow-up Reminder  \n- Task  \n- Personal  \n- Urgent  \n- Bank  \n- Job Update  \n- Spam / Junk  \n- Social / Networking  \n- Receipt  \n- Event Invite  \n- Subscription Renewal  \n- System Notification  \n\nLabel definitions:\n1. Newsletter  \n   • Subscription updates, promotions, digests.  \n   • No reply needed—just file away.  \n2. Inquiry  \n   • Sender asks a question or requests information.  \n   • Prioritize and suggest replying.  \n3. Invoice  \n   • Billing, receipts, payment requests.  \n   • Flag if payment is due.  \n4. Proposal  \n   • Business offers, contracts, collaboration pitches.  \n   • Flag for review; consider acknowledging receipt.  \n5. Action Required  \n   • Requests that demand you do something (book, confirm, complete).  \n   • Mark and suggest a reminder.  \n6. Follow-up Reminder  \n   • Emails reminding you of something pending or that you already acted on.  \n   • Suggest checking status or pinging again.  \n7. Task  \n   • Contains to-do items or project steps.  \n   • Extract tasks, prioritize by deadline.  \n8. Personal  \n   • From friends or family; non-work.  \n   • Keep accessible but low urgency unless marked urgent.  \n9. Urgent  \n   • Critical deadlines, emergencies, time-sensitive.  \n   • Bump to top of your inbox; reply ASAP.  \n10. Bank  \n    • Statements, alerts, transaction notices, fraud warnings from your bank.  \n    • Flag if action is needed (e.g., verify, transfer, dispute).  \n11. Job Update  \n    • Direct messages from recruiters/HR or alerts from job portals (LinkedIn, Naukri, etc.).  \n    • Flag as relevant opportunity; suggest acknowledging or bookmarking.  \n12. Spam / Junk  \n    • Unwanted bulk mail, phishing attempts, obvious ads.  \n    • Auto-archive or delete.  \n13. Social / Networking  \n    • Notifications from social sites (GitHub, Twitter, forums) not job-related.  \n    • File separately from Job Update.  \n14. Receipt  \n    • E-commerce order confirmations, tickets, one-off purchase receipts.  \n    • Archive after processing.  \n15. Event Invite  \n    • Calendar invitations or RSVPs (Google Meet, Zoom, Outlook).  \n    • Accept/decline or add to calendar.  \n16. Subscription Renewal  \n    • Reminders for software licenses, memberships, domain renewals.  \n    • Flag for manual renewal.  \n17. System Notification  \n    • Alerts from monitoring tools, CI/CD, cloud services, security scanners.  \n    • Triage or forward to team channel.\n\nRules:\n- Read subject + body.  \n- Choose the single best label.  \n- Output **only** that label."}},"id":"6f347f99-5344-48fa-83dc-4fcacef8c5d7","name":"Categorize Email with AI","type":"@n8n/n8n-nodes-langchain.agent","position":[944,976],"typeVersion":1.7},{"parameters":{"assignments":{"assignments":[{"id":"2494d69d-3e5e-42ba-88d2-b76ca1962881","name":"output","type":"string","value":"={{ $json.output }}"}]},"options":{}},"id":"67dd84a6-8673-4825-b544-59fe73127a09","name":"Store AI Category","type":"n8n-nodes-base.set","position":[1328,976],"typeVersion":3.4},{"parameters":{"resource":"label","returnAll":true},"id":"f06d4f2f-087d-4149-838f-9bf33db8cfd9","name":"List All Gmail Labels","type":"n8n-nodes-base.gmail","position":[48,1344],"webhookId":"5c3cbc0b-9239-4a17-a8ec-bc8819341e47","typeVersion":2.1,"credentials":{"gmailOAuth2":{"id":"RgYFdPUJ820D4HyQ","name":"nguyenvanviet"}}},{"parameters":{"mergeByFields":{"values":[{"field1":"output","field2":"name"}]},"fuzzyCompare":true,"options":{"multipleMatches":"first"}},"id":"ac972fb9-1bd5-4b21-9e4c-fb3f8c17e5a3","name":"Check if Label Exists","type":"n8n-nodes-base.compareDatasets","position":[272,1280],"typeVersion":2.3},{"parameters":{"operation":"addLabels","messageId":"={{ $('Extract Email Data').item.json.id }}","labelIds":"={{ $json.different.id.inputB }}"},"id":"682e7ebe-2fc8-44b2-a4c7-69df9ae02024","name":"Apply Label to Email","type":"n8n-nodes-base.gmail","position":[672,1328],"webhookId":"4a35699e-da45-48e9-8e12-d22b2dcca62e","typeVersion":2.1,"credentials":{"gmailOAuth2":{"id":"RgYFdPUJ820D4HyQ","name":"nguyenvanviet"}}},{"parameters":{"resource":"label","operation":"create","name":"={{ $('Store AI Category').item.json.output }}","options":{}},"id":"676161c3-1a8b-4fae-b2bb-86b3ea3097df","name":"Apply New Label","type":"n8n-nodes-base.gmail","position":[1328,1264],"webhookId":"a6722fdc-15cb-4796-b82d-53cc23060640","typeVersion":2.1,"credentials":{"gmailOAuth2":{"id":"RgYFdPUJ820D4HyQ","name":"nguyenvanviet"}}},{"parameters":{"operation":"addLabels","messageId":"={{ $('Extract Email Data').item.json.id }}","labelIds":"={{ $json.id }}"},"id":"32f6c670-0b6f-4032-ae97-0b5bfefae091","name":"Create New Label","type":"n8n-nodes-base.gmail","position":[1104,1328],"webhookId":"9e401ad8-b89c-4015-a3cf-b1000ac51ae1","typeVersion":2.1,"credentials":{"gmailOAuth2":{"id":"RgYFdPUJ820D4HyQ","name":"nguyenvanviet"}}},{"parameters":{"jsCode":"const excludedLabelIds = [\n  \"Label_5\",   // Newsletter\n  \"Label_21\",  // Inquiry\n  \"Label_11\",  // Invoice\n  \"Label_9\",   // Proposal\n  \"Label_52\",  // Action Required\n  \"Label_55\",  // Follow-up Reminder\n  \"Label_53\",  // Task\n  \"Label_44\",  // Personal\n  \"Label_54\",  // Urgent\n  \"Label_12\",  // Bank\n  \"Label_3\",   // Job Update\n  \"Label_42\",  // Spam / Junk\n  \"Label_7\",   // Social / Networking\n  \"Label_8\",   // Receipt\n  \"Label_2\",   // Event Invite\n  \"Label_10\",  // Subscription Renewal\n  \"Label_4\"    // System Notification\n];\n\n\nreturn items.filter(item => {\n  const labels = item.json.labelIds || [];\n  // Exclude if ANY excluded label is present\n  return !labels.some(label => excludedLabelIds.includes(label));\n});\n"},"id":"d1a3161e-c636-443c-82da-1603c1147a64","name":"Filter Emails Without Excluded Labels","type":"n8n-nodes-base.code","position":[1312,720],"typeVersion":2},{"parameters":{"rule":{"interval":[{"field":"hours","hoursInterval":8}]}},"id":"174a562c-1e89-4dc8-abd0-8da076bc87f0","name":"Schedule Gmail","type":"n8n-nodes-base.scheduleTrigger","position":[112,720],"typeVersion":1.2},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[752,1184],"id":"1d20ca76-1e53-4e8c-a21c-876454c8c6b5","name":"Google Gemini Chat Model","credentials":{"googlePalmApi":{"id":"Noq5n0k4rwmKdMBk","name":"tritue"}}},{"parameters":{"operation":"select","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"vnnew","mode":"list","cachedResultName":"vnnew"},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[1744,416],"id":"e5ed1aba-8845-49a8-a455-7fc37eddbee7","name":"Select rows from a table","credentials":{"postgres":{"id":"vDBK6XLC0TBpoMww","name":"Postgres account"}}}],"connections":{"Schedule Phat nguoi":{"main":[[{"node":"phat-nguoi-oto","type":"main","index":0},{"node":"phat-nguoi-xemay","type":"main","index":0},{"node":"phat-nguoi-oto1","type":"main","index":0}]]},"phat-nguoi-oto":{"main":[[{"node":"Code","type":"main","index":0}]]},"Code":{"main":[[{"node":"If co vi pham","type":"main","index":0}]]},"phat-nguoi-xemay":{"main":[[{"node":"Code","type":"main","index":0}]]},"If co vi pham":{"main":[[{"node":"sent-zalo-my-home","type":"main","index":0}]]},"phat-nguoi-oto1":{"main":[[{"node":"Code","type":"main","index":0}]]},"tinhthanhpho5":{"main":[[{"node":"HTML3","type":"main","index":0}]]},"Code15":{"main":[[{"node":"Loop Over Items1","type":"main","index":0}]]},"HTML3":{"main":[[{"node":"Code15","type":"main","index":0}]]},"Loop Over Items1":{"main":[[],[{"node":"Insert rows in a table","type":"main","index":0}]]},"Replace Me1":{"main":[[{"node":"Loop Over Items1","type":"main","index":0}]]},"Schedule Trigger":{"main":[[{"node":"tinhthanhpho5","type":"main","index":0}]]},"lọc":{"main":[[{"node":"lưu tin tức","type":"main","index":0}]]},"vnexpress":{"main":[[{"node":"lọc","type":"main","index":0}]]},"thannien":{"main":[[{"node":"lọc","type":"main","index":0}]]},"dantri":{"main":[[{"node":"lọc","type":"main","index":0}]]},"Insert rows in a table":{"main":[[{"node":"Replace Me1","type":"main","index":0}]]},"Loop Over Items":{"main":[[],[{"node":"Gmail - Single Message","type":"main","index":0}]]},"Replace Me":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"If":{"main":[[],[{"node":"Merge","type":"main","index":1}]]},"Merge":{"main":[[{"node":"Extract Email Data","type":"main","index":0}]]},"Gmail - Get All Messages":{"main":[[{"node":"Filter Emails Without Excluded Labels","type":"main","index":0}]]},"Gmail - Single Message":{"main":[[{"node":"If","type":"main","index":0},{"node":"Merge","type":"main","index":0}]]},"Extract Email Data":{"main":[[{"node":"Categorize Email with AI","type":"main","index":0}]]},"Categorize Email with AI":{"main":[[{"node":"Store AI Category","type":"main","index":0}]]},"Store AI Category":{"main":[[{"node":"Check if Label Exists","type":"main","index":0},{"node":"List All Gmail Labels","type":"main","index":0}]]},"List All Gmail Labels":{"main":[[{"node":"Check if Label Exists","type":"main","index":1}]]},"Check if Label Exists":{"main":[[{"node":"Apply New Label","type":"main","index":0}],[],[{"node":"Apply Label to Email","type":"main","index":0}]]},"Apply Label to Email":{"main":[[{"node":"Replace Me","type":"main","index":0}]]},"Apply New Label":{"main":[[{"node":"Create New Label","type":"main","index":0}]]},"Create New Label":{"main":[[{"node":"Replace Me","type":"main","index":0}]]},"Filter Emails Without Excluded Labels":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Schedule Gmail":{"main":[[{"node":"Gmail - Get All Messages","type":"main","index":0}]]},"Google Gemini Chat Model":{"ai_languageModel":[[{"node":"Categorize Email with AI","type":"ai_languageModel","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":{"node:Schedule Gmail":{"recurrenceRules":[16]},"node:Schedule Phat nguoi":{"recurrenceRules":[]},"node:dantri":{"lastItemDate":"2025-09-06T14:14:29.000Z","lastTimeChecked":"2025-08-10T06:20:00Z"},"node:thannien":{"lastItemDate":"2025-09-07T10:05:00.000Z","lastTimeChecked":"2025-08-10T06:20:00Z"},"node:vnexpress":{"lastItemDate":"2025-09-07T09:55:31.000Z","lastTimeChecked":"2025-08-10T06:20:00Z"},"node:Schedule Trigger":{"recurrenceRules":[]},"node:dantri1":{"lastItemDate":"2025-08-23T19:35:44.000Z"},"node:thannien1":{"lastItemDate":"2025-08-24T09:51:00.000Z"},"node:vnexpress1":{"lastItemDate":"2025-08-24T09:28:06.000Z"}},"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"296ec26d-38da-4fbd-8851-fe97ea80bafa","triggerCount":6,"shared":[{"createdAt":"2025-08-03T13:07:51.836Z","updatedAt":"2025-08-03T13:07:51.836Z","role":"workflow:owner","workflowId":"GXzdeL2YWhWMbp7Z","projectId":"Bsx4kBdHQHZGGC5J"}],"tags":[]}